<library>


    <!-- Tool Icon -->
    <!-- Written for Micropolis -->
    <!-- By Don Hopkins -->
    <!-- Licensed under GPLv3 -->


    <class name="toolicon"
        clip="true"
	frame="${this.hilite ? 2 : 1}"
	stretches="both"
	width="48"
	height="48"
    >


        <attribute name="toolID" type="string" value=""/>
        <attribute name="text" type="string" value=""/>
        <attribute name="pressed" value="false"/>
        <attribute name="inside" value="false"/>
        <attribute name="hilite" value="${((this.pressed &amp;&amp; this.inside) || (gApp.tool == this.toolID))}"/>


	<handler name="onmouseover" args="arg"><![CDATA[
	    gToolTip.enterView(this, this.text);
	  ]]>
	</handler>

	
	<handler name="onmouseout" args="arg"><![CDATA[
	    gToolTip.exitView(this);
	  ]]>
	</handler>

	
	<handler name="onmousedown"><![CDATA[
	    Debug.write("onmousedown", this, this.toolID);
	    this.setAttribute("pressed", true);

	    gApp.addIdler(this);
	    this.idle();
	  ]]>
	</handler>

	
	<handler name="onmouseup"><![CDATA[
	    gApp.removeIdler(this);
	    this.idle();
	    this.setAttribute("pressed", false);
	    if (this.inside) {
	        gApp.setAttribute("tool", this.toolID);
	    }
	  ]]>
	</handler>
	
	
	<method name="idle"><![CDATA[
	    var curX = this.getMouse("x");
	    var curY = this.getMouse("y");
	    var inside =
	        (curX >= 0) && (curX < this.width) &&
		(curY >= 0) && (curY < this.height);
	    if (inside != this.inside) {
	        this.setAttribute("inside", inside);
	    }
	  ]]>
	</method>


    </class>


</library>
