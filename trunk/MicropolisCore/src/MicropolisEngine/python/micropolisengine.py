# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.31
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _micropolisengine
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


GetPythonCallbackHook = _micropolisengine.GetPythonCallbackHook
GetPythonCallbackData = _micropolisengine.GetPythonCallbackData
MICROPOLIS_VERSION = _micropolisengine.MICROPOLIS_VERSION
IS_INTEL = _micropolisengine.IS_INTEL
RANDOM_RANGE = _micropolisengine.RANDOM_RANGE
NIL = _micropolisengine.NIL
HORIZ = _micropolisengine.HORIZ
VERT = _micropolisengine.VERT
HISTLEN = _micropolisengine.HISTLEN
MISCHISTLEN = _micropolisengine.MISCHISTLEN
ISLAND_RADIUS = _micropolisengine.ISLAND_RADIUS
HISTORY_COUNT = _micropolisengine.HISTORY_COUNT
HISTORY_TYPE_RES = _micropolisengine.HISTORY_TYPE_RES
HISTORY_TYPE_COM = _micropolisengine.HISTORY_TYPE_COM
HISTORY_TYPE_IND = _micropolisengine.HISTORY_TYPE_IND
HISTORY_TYPE_MONEY = _micropolisengine.HISTORY_TYPE_MONEY
HISTORY_TYPE_CRIME = _micropolisengine.HISTORY_TYPE_CRIME
HISTORY_TYPE_POLLUTION = _micropolisengine.HISTORY_TYPE_POLLUTION
HISTORY_TYPE_COUNT = _micropolisengine.HISTORY_TYPE_COUNT
HISTORY_SCALE_SHORT = _micropolisengine.HISTORY_SCALE_SHORT
HISTORY_SCALE_LONG = _micropolisengine.HISTORY_SCALE_LONG
HISTORY_SCALE_COUNT = _micropolisengine.HISTORY_SCALE_COUNT
POWERMAPLEN = _micropolisengine.POWERMAPLEN
ALMAP = _micropolisengine.ALMAP
REMAP = _micropolisengine.REMAP
COMAP = _micropolisengine.COMAP
INMAP = _micropolisengine.INMAP
PRMAP = _micropolisengine.PRMAP
RDMAP = _micropolisengine.RDMAP
PDMAP = _micropolisengine.PDMAP
RGMAP = _micropolisengine.RGMAP
TDMAP = _micropolisengine.TDMAP
PLMAP = _micropolisengine.PLMAP
CRMAP = _micropolisengine.CRMAP
LVMAP = _micropolisengine.LVMAP
FIMAP = _micropolisengine.FIMAP
POMAP = _micropolisengine.POMAP
DYMAP = _micropolisengine.DYMAP
NMAPS = _micropolisengine.NMAPS
VALVERATE = _micropolisengine.VALVERATE
CENSUSRATE = _micropolisengine.CENSUSRATE
TAXFREQ = _micropolisengine.TAXFREQ
SPRITE_NOTUSED = _micropolisengine.SPRITE_NOTUSED
TRA = _micropolisengine.TRA
COP = _micropolisengine.COP
AIR = _micropolisengine.AIR
SHI = _micropolisengine.SHI
GOD = _micropolisengine.GOD
TOR = _micropolisengine.TOR
EXP = _micropolisengine.EXP
BUS = _micropolisengine.BUS
OBJN = _micropolisengine.OBJN
SPRITE_TRAIN = _micropolisengine.SPRITE_TRAIN
SPRITE_HELICOPTER = _micropolisengine.SPRITE_HELICOPTER
SPRITE_AIRPLANE = _micropolisengine.SPRITE_AIRPLANE
SPRITE_SHIP = _micropolisengine.SPRITE_SHIP
SPRITE_GODZILLA = _micropolisengine.SPRITE_GODZILLA
SPRITE_TORNADO = _micropolisengine.SPRITE_TORNADO
SPRITE_EXPLOSION = _micropolisengine.SPRITE_EXPLOSION
SPRITE_BUS = _micropolisengine.SPRITE_BUS
SPRITE_COUNT = _micropolisengine.SPRITE_COUNT
RES_HIST = _micropolisengine.RES_HIST
COM_HIST = _micropolisengine.COM_HIST
IND_HIST = _micropolisengine.IND_HIST
MONEY_HIST = _micropolisengine.MONEY_HIST
CRIME_HIST = _micropolisengine.CRIME_HIST
POLLUTION_HIST = _micropolisengine.POLLUTION_HIST
HISTORIES = _micropolisengine.HISTORIES
ALL_HISTORIES = _micropolisengine.ALL_HISTORIES
PWRBIT = _micropolisengine.PWRBIT
CONDBIT = _micropolisengine.CONDBIT
BURNBIT = _micropolisengine.BURNBIT
BULLBIT = _micropolisengine.BULLBIT
ANIMBIT = _micropolisengine.ANIMBIT
ZONEBIT = _micropolisengine.ZONEBIT
ALLBITS = _micropolisengine.ALLBITS
LOMASK = _micropolisengine.LOMASK
BLBNBIT = _micropolisengine.BLBNBIT
BLBNCNBIT = _micropolisengine.BLBNCNBIT
BNCNBIT = _micropolisengine.BNCNBIT
DIRT = _micropolisengine.DIRT
RIVER = _micropolisengine.RIVER
REDGE = _micropolisengine.REDGE
CHANNEL = _micropolisengine.CHANNEL
FIRSTRIVEDGE = _micropolisengine.FIRSTRIVEDGE
LASTRIVEDGE = _micropolisengine.LASTRIVEDGE
WATER_LOW = _micropolisengine.WATER_LOW
WATER_HIGH = _micropolisengine.WATER_HIGH
TREEBASE = _micropolisengine.TREEBASE
WOODS_LOW = _micropolisengine.WOODS_LOW
LASTTREE = _micropolisengine.LASTTREE
WOODS = _micropolisengine.WOODS
UNUSED_TRASH1 = _micropolisengine.UNUSED_TRASH1
UNUSED_TRASH2 = _micropolisengine.UNUSED_TRASH2
WOODS_HIGH = _micropolisengine.WOODS_HIGH
WOODS2 = _micropolisengine.WOODS2
WOODS3 = _micropolisengine.WOODS3
WOODS4 = _micropolisengine.WOODS4
WOODS5 = _micropolisengine.WOODS5
RUBBLE = _micropolisengine.RUBBLE
LASTRUBBLE = _micropolisengine.LASTRUBBLE
FLOOD = _micropolisengine.FLOOD
LASTFLOOD = _micropolisengine.LASTFLOOD
RADTILE = _micropolisengine.RADTILE
UNUSED_TRASH3 = _micropolisengine.UNUSED_TRASH3
UNUSED_TRASH4 = _micropolisengine.UNUSED_TRASH4
UNUSED_TRASH5 = _micropolisengine.UNUSED_TRASH5
FIRE = _micropolisengine.FIRE
FIREBASE = _micropolisengine.FIREBASE
LASTFIRE = _micropolisengine.LASTFIRE
HBRIDGE = _micropolisengine.HBRIDGE
ROADBASE = _micropolisengine.ROADBASE
VBRIDGE = _micropolisengine.VBRIDGE
ROADS = _micropolisengine.ROADS
ROADS2 = _micropolisengine.ROADS2
ROADS3 = _micropolisengine.ROADS3
ROADS4 = _micropolisengine.ROADS4
ROADS5 = _micropolisengine.ROADS5
ROADS6 = _micropolisengine.ROADS6
ROADS7 = _micropolisengine.ROADS7
ROADS8 = _micropolisengine.ROADS8
ROADS9 = _micropolisengine.ROADS9
ROADS10 = _micropolisengine.ROADS10
INTERSECTION = _micropolisengine.INTERSECTION
HROADPOWER = _micropolisengine.HROADPOWER
VROADPOWER = _micropolisengine.VROADPOWER
BRWH = _micropolisengine.BRWH
LTRFBASE = _micropolisengine.LTRFBASE
BRWV = _micropolisengine.BRWV
BRWXXX1 = _micropolisengine.BRWXXX1
BRWXXX2 = _micropolisengine.BRWXXX2
BRWXXX3 = _micropolisengine.BRWXXX3
HTRFBASE = _micropolisengine.HTRFBASE
BRWXXX4 = _micropolisengine.BRWXXX4
BRWXXX5 = _micropolisengine.BRWXXX5
BRWXXX6 = _micropolisengine.BRWXXX6
LASTROAD = _micropolisengine.LASTROAD
BRWXXX7 = _micropolisengine.BRWXXX7
HPOWER = _micropolisengine.HPOWER
VPOWER = _micropolisengine.VPOWER
LHPOWER = _micropolisengine.LHPOWER
LVPOWER = _micropolisengine.LVPOWER
LVPOWER2 = _micropolisengine.LVPOWER2
LVPOWER3 = _micropolisengine.LVPOWER3
LVPOWER4 = _micropolisengine.LVPOWER4
LVPOWER5 = _micropolisengine.LVPOWER5
LVPOWER6 = _micropolisengine.LVPOWER6
LVPOWER7 = _micropolisengine.LVPOWER7
LVPOWER8 = _micropolisengine.LVPOWER8
LVPOWER9 = _micropolisengine.LVPOWER9
LVPOWER10 = _micropolisengine.LVPOWER10
RAILHPOWERV = _micropolisengine.RAILHPOWERV
RAILVPOWERH = _micropolisengine.RAILVPOWERH
POWERBASE = _micropolisengine.POWERBASE
LASTPOWER = _micropolisengine.LASTPOWER
UNUSED_TRASH6 = _micropolisengine.UNUSED_TRASH6
HRAIL = _micropolisengine.HRAIL
VRAIL = _micropolisengine.VRAIL
LHRAIL = _micropolisengine.LHRAIL
LVRAIL = _micropolisengine.LVRAIL
LVRAIL2 = _micropolisengine.LVRAIL2
LVRAIL3 = _micropolisengine.LVRAIL3
LVRAIL4 = _micropolisengine.LVRAIL4
LVRAIL5 = _micropolisengine.LVRAIL5
LVRAIL6 = _micropolisengine.LVRAIL6
LVRAIL7 = _micropolisengine.LVRAIL7
LVRAIL8 = _micropolisengine.LVRAIL8
LVRAIL9 = _micropolisengine.LVRAIL9
LVRAIL10 = _micropolisengine.LVRAIL10
HRAILROAD = _micropolisengine.HRAILROAD
VRAILROAD = _micropolisengine.VRAILROAD
RAILBASE = _micropolisengine.RAILBASE
LASTRAIL = _micropolisengine.LASTRAIL
ROADVPOWERH = _micropolisengine.ROADVPOWERH
RESBASE = _micropolisengine.RESBASE
FREEZ = _micropolisengine.FREEZ
HOUSE = _micropolisengine.HOUSE
LHTHR = _micropolisengine.LHTHR
HHTHR = _micropolisengine.HHTHR
RZB = _micropolisengine.RZB
HOSPITAL = _micropolisengine.HOSPITAL
CHURCH = _micropolisengine.CHURCH
COMBASE = _micropolisengine.COMBASE
COMCLR = _micropolisengine.COMCLR
CZB = _micropolisengine.CZB
COMLAST = _micropolisengine.COMLAST
INDBASE = _micropolisengine.INDBASE
INDCLR = _micropolisengine.INDCLR
LASTIND = _micropolisengine.LASTIND
IND1 = _micropolisengine.IND1
IZB = _micropolisengine.IZB
IND2 = _micropolisengine.IND2
IND3 = _micropolisengine.IND3
IND4 = _micropolisengine.IND4
IND5 = _micropolisengine.IND5
IND6 = _micropolisengine.IND6
IND7 = _micropolisengine.IND7
IND8 = _micropolisengine.IND8
IND9 = _micropolisengine.IND9
PORTBASE = _micropolisengine.PORTBASE
PORT = _micropolisengine.PORT
LASTPORT = _micropolisengine.LASTPORT
AIRPORTBASE = _micropolisengine.AIRPORTBASE
RADAR = _micropolisengine.RADAR
AIRPORT = _micropolisengine.AIRPORT
COALBASE = _micropolisengine.COALBASE
POWERPLANT = _micropolisengine.POWERPLANT
LASTPOWERPLANT = _micropolisengine.LASTPOWERPLANT
FIRESTBASE = _micropolisengine.FIRESTBASE
FIRESTATION = _micropolisengine.FIRESTATION
POLICESTBASE = _micropolisengine.POLICESTBASE
POLICESTATION = _micropolisengine.POLICESTATION
STADIUMBASE = _micropolisengine.STADIUMBASE
STADIUM = _micropolisengine.STADIUM
FULLSTADIUM = _micropolisengine.FULLSTADIUM
NUCLEARBASE = _micropolisengine.NUCLEARBASE
NUCLEAR = _micropolisengine.NUCLEAR
LASTZONE = _micropolisengine.LASTZONE
LIGHTNINGBOLT = _micropolisengine.LIGHTNINGBOLT
HBRDG0 = _micropolisengine.HBRDG0
HBRDG1 = _micropolisengine.HBRDG1
HBRDG2 = _micropolisengine.HBRDG2
HBRDG3 = _micropolisengine.HBRDG3
HBRDG_END = _micropolisengine.HBRDG_END
RADAR0 = _micropolisengine.RADAR0
RADAR1 = _micropolisengine.RADAR1
RADAR2 = _micropolisengine.RADAR2
RADAR3 = _micropolisengine.RADAR3
RADAR4 = _micropolisengine.RADAR4
RADAR5 = _micropolisengine.RADAR5
RADAR6 = _micropolisengine.RADAR6
RADAR7 = _micropolisengine.RADAR7
FOUNTAIN = _micropolisengine.FOUNTAIN
INDBASE2 = _micropolisengine.INDBASE2
TELEBASE = _micropolisengine.TELEBASE
TELELAST = _micropolisengine.TELELAST
SMOKEBASE = _micropolisengine.SMOKEBASE
TINYEXP = _micropolisengine.TINYEXP
SOMETINYEXP = _micropolisengine.SOMETINYEXP
LASTTINYEXP = _micropolisengine.LASTTINYEXP
TINYEXPLAST = _micropolisengine.TINYEXPLAST
COALSMOKE1 = _micropolisengine.COALSMOKE1
COALSMOKE2 = _micropolisengine.COALSMOKE2
COALSMOKE3 = _micropolisengine.COALSMOKE3
COALSMOKE4 = _micropolisengine.COALSMOKE4
FOOTBALLGAME1 = _micropolisengine.FOOTBALLGAME1
FOOTBALLGAME2 = _micropolisengine.FOOTBALLGAME2
VBRDG0 = _micropolisengine.VBRDG0
VBRDG1 = _micropolisengine.VBRDG1
VBRDG2 = _micropolisengine.VBRDG2
VBRDG3 = _micropolisengine.VBRDG3
TILE_COUNT = _micropolisengine.TILE_COUNT
TOOL_RESIDENTIAL = _micropolisengine.TOOL_RESIDENTIAL
TOOL_COMMERCIAL = _micropolisengine.TOOL_COMMERCIAL
TOOL_INDUSTRIAL = _micropolisengine.TOOL_INDUSTRIAL
TOOL_FIRESTATION = _micropolisengine.TOOL_FIRESTATION
TOOL_POLICESTATION = _micropolisengine.TOOL_POLICESTATION
TOOL_QUERY = _micropolisengine.TOOL_QUERY
TOOL_WIRE = _micropolisengine.TOOL_WIRE
TOOL_BULLDOZER = _micropolisengine.TOOL_BULLDOZER
TOOL_RAILROAD = _micropolisengine.TOOL_RAILROAD
TOOL_ROAD = _micropolisengine.TOOL_ROAD
TOOL_STADIUM = _micropolisengine.TOOL_STADIUM
TOOL_PARK = _micropolisengine.TOOL_PARK
TOOL_SEAPORT = _micropolisengine.TOOL_SEAPORT
TOOL_COALPOWER = _micropolisengine.TOOL_COALPOWER
TOOL_NUCLEARPOWER = _micropolisengine.TOOL_NUCLEARPOWER
TOOL_AIRPORT = _micropolisengine.TOOL_AIRPORT
TOOL_NETWORK = _micropolisengine.TOOL_NETWORK
TOOL_COUNT = _micropolisengine.TOOL_COUNT
TOOL_FIRST = _micropolisengine.TOOL_FIRST
TOOL_LAST = _micropolisengine.TOOL_LAST
SC_NONE = _micropolisengine.SC_NONE
SC_DULLSVILLE = _micropolisengine.SC_DULLSVILLE
SC_SAN_FRANCISCO = _micropolisengine.SC_SAN_FRANCISCO
SC_HAMBURG = _micropolisengine.SC_HAMBURG
SC_BERN = _micropolisengine.SC_BERN
SC_TOKYO = _micropolisengine.SC_TOKYO
SC_DETROIT = _micropolisengine.SC_DETROIT
SC_BOSTON = _micropolisengine.SC_BOSTON
SC_RIO = _micropolisengine.SC_RIO
SC_COUNT = _micropolisengine.SC_COUNT
DIR_NORTH = _micropolisengine.DIR_NORTH
DIR_WEST = _micropolisengine.DIR_WEST
DIR_SOUTH = _micropolisengine.DIR_SOUTH
DIR_EAST = _micropolisengine.DIR_EAST
DIR_DIR4 = _micropolisengine.DIR_DIR4
DIR_INVALID = _micropolisengine.DIR_INVALID
ReverseDirection = _micropolisengine.ReverseDirection
ZT_COMMERCIAL = _micropolisengine.ZT_COMMERCIAL
ZT_INDUSTRIAL = _micropolisengine.ZT_INDUSTRIAL
ZT_RESIDENTIAL = _micropolisengine.ZT_RESIDENTIAL
ZT_NUM_DESTINATIONS = _micropolisengine.ZT_NUM_DESTINATIONS
CVP_CRIME = _micropolisengine.CVP_CRIME
CVP_POLLUTION = _micropolisengine.CVP_POLLUTION
CVP_HOUSING = _micropolisengine.CVP_HOUSING
CVP_TAXES = _micropolisengine.CVP_TAXES
CVP_TRAFFIC = _micropolisengine.CVP_TRAFFIC
CVP_UNEMPLOYMENT = _micropolisengine.CVP_UNEMPLOYMENT
CVP_FIRE = _micropolisengine.CVP_FIRE
CVP_NUMPROBLEMS = _micropolisengine.CVP_NUMPROBLEMS
CVP_PROBLEM_COMPLAINTS = _micropolisengine.CVP_PROBLEM_COMPLAINTS
PROBNUM = _micropolisengine.PROBNUM
CC_VILLAGE = _micropolisengine.CC_VILLAGE
CC_TOWN = _micropolisengine.CC_TOWN
CC_CITY = _micropolisengine.CC_CITY
CC_CAPITAL = _micropolisengine.CC_CAPITAL
CC_METROPOLIS = _micropolisengine.CC_METROPOLIS
CC_MEGALOPOLIS = _micropolisengine.CC_MEGALOPOLIS
CC_NUM_CITIES = _micropolisengine.CC_NUM_CITIES
LEVEL_EASY = _micropolisengine.LEVEL_EASY
LEVEL_MEDIUM = _micropolisengine.LEVEL_MEDIUM
LEVEL_HARD = _micropolisengine.LEVEL_HARD
LEVEL_COUNT = _micropolisengine.LEVEL_COUNT
LEVEL_FIRST = _micropolisengine.LEVEL_FIRST
LEVEL_LAST = _micropolisengine.LEVEL_LAST
TestBounds = _micropolisengine.TestBounds
absoluteValue = _micropolisengine.absoluteValue
not_reached = _micropolisengine.not_reached
class Resource(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Resource, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Resource, name)
    __repr__ = _swig_repr
    __swig_setmethods__["buf"] = _micropolisengine.Resource_buf_set
    __swig_getmethods__["buf"] = _micropolisengine.Resource_buf_get
    if _newclass:buf = _swig_property(_micropolisengine.Resource_buf_get, _micropolisengine.Resource_buf_set)
    __swig_setmethods__["size"] = _micropolisengine.Resource_size_set
    __swig_getmethods__["size"] = _micropolisengine.Resource_size_get
    if _newclass:size = _swig_property(_micropolisengine.Resource_size_get, _micropolisengine.Resource_size_set)
    __swig_setmethods__["name"] = _micropolisengine.Resource_name_set
    __swig_getmethods__["name"] = _micropolisengine.Resource_name_get
    if _newclass:name = _swig_property(_micropolisengine.Resource_name_get, _micropolisengine.Resource_name_set)
    __swig_setmethods__["id"] = _micropolisengine.Resource_id_set
    __swig_getmethods__["id"] = _micropolisengine.Resource_id_get
    if _newclass:id = _swig_property(_micropolisengine.Resource_id_get, _micropolisengine.Resource_id_set)
    __swig_setmethods__["next"] = _micropolisengine.Resource_next_set
    __swig_getmethods__["next"] = _micropolisengine.Resource_next_get
    if _newclass:next = _swig_property(_micropolisengine.Resource_next_get, _micropolisengine.Resource_next_set)
    def __init__(self, *args): 
        this = _micropolisengine.new_Resource(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _micropolisengine.delete_Resource
    __del__ = lambda self : None;
Resource_swigregister = _micropolisengine.Resource_swigregister
Resource_swigregister(Resource)
cvar = _micropolisengine.cvar
WORLD_X = cvar.WORLD_X
WORLD_Y = cvar.WORLD_Y
MAX_TRAFFIC_DISTANCE = cvar.MAX_TRAFFIC_DISTANCE
MAX_ROAD_EFFECT = cvar.MAX_ROAD_EFFECT
MAX_POLICESTATION_EFFECT = cvar.MAX_POLICESTATION_EFFECT
MAX_FIRESTATION_EFFECT = cvar.MAX_FIRESTATION_EFFECT

class StringTable(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringTable, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StringTable, name)
    __repr__ = _swig_repr
    __swig_setmethods__["id"] = _micropolisengine.StringTable_id_set
    __swig_getmethods__["id"] = _micropolisengine.StringTable_id_get
    if _newclass:id = _swig_property(_micropolisengine.StringTable_id_get, _micropolisengine.StringTable_id_set)
    __swig_setmethods__["lines"] = _micropolisengine.StringTable_lines_set
    __swig_getmethods__["lines"] = _micropolisengine.StringTable_lines_get
    if _newclass:lines = _swig_property(_micropolisengine.StringTable_lines_get, _micropolisengine.StringTable_lines_set)
    __swig_setmethods__["strings"] = _micropolisengine.StringTable_strings_set
    __swig_getmethods__["strings"] = _micropolisengine.StringTable_strings_get
    if _newclass:strings = _swig_property(_micropolisengine.StringTable_strings_get, _micropolisengine.StringTable_strings_set)
    __swig_setmethods__["next"] = _micropolisengine.StringTable_next_set
    __swig_getmethods__["next"] = _micropolisengine.StringTable_next_get
    if _newclass:next = _swig_property(_micropolisengine.StringTable_next_get, _micropolisengine.StringTable_next_set)
    def __init__(self, *args): 
        this = _micropolisengine.new_StringTable(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _micropolisengine.delete_StringTable
    __del__ = lambda self : None;
StringTable_swigregister = _micropolisengine.StringTable_swigregister
StringTable_swigregister(StringTable)

class SimSprite(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SimSprite, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SimSprite, name)
    __repr__ = _swig_repr
    __swig_setmethods__["next"] = _micropolisengine.SimSprite_next_set
    __swig_getmethods__["next"] = _micropolisengine.SimSprite_next_get
    if _newclass:next = _swig_property(_micropolisengine.SimSprite_next_get, _micropolisengine.SimSprite_next_set)
    __swig_setmethods__["name"] = _micropolisengine.SimSprite_name_set
    __swig_getmethods__["name"] = _micropolisengine.SimSprite_name_get
    if _newclass:name = _swig_property(_micropolisengine.SimSprite_name_get, _micropolisengine.SimSprite_name_set)
    __swig_setmethods__["type"] = _micropolisengine.SimSprite_type_set
    __swig_getmethods__["type"] = _micropolisengine.SimSprite_type_get
    if _newclass:type = _swig_property(_micropolisengine.SimSprite_type_get, _micropolisengine.SimSprite_type_set)
    __swig_setmethods__["frame"] = _micropolisengine.SimSprite_frame_set
    __swig_getmethods__["frame"] = _micropolisengine.SimSprite_frame_get
    if _newclass:frame = _swig_property(_micropolisengine.SimSprite_frame_get, _micropolisengine.SimSprite_frame_set)
    __swig_setmethods__["x"] = _micropolisengine.SimSprite_x_set
    __swig_getmethods__["x"] = _micropolisengine.SimSprite_x_get
    if _newclass:x = _swig_property(_micropolisengine.SimSprite_x_get, _micropolisengine.SimSprite_x_set)
    __swig_setmethods__["y"] = _micropolisengine.SimSprite_y_set
    __swig_getmethods__["y"] = _micropolisengine.SimSprite_y_get
    if _newclass:y = _swig_property(_micropolisengine.SimSprite_y_get, _micropolisengine.SimSprite_y_set)
    __swig_setmethods__["width"] = _micropolisengine.SimSprite_width_set
    __swig_getmethods__["width"] = _micropolisengine.SimSprite_width_get
    if _newclass:width = _swig_property(_micropolisengine.SimSprite_width_get, _micropolisengine.SimSprite_width_set)
    __swig_setmethods__["height"] = _micropolisengine.SimSprite_height_set
    __swig_getmethods__["height"] = _micropolisengine.SimSprite_height_get
    if _newclass:height = _swig_property(_micropolisengine.SimSprite_height_get, _micropolisengine.SimSprite_height_set)
    __swig_setmethods__["x_offset"] = _micropolisengine.SimSprite_x_offset_set
    __swig_getmethods__["x_offset"] = _micropolisengine.SimSprite_x_offset_get
    if _newclass:x_offset = _swig_property(_micropolisengine.SimSprite_x_offset_get, _micropolisengine.SimSprite_x_offset_set)
    __swig_setmethods__["y_offset"] = _micropolisengine.SimSprite_y_offset_set
    __swig_getmethods__["y_offset"] = _micropolisengine.SimSprite_y_offset_get
    if _newclass:y_offset = _swig_property(_micropolisengine.SimSprite_y_offset_get, _micropolisengine.SimSprite_y_offset_set)
    __swig_setmethods__["x_hot"] = _micropolisengine.SimSprite_x_hot_set
    __swig_getmethods__["x_hot"] = _micropolisengine.SimSprite_x_hot_get
    if _newclass:x_hot = _swig_property(_micropolisengine.SimSprite_x_hot_get, _micropolisengine.SimSprite_x_hot_set)
    __swig_setmethods__["y_hot"] = _micropolisengine.SimSprite_y_hot_set
    __swig_getmethods__["y_hot"] = _micropolisengine.SimSprite_y_hot_get
    if _newclass:y_hot = _swig_property(_micropolisengine.SimSprite_y_hot_get, _micropolisengine.SimSprite_y_hot_set)
    __swig_setmethods__["orig_x"] = _micropolisengine.SimSprite_orig_x_set
    __swig_getmethods__["orig_x"] = _micropolisengine.SimSprite_orig_x_get
    if _newclass:orig_x = _swig_property(_micropolisengine.SimSprite_orig_x_get, _micropolisengine.SimSprite_orig_x_set)
    __swig_setmethods__["orig_y"] = _micropolisengine.SimSprite_orig_y_set
    __swig_getmethods__["orig_y"] = _micropolisengine.SimSprite_orig_y_get
    if _newclass:orig_y = _swig_property(_micropolisengine.SimSprite_orig_y_get, _micropolisengine.SimSprite_orig_y_set)
    __swig_setmethods__["dest_x"] = _micropolisengine.SimSprite_dest_x_set
    __swig_getmethods__["dest_x"] = _micropolisengine.SimSprite_dest_x_get
    if _newclass:dest_x = _swig_property(_micropolisengine.SimSprite_dest_x_get, _micropolisengine.SimSprite_dest_x_set)
    __swig_setmethods__["dest_y"] = _micropolisengine.SimSprite_dest_y_set
    __swig_getmethods__["dest_y"] = _micropolisengine.SimSprite_dest_y_get
    if _newclass:dest_y = _swig_property(_micropolisengine.SimSprite_dest_y_get, _micropolisengine.SimSprite_dest_y_set)
    __swig_setmethods__["count"] = _micropolisengine.SimSprite_count_set
    __swig_getmethods__["count"] = _micropolisengine.SimSprite_count_get
    if _newclass:count = _swig_property(_micropolisengine.SimSprite_count_get, _micropolisengine.SimSprite_count_set)
    __swig_setmethods__["sound_count"] = _micropolisengine.SimSprite_sound_count_set
    __swig_getmethods__["sound_count"] = _micropolisengine.SimSprite_sound_count_get
    if _newclass:sound_count = _swig_property(_micropolisengine.SimSprite_sound_count_get, _micropolisengine.SimSprite_sound_count_set)
    __swig_setmethods__["dir"] = _micropolisengine.SimSprite_dir_set
    __swig_getmethods__["dir"] = _micropolisengine.SimSprite_dir_get
    if _newclass:dir = _swig_property(_micropolisengine.SimSprite_dir_get, _micropolisengine.SimSprite_dir_set)
    __swig_setmethods__["new_dir"] = _micropolisengine.SimSprite_new_dir_set
    __swig_getmethods__["new_dir"] = _micropolisengine.SimSprite_new_dir_get
    if _newclass:new_dir = _swig_property(_micropolisengine.SimSprite_new_dir_get, _micropolisengine.SimSprite_new_dir_set)
    __swig_setmethods__["step"] = _micropolisengine.SimSprite_step_set
    __swig_getmethods__["step"] = _micropolisengine.SimSprite_step_get
    if _newclass:step = _swig_property(_micropolisengine.SimSprite_step_get, _micropolisengine.SimSprite_step_set)
    __swig_setmethods__["flag"] = _micropolisengine.SimSprite_flag_set
    __swig_getmethods__["flag"] = _micropolisengine.SimSprite_flag_get
    if _newclass:flag = _swig_property(_micropolisengine.SimSprite_flag_get, _micropolisengine.SimSprite_flag_set)
    __swig_setmethods__["control"] = _micropolisengine.SimSprite_control_set
    __swig_getmethods__["control"] = _micropolisengine.SimSprite_control_get
    if _newclass:control = _swig_property(_micropolisengine.SimSprite_control_get, _micropolisengine.SimSprite_control_set)
    __swig_setmethods__["turn"] = _micropolisengine.SimSprite_turn_set
    __swig_getmethods__["turn"] = _micropolisengine.SimSprite_turn_get
    if _newclass:turn = _swig_property(_micropolisengine.SimSprite_turn_get, _micropolisengine.SimSprite_turn_set)
    __swig_setmethods__["accel"] = _micropolisengine.SimSprite_accel_set
    __swig_getmethods__["accel"] = _micropolisengine.SimSprite_accel_get
    if _newclass:accel = _swig_property(_micropolisengine.SimSprite_accel_get, _micropolisengine.SimSprite_accel_set)
    __swig_setmethods__["speed"] = _micropolisengine.SimSprite_speed_set
    __swig_getmethods__["speed"] = _micropolisengine.SimSprite_speed_get
    if _newclass:speed = _swig_property(_micropolisengine.SimSprite_speed_get, _micropolisengine.SimSprite_speed_set)
    def __init__(self, *args): 
        this = _micropolisengine.new_SimSprite(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _micropolisengine.delete_SimSprite
    __del__ = lambda self : None;
SimSprite_swigregister = _micropolisengine.SimSprite_swigregister
SimSprite_swigregister(SimSprite)

class Micropolis(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Micropolis, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Micropolis, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _micropolisengine.new_Micropolis(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _micropolisengine.delete_Micropolis
    __del__ = lambda self : None;
    def init(*args): return _micropolisengine.Micropolis_init(*args)
    def destroy(*args): return _micropolisengine.Micropolis_destroy(*args)
    __swig_setmethods__["SMapX"] = _micropolisengine.Micropolis_SMapX_set
    __swig_getmethods__["SMapX"] = _micropolisengine.Micropolis_SMapX_get
    if _newclass:SMapX = _swig_property(_micropolisengine.Micropolis_SMapX_get, _micropolisengine.Micropolis_SMapX_set)
    __swig_setmethods__["SMapY"] = _micropolisengine.Micropolis_SMapY_set
    __swig_getmethods__["SMapY"] = _micropolisengine.Micropolis_SMapY_get
    if _newclass:SMapY = _swig_property(_micropolisengine.Micropolis_SMapY_get, _micropolisengine.Micropolis_SMapY_set)
    __swig_setmethods__["CChr"] = _micropolisengine.Micropolis_CChr_set
    __swig_getmethods__["CChr"] = _micropolisengine.Micropolis_CChr_get
    if _newclass:CChr = _swig_property(_micropolisengine.Micropolis_CChr_get, _micropolisengine.Micropolis_CChr_set)
    __swig_setmethods__["CChr9"] = _micropolisengine.Micropolis_CChr9_set
    __swig_getmethods__["CChr9"] = _micropolisengine.Micropolis_CChr9_get
    if _newclass:CChr9 = _swig_property(_micropolisengine.Micropolis_CChr9_get, _micropolisengine.Micropolis_CChr9_set)
    __swig_setmethods__["RoadTotal"] = _micropolisengine.Micropolis_RoadTotal_set
    __swig_getmethods__["RoadTotal"] = _micropolisengine.Micropolis_RoadTotal_get
    if _newclass:RoadTotal = _swig_property(_micropolisengine.Micropolis_RoadTotal_get, _micropolisengine.Micropolis_RoadTotal_set)
    __swig_setmethods__["RailTotal"] = _micropolisengine.Micropolis_RailTotal_set
    __swig_getmethods__["RailTotal"] = _micropolisengine.Micropolis_RailTotal_get
    if _newclass:RailTotal = _swig_property(_micropolisengine.Micropolis_RailTotal_get, _micropolisengine.Micropolis_RailTotal_set)
    __swig_setmethods__["FirePop"] = _micropolisengine.Micropolis_FirePop_set
    __swig_getmethods__["FirePop"] = _micropolisengine.Micropolis_FirePop_get
    if _newclass:FirePop = _swig_property(_micropolisengine.Micropolis_FirePop_get, _micropolisengine.Micropolis_FirePop_set)
    __swig_setmethods__["ResPop"] = _micropolisengine.Micropolis_ResPop_set
    __swig_getmethods__["ResPop"] = _micropolisengine.Micropolis_ResPop_get
    if _newclass:ResPop = _swig_property(_micropolisengine.Micropolis_ResPop_get, _micropolisengine.Micropolis_ResPop_set)
    __swig_setmethods__["ComPop"] = _micropolisengine.Micropolis_ComPop_set
    __swig_getmethods__["ComPop"] = _micropolisengine.Micropolis_ComPop_get
    if _newclass:ComPop = _swig_property(_micropolisengine.Micropolis_ComPop_get, _micropolisengine.Micropolis_ComPop_set)
    __swig_setmethods__["IndPop"] = _micropolisengine.Micropolis_IndPop_set
    __swig_getmethods__["IndPop"] = _micropolisengine.Micropolis_IndPop_get
    if _newclass:IndPop = _swig_property(_micropolisengine.Micropolis_IndPop_get, _micropolisengine.Micropolis_IndPop_set)
    __swig_setmethods__["TotalPop"] = _micropolisengine.Micropolis_TotalPop_set
    __swig_getmethods__["TotalPop"] = _micropolisengine.Micropolis_TotalPop_get
    if _newclass:TotalPop = _swig_property(_micropolisengine.Micropolis_TotalPop_get, _micropolisengine.Micropolis_TotalPop_set)
    __swig_setmethods__["LastTotalPop"] = _micropolisengine.Micropolis_LastTotalPop_set
    __swig_getmethods__["LastTotalPop"] = _micropolisengine.Micropolis_LastTotalPop_get
    if _newclass:LastTotalPop = _swig_property(_micropolisengine.Micropolis_LastTotalPop_get, _micropolisengine.Micropolis_LastTotalPop_set)
    __swig_setmethods__["ResZPop"] = _micropolisengine.Micropolis_ResZPop_set
    __swig_getmethods__["ResZPop"] = _micropolisengine.Micropolis_ResZPop_get
    if _newclass:ResZPop = _swig_property(_micropolisengine.Micropolis_ResZPop_get, _micropolisengine.Micropolis_ResZPop_set)
    __swig_setmethods__["ComZPop"] = _micropolisengine.Micropolis_ComZPop_set
    __swig_getmethods__["ComZPop"] = _micropolisengine.Micropolis_ComZPop_get
    if _newclass:ComZPop = _swig_property(_micropolisengine.Micropolis_ComZPop_get, _micropolisengine.Micropolis_ComZPop_set)
    __swig_setmethods__["IndZPop"] = _micropolisengine.Micropolis_IndZPop_set
    __swig_getmethods__["IndZPop"] = _micropolisengine.Micropolis_IndZPop_get
    if _newclass:IndZPop = _swig_property(_micropolisengine.Micropolis_IndZPop_get, _micropolisengine.Micropolis_IndZPop_set)
    __swig_setmethods__["TotalZPop"] = _micropolisengine.Micropolis_TotalZPop_set
    __swig_getmethods__["TotalZPop"] = _micropolisengine.Micropolis_TotalZPop_get
    if _newclass:TotalZPop = _swig_property(_micropolisengine.Micropolis_TotalZPop_get, _micropolisengine.Micropolis_TotalZPop_set)
    __swig_setmethods__["HospPop"] = _micropolisengine.Micropolis_HospPop_set
    __swig_getmethods__["HospPop"] = _micropolisengine.Micropolis_HospPop_get
    if _newclass:HospPop = _swig_property(_micropolisengine.Micropolis_HospPop_get, _micropolisengine.Micropolis_HospPop_set)
    __swig_setmethods__["ChurchPop"] = _micropolisengine.Micropolis_ChurchPop_set
    __swig_getmethods__["ChurchPop"] = _micropolisengine.Micropolis_ChurchPop_get
    if _newclass:ChurchPop = _swig_property(_micropolisengine.Micropolis_ChurchPop_get, _micropolisengine.Micropolis_ChurchPop_set)
    __swig_setmethods__["StadiumPop"] = _micropolisengine.Micropolis_StadiumPop_set
    __swig_getmethods__["StadiumPop"] = _micropolisengine.Micropolis_StadiumPop_get
    if _newclass:StadiumPop = _swig_property(_micropolisengine.Micropolis_StadiumPop_get, _micropolisengine.Micropolis_StadiumPop_set)
    __swig_setmethods__["PolicePop"] = _micropolisengine.Micropolis_PolicePop_set
    __swig_getmethods__["PolicePop"] = _micropolisengine.Micropolis_PolicePop_get
    if _newclass:PolicePop = _swig_property(_micropolisengine.Micropolis_PolicePop_get, _micropolisengine.Micropolis_PolicePop_set)
    __swig_setmethods__["FireStPop"] = _micropolisengine.Micropolis_FireStPop_set
    __swig_getmethods__["FireStPop"] = _micropolisengine.Micropolis_FireStPop_get
    if _newclass:FireStPop = _swig_property(_micropolisengine.Micropolis_FireStPop_get, _micropolisengine.Micropolis_FireStPop_set)
    __swig_setmethods__["CoalPop"] = _micropolisengine.Micropolis_CoalPop_set
    __swig_getmethods__["CoalPop"] = _micropolisengine.Micropolis_CoalPop_get
    if _newclass:CoalPop = _swig_property(_micropolisengine.Micropolis_CoalPop_get, _micropolisengine.Micropolis_CoalPop_set)
    __swig_setmethods__["NuclearPop"] = _micropolisengine.Micropolis_NuclearPop_set
    __swig_getmethods__["NuclearPop"] = _micropolisengine.Micropolis_NuclearPop_get
    if _newclass:NuclearPop = _swig_property(_micropolisengine.Micropolis_NuclearPop_get, _micropolisengine.Micropolis_NuclearPop_set)
    __swig_setmethods__["PortPop"] = _micropolisengine.Micropolis_PortPop_set
    __swig_getmethods__["PortPop"] = _micropolisengine.Micropolis_PortPop_get
    if _newclass:PortPop = _swig_property(_micropolisengine.Micropolis_PortPop_get, _micropolisengine.Micropolis_PortPop_set)
    __swig_setmethods__["APortPop"] = _micropolisengine.Micropolis_APortPop_set
    __swig_getmethods__["APortPop"] = _micropolisengine.Micropolis_APortPop_get
    if _newclass:APortPop = _swig_property(_micropolisengine.Micropolis_APortPop_get, _micropolisengine.Micropolis_APortPop_set)
    __swig_setmethods__["NeedHosp"] = _micropolisengine.Micropolis_NeedHosp_set
    __swig_getmethods__["NeedHosp"] = _micropolisengine.Micropolis_NeedHosp_get
    if _newclass:NeedHosp = _swig_property(_micropolisengine.Micropolis_NeedHosp_get, _micropolisengine.Micropolis_NeedHosp_set)
    __swig_setmethods__["NeedChurch"] = _micropolisengine.Micropolis_NeedChurch_set
    __swig_getmethods__["NeedChurch"] = _micropolisengine.Micropolis_NeedChurch_get
    if _newclass:NeedChurch = _swig_property(_micropolisengine.Micropolis_NeedChurch_get, _micropolisengine.Micropolis_NeedChurch_set)
    __swig_setmethods__["CrimeAverage"] = _micropolisengine.Micropolis_CrimeAverage_set
    __swig_getmethods__["CrimeAverage"] = _micropolisengine.Micropolis_CrimeAverage_get
    if _newclass:CrimeAverage = _swig_property(_micropolisengine.Micropolis_CrimeAverage_get, _micropolisengine.Micropolis_CrimeAverage_set)
    __swig_setmethods__["PolluteAverage"] = _micropolisengine.Micropolis_PolluteAverage_set
    __swig_getmethods__["PolluteAverage"] = _micropolisengine.Micropolis_PolluteAverage_get
    if _newclass:PolluteAverage = _swig_property(_micropolisengine.Micropolis_PolluteAverage_get, _micropolisengine.Micropolis_PolluteAverage_set)
    __swig_setmethods__["LVAverage"] = _micropolisengine.Micropolis_LVAverage_set
    __swig_getmethods__["LVAverage"] = _micropolisengine.Micropolis_LVAverage_get
    if _newclass:LVAverage = _swig_property(_micropolisengine.Micropolis_LVAverage_get, _micropolisengine.Micropolis_LVAverage_set)
    __swig_setmethods__["CityTime"] = _micropolisengine.Micropolis_CityTime_set
    __swig_getmethods__["CityTime"] = _micropolisengine.Micropolis_CityTime_get
    if _newclass:CityTime = _swig_property(_micropolisengine.Micropolis_CityTime_get, _micropolisengine.Micropolis_CityTime_set)
    __swig_setmethods__["CityMonth"] = _micropolisengine.Micropolis_CityMonth_set
    __swig_getmethods__["CityMonth"] = _micropolisengine.Micropolis_CityMonth_get
    if _newclass:CityMonth = _swig_property(_micropolisengine.Micropolis_CityMonth_get, _micropolisengine.Micropolis_CityMonth_set)
    __swig_setmethods__["CityYear"] = _micropolisengine.Micropolis_CityYear_set
    __swig_getmethods__["CityYear"] = _micropolisengine.Micropolis_CityYear_get
    if _newclass:CityYear = _swig_property(_micropolisengine.Micropolis_CityYear_get, _micropolisengine.Micropolis_CityYear_set)
    __swig_setmethods__["StartingYear"] = _micropolisengine.Micropolis_StartingYear_set
    __swig_getmethods__["StartingYear"] = _micropolisengine.Micropolis_StartingYear_get
    if _newclass:StartingYear = _swig_property(_micropolisengine.Micropolis_StartingYear_get, _micropolisengine.Micropolis_StartingYear_set)
    __swig_setmethods__["Map"] = _micropolisengine.Micropolis_Map_set
    __swig_getmethods__["Map"] = _micropolisengine.Micropolis_Map_get
    if _newclass:Map = _swig_property(_micropolisengine.Micropolis_Map_get, _micropolisengine.Micropolis_Map_set)
    __swig_setmethods__["ResHisMax"] = _micropolisengine.Micropolis_ResHisMax_set
    __swig_getmethods__["ResHisMax"] = _micropolisengine.Micropolis_ResHisMax_get
    if _newclass:ResHisMax = _swig_property(_micropolisengine.Micropolis_ResHisMax_get, _micropolisengine.Micropolis_ResHisMax_set)
    __swig_setmethods__["Res2HisMax"] = _micropolisengine.Micropolis_Res2HisMax_set
    __swig_getmethods__["Res2HisMax"] = _micropolisengine.Micropolis_Res2HisMax_get
    if _newclass:Res2HisMax = _swig_property(_micropolisengine.Micropolis_Res2HisMax_get, _micropolisengine.Micropolis_Res2HisMax_set)
    __swig_setmethods__["ComHisMax"] = _micropolisengine.Micropolis_ComHisMax_set
    __swig_getmethods__["ComHisMax"] = _micropolisengine.Micropolis_ComHisMax_get
    if _newclass:ComHisMax = _swig_property(_micropolisengine.Micropolis_ComHisMax_get, _micropolisengine.Micropolis_ComHisMax_set)
    __swig_setmethods__["Com2HisMax"] = _micropolisengine.Micropolis_Com2HisMax_set
    __swig_getmethods__["Com2HisMax"] = _micropolisengine.Micropolis_Com2HisMax_get
    if _newclass:Com2HisMax = _swig_property(_micropolisengine.Micropolis_Com2HisMax_get, _micropolisengine.Micropolis_Com2HisMax_set)
    __swig_setmethods__["IndHisMax"] = _micropolisengine.Micropolis_IndHisMax_set
    __swig_getmethods__["IndHisMax"] = _micropolisengine.Micropolis_IndHisMax_get
    if _newclass:IndHisMax = _swig_property(_micropolisengine.Micropolis_IndHisMax_get, _micropolisengine.Micropolis_IndHisMax_set)
    __swig_setmethods__["Ind2HisMax"] = _micropolisengine.Micropolis_Ind2HisMax_set
    __swig_getmethods__["Ind2HisMax"] = _micropolisengine.Micropolis_Ind2HisMax_get
    if _newclass:Ind2HisMax = _swig_property(_micropolisengine.Micropolis_Ind2HisMax_get, _micropolisengine.Micropolis_Ind2HisMax_set)
    __swig_setmethods__["censusChanged"] = _micropolisengine.Micropolis_censusChanged_set
    __swig_getmethods__["censusChanged"] = _micropolisengine.Micropolis_censusChanged_get
    if _newclass:censusChanged = _swig_property(_micropolisengine.Micropolis_censusChanged_get, _micropolisengine.Micropolis_censusChanged_set)
    __swig_setmethods__["messagePort"] = _micropolisengine.Micropolis_messagePort_set
    __swig_getmethods__["messagePort"] = _micropolisengine.Micropolis_messagePort_get
    if _newclass:messagePort = _swig_property(_micropolisengine.Micropolis_messagePort_get, _micropolisengine.Micropolis_messagePort_set)
    __swig_setmethods__["mesX"] = _micropolisengine.Micropolis_mesX_set
    __swig_getmethods__["mesX"] = _micropolisengine.Micropolis_mesX_get
    if _newclass:mesX = _swig_property(_micropolisengine.Micropolis_mesX_get, _micropolisengine.Micropolis_mesX_set)
    __swig_setmethods__["mesY"] = _micropolisengine.Micropolis_mesY_set
    __swig_getmethods__["mesY"] = _micropolisengine.Micropolis_mesY_get
    if _newclass:mesY = _swig_property(_micropolisengine.Micropolis_mesY_get, _micropolisengine.Micropolis_mesY_set)
    __swig_setmethods__["RoadSpend"] = _micropolisengine.Micropolis_RoadSpend_set
    __swig_getmethods__["RoadSpend"] = _micropolisengine.Micropolis_RoadSpend_get
    if _newclass:RoadSpend = _swig_property(_micropolisengine.Micropolis_RoadSpend_get, _micropolisengine.Micropolis_RoadSpend_set)
    __swig_setmethods__["PoliceSpend"] = _micropolisengine.Micropolis_PoliceSpend_set
    __swig_getmethods__["PoliceSpend"] = _micropolisengine.Micropolis_PoliceSpend_get
    if _newclass:PoliceSpend = _swig_property(_micropolisengine.Micropolis_PoliceSpend_get, _micropolisengine.Micropolis_PoliceSpend_set)
    __swig_setmethods__["FireSpend"] = _micropolisengine.Micropolis_FireSpend_set
    __swig_getmethods__["FireSpend"] = _micropolisengine.Micropolis_FireSpend_get
    if _newclass:FireSpend = _swig_property(_micropolisengine.Micropolis_FireSpend_get, _micropolisengine.Micropolis_FireSpend_set)
    __swig_setmethods__["RoadFund"] = _micropolisengine.Micropolis_RoadFund_set
    __swig_getmethods__["RoadFund"] = _micropolisengine.Micropolis_RoadFund_get
    if _newclass:RoadFund = _swig_property(_micropolisengine.Micropolis_RoadFund_get, _micropolisengine.Micropolis_RoadFund_set)
    __swig_setmethods__["PoliceFund"] = _micropolisengine.Micropolis_PoliceFund_set
    __swig_getmethods__["PoliceFund"] = _micropolisengine.Micropolis_PoliceFund_get
    if _newclass:PoliceFund = _swig_property(_micropolisengine.Micropolis_PoliceFund_get, _micropolisengine.Micropolis_PoliceFund_set)
    __swig_setmethods__["FireFund"] = _micropolisengine.Micropolis_FireFund_set
    __swig_getmethods__["FireFund"] = _micropolisengine.Micropolis_FireFund_get
    if _newclass:FireFund = _swig_property(_micropolisengine.Micropolis_FireFund_get, _micropolisengine.Micropolis_FireFund_set)
    __swig_setmethods__["RoadEffect"] = _micropolisengine.Micropolis_RoadEffect_set
    __swig_getmethods__["RoadEffect"] = _micropolisengine.Micropolis_RoadEffect_get
    if _newclass:RoadEffect = _swig_property(_micropolisengine.Micropolis_RoadEffect_get, _micropolisengine.Micropolis_RoadEffect_set)
    __swig_setmethods__["PoliceEffect"] = _micropolisengine.Micropolis_PoliceEffect_set
    __swig_getmethods__["PoliceEffect"] = _micropolisengine.Micropolis_PoliceEffect_get
    if _newclass:PoliceEffect = _swig_property(_micropolisengine.Micropolis_PoliceEffect_get, _micropolisengine.Micropolis_PoliceEffect_set)
    __swig_setmethods__["FireEffect"] = _micropolisengine.Micropolis_FireEffect_set
    __swig_getmethods__["FireEffect"] = _micropolisengine.Micropolis_FireEffect_get
    if _newclass:FireEffect = _swig_property(_micropolisengine.Micropolis_FireEffect_get, _micropolisengine.Micropolis_FireEffect_set)
    __swig_setmethods__["TaxFund"] = _micropolisengine.Micropolis_TaxFund_set
    __swig_getmethods__["TaxFund"] = _micropolisengine.Micropolis_TaxFund_get
    if _newclass:TaxFund = _swig_property(_micropolisengine.Micropolis_TaxFund_get, _micropolisengine.Micropolis_TaxFund_set)
    __swig_setmethods__["CityTax"] = _micropolisengine.Micropolis_CityTax_set
    __swig_getmethods__["CityTax"] = _micropolisengine.Micropolis_CityTax_get
    if _newclass:CityTax = _swig_property(_micropolisengine.Micropolis_CityTax_get, _micropolisengine.Micropolis_CityTax_set)
    __swig_setmethods__["TaxFlag"] = _micropolisengine.Micropolis_TaxFlag_set
    __swig_getmethods__["TaxFlag"] = _micropolisengine.Micropolis_TaxFlag_get
    if _newclass:TaxFlag = _swig_property(_micropolisengine.Micropolis_TaxFlag_get, _micropolisengine.Micropolis_TaxFlag_set)
    __swig_setmethods__["PopDensity"] = _micropolisengine.Micropolis_PopDensity_set
    __swig_getmethods__["PopDensity"] = _micropolisengine.Micropolis_PopDensity_get
    if _newclass:PopDensity = _swig_property(_micropolisengine.Micropolis_PopDensity_get, _micropolisengine.Micropolis_PopDensity_set)
    __swig_setmethods__["TrfDensity"] = _micropolisengine.Micropolis_TrfDensity_set
    __swig_getmethods__["TrfDensity"] = _micropolisengine.Micropolis_TrfDensity_get
    if _newclass:TrfDensity = _swig_property(_micropolisengine.Micropolis_TrfDensity_get, _micropolisengine.Micropolis_TrfDensity_set)
    __swig_setmethods__["PollutionMem"] = _micropolisengine.Micropolis_PollutionMem_set
    __swig_getmethods__["PollutionMem"] = _micropolisengine.Micropolis_PollutionMem_get
    if _newclass:PollutionMem = _swig_property(_micropolisengine.Micropolis_PollutionMem_get, _micropolisengine.Micropolis_PollutionMem_set)
    __swig_setmethods__["LandValueMem"] = _micropolisengine.Micropolis_LandValueMem_set
    __swig_getmethods__["LandValueMem"] = _micropolisengine.Micropolis_LandValueMem_get
    if _newclass:LandValueMem = _swig_property(_micropolisengine.Micropolis_LandValueMem_get, _micropolisengine.Micropolis_LandValueMem_set)
    __swig_setmethods__["CrimeMem"] = _micropolisengine.Micropolis_CrimeMem_set
    __swig_getmethods__["CrimeMem"] = _micropolisengine.Micropolis_CrimeMem_get
    if _newclass:CrimeMem = _swig_property(_micropolisengine.Micropolis_CrimeMem_get, _micropolisengine.Micropolis_CrimeMem_set)
    __swig_setmethods__["tem"] = _micropolisengine.Micropolis_tem_set
    __swig_getmethods__["tem"] = _micropolisengine.Micropolis_tem_get
    if _newclass:tem = _swig_property(_micropolisengine.Micropolis_tem_get, _micropolisengine.Micropolis_tem_set)
    __swig_setmethods__["tem2"] = _micropolisengine.Micropolis_tem2_set
    __swig_getmethods__["tem2"] = _micropolisengine.Micropolis_tem2_get
    if _newclass:tem2 = _swig_property(_micropolisengine.Micropolis_tem2_get, _micropolisengine.Micropolis_tem2_set)
    __swig_setmethods__["TerrainMem"] = _micropolisengine.Micropolis_TerrainMem_set
    __swig_getmethods__["TerrainMem"] = _micropolisengine.Micropolis_TerrainMem_get
    if _newclass:TerrainMem = _swig_property(_micropolisengine.Micropolis_TerrainMem_get, _micropolisengine.Micropolis_TerrainMem_set)
    __swig_setmethods__["Qtem"] = _micropolisengine.Micropolis_Qtem_set
    __swig_getmethods__["Qtem"] = _micropolisengine.Micropolis_Qtem_get
    if _newclass:Qtem = _swig_property(_micropolisengine.Micropolis_Qtem_get, _micropolisengine.Micropolis_Qtem_set)
    __swig_setmethods__["RateOGMem"] = _micropolisengine.Micropolis_RateOGMem_set
    __swig_getmethods__["RateOGMem"] = _micropolisengine.Micropolis_RateOGMem_get
    if _newclass:RateOGMem = _swig_property(_micropolisengine.Micropolis_RateOGMem_get, _micropolisengine.Micropolis_RateOGMem_set)
    __swig_setmethods__["FireStMap"] = _micropolisengine.Micropolis_FireStMap_set
    __swig_getmethods__["FireStMap"] = _micropolisengine.Micropolis_FireStMap_get
    if _newclass:FireStMap = _swig_property(_micropolisengine.Micropolis_FireStMap_get, _micropolisengine.Micropolis_FireStMap_set)
    __swig_setmethods__["PoliceMap"] = _micropolisengine.Micropolis_PoliceMap_set
    __swig_getmethods__["PoliceMap"] = _micropolisengine.Micropolis_PoliceMap_get
    if _newclass:PoliceMap = _swig_property(_micropolisengine.Micropolis_PoliceMap_get, _micropolisengine.Micropolis_PoliceMap_set)
    __swig_setmethods__["PoliceMapEffect"] = _micropolisengine.Micropolis_PoliceMapEffect_set
    __swig_getmethods__["PoliceMapEffect"] = _micropolisengine.Micropolis_PoliceMapEffect_get
    if _newclass:PoliceMapEffect = _swig_property(_micropolisengine.Micropolis_PoliceMapEffect_get, _micropolisengine.Micropolis_PoliceMapEffect_set)
    __swig_setmethods__["FireRate"] = _micropolisengine.Micropolis_FireRate_set
    __swig_getmethods__["FireRate"] = _micropolisengine.Micropolis_FireRate_get
    if _newclass:FireRate = _swig_property(_micropolisengine.Micropolis_FireRate_get, _micropolisengine.Micropolis_FireRate_set)
    __swig_setmethods__["ComRate"] = _micropolisengine.Micropolis_ComRate_set
    __swig_getmethods__["ComRate"] = _micropolisengine.Micropolis_ComRate_get
    if _newclass:ComRate = _swig_property(_micropolisengine.Micropolis_ComRate_get, _micropolisengine.Micropolis_ComRate_set)
    __swig_setmethods__["STem"] = _micropolisengine.Micropolis_STem_set
    __swig_getmethods__["STem"] = _micropolisengine.Micropolis_STem_get
    if _newclass:STem = _swig_property(_micropolisengine.Micropolis_STem_get, _micropolisengine.Micropolis_STem_set)
    __swig_setmethods__["terrainBase"] = _micropolisengine.Micropolis_terrainBase_set
    __swig_getmethods__["terrainBase"] = _micropolisengine.Micropolis_terrainBase_get
    if _newclass:terrainBase = _swig_property(_micropolisengine.Micropolis_terrainBase_get, _micropolisengine.Micropolis_terrainBase_set)
    __swig_setmethods__["qTemBase"] = _micropolisengine.Micropolis_qTemBase_set
    __swig_getmethods__["qTemBase"] = _micropolisengine.Micropolis_qTemBase_get
    if _newclass:qTemBase = _swig_property(_micropolisengine.Micropolis_qTemBase_get, _micropolisengine.Micropolis_qTemBase_set)
    __swig_setmethods__["tem1Base"] = _micropolisengine.Micropolis_tem1Base_set
    __swig_getmethods__["tem1Base"] = _micropolisengine.Micropolis_tem1Base_get
    if _newclass:tem1Base = _swig_property(_micropolisengine.Micropolis_tem1Base_get, _micropolisengine.Micropolis_tem1Base_set)
    __swig_setmethods__["tem2Base"] = _micropolisengine.Micropolis_tem2Base_set
    __swig_getmethods__["tem2Base"] = _micropolisengine.Micropolis_tem2Base_get
    if _newclass:tem2Base = _swig_property(_micropolisengine.Micropolis_tem2Base_get, _micropolisengine.Micropolis_tem2Base_set)
    __swig_setmethods__["popPtr"] = _micropolisengine.Micropolis_popPtr_set
    __swig_getmethods__["popPtr"] = _micropolisengine.Micropolis_popPtr_get
    if _newclass:popPtr = _swig_property(_micropolisengine.Micropolis_popPtr_get, _micropolisengine.Micropolis_popPtr_set)
    __swig_setmethods__["trfPtr"] = _micropolisengine.Micropolis_trfPtr_set
    __swig_getmethods__["trfPtr"] = _micropolisengine.Micropolis_trfPtr_get
    if _newclass:trfPtr = _swig_property(_micropolisengine.Micropolis_trfPtr_get, _micropolisengine.Micropolis_trfPtr_set)
    __swig_setmethods__["polPtr"] = _micropolisengine.Micropolis_polPtr_set
    __swig_getmethods__["polPtr"] = _micropolisengine.Micropolis_polPtr_get
    if _newclass:polPtr = _swig_property(_micropolisengine.Micropolis_polPtr_get, _micropolisengine.Micropolis_polPtr_set)
    __swig_setmethods__["landPtr"] = _micropolisengine.Micropolis_landPtr_set
    __swig_getmethods__["landPtr"] = _micropolisengine.Micropolis_landPtr_get
    if _newclass:landPtr = _swig_property(_micropolisengine.Micropolis_landPtr_get, _micropolisengine.Micropolis_landPtr_set)
    __swig_setmethods__["crimePtr"] = _micropolisengine.Micropolis_crimePtr_set
    __swig_getmethods__["crimePtr"] = _micropolisengine.Micropolis_crimePtr_get
    if _newclass:crimePtr = _swig_property(_micropolisengine.Micropolis_crimePtr_get, _micropolisengine.Micropolis_crimePtr_set)
    __swig_setmethods__["mapPtr"] = _micropolisengine.Micropolis_mapPtr_set
    __swig_getmethods__["mapPtr"] = _micropolisengine.Micropolis_mapPtr_get
    if _newclass:mapPtr = _swig_property(_micropolisengine.Micropolis_mapPtr_get, _micropolisengine.Micropolis_mapPtr_set)
    __swig_setmethods__["ResHis"] = _micropolisengine.Micropolis_ResHis_set
    __swig_getmethods__["ResHis"] = _micropolisengine.Micropolis_ResHis_get
    if _newclass:ResHis = _swig_property(_micropolisengine.Micropolis_ResHis_get, _micropolisengine.Micropolis_ResHis_set)
    __swig_setmethods__["ComHis"] = _micropolisengine.Micropolis_ComHis_set
    __swig_getmethods__["ComHis"] = _micropolisengine.Micropolis_ComHis_get
    if _newclass:ComHis = _swig_property(_micropolisengine.Micropolis_ComHis_get, _micropolisengine.Micropolis_ComHis_set)
    __swig_setmethods__["IndHis"] = _micropolisengine.Micropolis_IndHis_set
    __swig_getmethods__["IndHis"] = _micropolisengine.Micropolis_IndHis_get
    if _newclass:IndHis = _swig_property(_micropolisengine.Micropolis_IndHis_get, _micropolisengine.Micropolis_IndHis_set)
    __swig_setmethods__["MoneyHis"] = _micropolisengine.Micropolis_MoneyHis_set
    __swig_getmethods__["MoneyHis"] = _micropolisengine.Micropolis_MoneyHis_get
    if _newclass:MoneyHis = _swig_property(_micropolisengine.Micropolis_MoneyHis_get, _micropolisengine.Micropolis_MoneyHis_set)
    __swig_setmethods__["PollutionHis"] = _micropolisengine.Micropolis_PollutionHis_set
    __swig_getmethods__["PollutionHis"] = _micropolisengine.Micropolis_PollutionHis_get
    if _newclass:PollutionHis = _swig_property(_micropolisengine.Micropolis_PollutionHis_get, _micropolisengine.Micropolis_PollutionHis_set)
    __swig_setmethods__["CrimeHis"] = _micropolisengine.Micropolis_CrimeHis_set
    __swig_getmethods__["CrimeHis"] = _micropolisengine.Micropolis_CrimeHis_get
    if _newclass:CrimeHis = _swig_property(_micropolisengine.Micropolis_CrimeHis_get, _micropolisengine.Micropolis_CrimeHis_set)
    __swig_setmethods__["MiscHis"] = _micropolisengine.Micropolis_MiscHis_set
    __swig_getmethods__["MiscHis"] = _micropolisengine.Micropolis_MiscHis_get
    if _newclass:MiscHis = _swig_property(_micropolisengine.Micropolis_MiscHis_get, _micropolisengine.Micropolis_MiscHis_set)
    __swig_setmethods__["PowerMap"] = _micropolisengine.Micropolis_PowerMap_set
    __swig_getmethods__["PowerMap"] = _micropolisengine.Micropolis_PowerMap_get
    if _newclass:PowerMap = _swig_property(_micropolisengine.Micropolis_PowerMap_get, _micropolisengine.Micropolis_PowerMap_set)
    def initMapArrays(*args): return _micropolisengine.Micropolis_initMapArrays(*args)
    def destroyMapArrays(*args): return _micropolisengine.Micropolis_destroyMapArrays(*args)
    def GetHistoryRange(*args): return _micropolisengine.Micropolis_GetHistoryRange(*args)
    def GetHistory(*args): return _micropolisengine.Micropolis_GetHistory(*args)
    def animateTiles(*args): return _micropolisengine.Micropolis_animateTiles(*args)
    __swig_setmethods__["roadPercent"] = _micropolisengine.Micropolis_roadPercent_set
    __swig_getmethods__["roadPercent"] = _micropolisengine.Micropolis_roadPercent_get
    if _newclass:roadPercent = _swig_property(_micropolisengine.Micropolis_roadPercent_get, _micropolisengine.Micropolis_roadPercent_set)
    __swig_setmethods__["policePercent"] = _micropolisengine.Micropolis_policePercent_set
    __swig_getmethods__["policePercent"] = _micropolisengine.Micropolis_policePercent_get
    if _newclass:policePercent = _swig_property(_micropolisengine.Micropolis_policePercent_get, _micropolisengine.Micropolis_policePercent_set)
    __swig_setmethods__["firePercent"] = _micropolisengine.Micropolis_firePercent_set
    __swig_getmethods__["firePercent"] = _micropolisengine.Micropolis_firePercent_get
    if _newclass:firePercent = _swig_property(_micropolisengine.Micropolis_firePercent_get, _micropolisengine.Micropolis_firePercent_set)
    __swig_setmethods__["roadValue"] = _micropolisengine.Micropolis_roadValue_set
    __swig_getmethods__["roadValue"] = _micropolisengine.Micropolis_roadValue_get
    if _newclass:roadValue = _swig_property(_micropolisengine.Micropolis_roadValue_get, _micropolisengine.Micropolis_roadValue_set)
    __swig_setmethods__["policeValue"] = _micropolisengine.Micropolis_policeValue_set
    __swig_getmethods__["policeValue"] = _micropolisengine.Micropolis_policeValue_get
    if _newclass:policeValue = _swig_property(_micropolisengine.Micropolis_policeValue_get, _micropolisengine.Micropolis_policeValue_set)
    __swig_setmethods__["fireValue"] = _micropolisengine.Micropolis_fireValue_set
    __swig_getmethods__["fireValue"] = _micropolisengine.Micropolis_fireValue_get
    if _newclass:fireValue = _swig_property(_micropolisengine.Micropolis_fireValue_get, _micropolisengine.Micropolis_fireValue_set)
    __swig_setmethods__["MustDrawCurrPercents"] = _micropolisengine.Micropolis_MustDrawCurrPercents_set
    __swig_getmethods__["MustDrawCurrPercents"] = _micropolisengine.Micropolis_MustDrawCurrPercents_get
    if _newclass:MustDrawCurrPercents = _swig_property(_micropolisengine.Micropolis_MustDrawCurrPercents_get, _micropolisengine.Micropolis_MustDrawCurrPercents_set)
    __swig_setmethods__["MustDrawBudgetWindow"] = _micropolisengine.Micropolis_MustDrawBudgetWindow_set
    __swig_getmethods__["MustDrawBudgetWindow"] = _micropolisengine.Micropolis_MustDrawBudgetWindow_get
    if _newclass:MustDrawBudgetWindow = _swig_property(_micropolisengine.Micropolis_MustDrawBudgetWindow_get, _micropolisengine.Micropolis_MustDrawBudgetWindow_set)
    def InitFundingLevel(*args): return _micropolisengine.Micropolis_InitFundingLevel(*args)
    def DoBudget(*args): return _micropolisengine.Micropolis_DoBudget(*args)
    def DoBudgetFromMenu(*args): return _micropolisengine.Micropolis_DoBudgetFromMenu(*args)
    def DoBudgetNow(*args): return _micropolisengine.Micropolis_DoBudgetNow(*args)
    def drawBudgetWindow(*args): return _micropolisengine.Micropolis_drawBudgetWindow(*args)
    def ReallyDrawBudgetWindow(*args): return _micropolisengine.Micropolis_ReallyDrawBudgetWindow(*args)
    def drawCurrPercents(*args): return _micropolisengine.Micropolis_drawCurrPercents(*args)
    def ReallyDrawCurrPercents(*args): return _micropolisengine.Micropolis_ReallyDrawCurrPercents(*args)
    def UpdateBudgetWindow(*args): return _micropolisengine.Micropolis_UpdateBudgetWindow(*args)
    def UpdateBudget(*args): return _micropolisengine.Micropolis_UpdateBudget(*args)
    def ShowBudgetWindowAndStartWaiting(*args): return _micropolisengine.Micropolis_ShowBudgetWindowAndStartWaiting(*args)
    def SetBudget(*args): return _micropolisengine.Micropolis_SetBudget(*args)
    def SetBudgetValues(*args): return _micropolisengine.Micropolis_SetBudgetValues(*args)
    def ConnecTile(*args): return _micropolisengine.Micropolis_ConnecTile(*args)
    def LayDoze(*args): return _micropolisengine.Micropolis_LayDoze(*args)
    def LayRoad(*args): return _micropolisengine.Micropolis_LayRoad(*args)
    def LayRail(*args): return _micropolisengine.Micropolis_LayRail(*args)
    def LayWire(*args): return _micropolisengine.Micropolis_LayWire(*args)
    def FixZone(*args): return _micropolisengine.Micropolis_FixZone(*args)
    def FixSingle(*args): return _micropolisengine.Micropolis_FixSingle(*args)
    __swig_setmethods__["FloodCnt"] = _micropolisengine.Micropolis_FloodCnt_set
    __swig_getmethods__["FloodCnt"] = _micropolisengine.Micropolis_FloodCnt_get
    if _newclass:FloodCnt = _swig_property(_micropolisengine.Micropolis_FloodCnt_get, _micropolisengine.Micropolis_FloodCnt_set)
    def MakeMeltdown(*args): return _micropolisengine.Micropolis_MakeMeltdown(*args)
    def FireBomb(*args): return _micropolisengine.Micropolis_FireBomb(*args)
    def MakeEarthquake(*args): return _micropolisengine.Micropolis_MakeEarthquake(*args)
    def MakeFire(*args): return _micropolisengine.Micropolis_MakeFire(*args)
    def MakeFlood(*args): return _micropolisengine.Micropolis_MakeFlood(*args)
    __swig_setmethods__["cityYes"] = _micropolisengine.Micropolis_cityYes_set
    __swig_getmethods__["cityYes"] = _micropolisengine.Micropolis_cityYes_get
    if _newclass:cityYes = _swig_property(_micropolisengine.Micropolis_cityYes_get, _micropolisengine.Micropolis_cityYes_set)
    __swig_setmethods__["problemTable"] = _micropolisengine.Micropolis_problemTable_set
    __swig_getmethods__["problemTable"] = _micropolisengine.Micropolis_problemTable_get
    if _newclass:problemTable = _swig_property(_micropolisengine.Micropolis_problemTable_get, _micropolisengine.Micropolis_problemTable_set)
    __swig_setmethods__["problemVotes"] = _micropolisengine.Micropolis_problemVotes_set
    __swig_getmethods__["problemVotes"] = _micropolisengine.Micropolis_problemVotes_get
    if _newclass:problemVotes = _swig_property(_micropolisengine.Micropolis_problemVotes_get, _micropolisengine.Micropolis_problemVotes_set)
    __swig_setmethods__["problemOrder"] = _micropolisengine.Micropolis_problemOrder_set
    __swig_getmethods__["problemOrder"] = _micropolisengine.Micropolis_problemOrder_get
    if _newclass:problemOrder = _swig_property(_micropolisengine.Micropolis_problemOrder_get, _micropolisengine.Micropolis_problemOrder_set)
    __swig_setmethods__["cityPop"] = _micropolisengine.Micropolis_cityPop_set
    __swig_getmethods__["cityPop"] = _micropolisengine.Micropolis_cityPop_get
    if _newclass:cityPop = _swig_property(_micropolisengine.Micropolis_cityPop_get, _micropolisengine.Micropolis_cityPop_set)
    __swig_setmethods__["deltaCityPop"] = _micropolisengine.Micropolis_deltaCityPop_set
    __swig_getmethods__["deltaCityPop"] = _micropolisengine.Micropolis_deltaCityPop_get
    if _newclass:deltaCityPop = _swig_property(_micropolisengine.Micropolis_deltaCityPop_get, _micropolisengine.Micropolis_deltaCityPop_set)
    __swig_setmethods__["cityAssValue"] = _micropolisengine.Micropolis_cityAssValue_set
    __swig_getmethods__["cityAssValue"] = _micropolisengine.Micropolis_cityAssValue_get
    if _newclass:cityAssValue = _swig_property(_micropolisengine.Micropolis_cityAssValue_get, _micropolisengine.Micropolis_cityAssValue_set)
    __swig_setmethods__["cityClass"] = _micropolisengine.Micropolis_cityClass_set
    __swig_getmethods__["cityClass"] = _micropolisengine.Micropolis_cityClass_get
    if _newclass:cityClass = _swig_property(_micropolisengine.Micropolis_cityClass_get, _micropolisengine.Micropolis_cityClass_set)
    __swig_setmethods__["cityScore"] = _micropolisengine.Micropolis_cityScore_set
    __swig_getmethods__["cityScore"] = _micropolisengine.Micropolis_cityScore_get
    if _newclass:cityScore = _swig_property(_micropolisengine.Micropolis_cityScore_get, _micropolisengine.Micropolis_cityScore_set)
    __swig_setmethods__["deltaCityScore"] = _micropolisengine.Micropolis_deltaCityScore_set
    __swig_getmethods__["deltaCityScore"] = _micropolisengine.Micropolis_deltaCityScore_get
    if _newclass:deltaCityScore = _swig_property(_micropolisengine.Micropolis_deltaCityScore_get, _micropolisengine.Micropolis_deltaCityScore_set)
    __swig_setmethods__["trafficAverage"] = _micropolisengine.Micropolis_trafficAverage_set
    __swig_getmethods__["trafficAverage"] = _micropolisengine.Micropolis_trafficAverage_get
    if _newclass:trafficAverage = _swig_property(_micropolisengine.Micropolis_trafficAverage_get, _micropolisengine.Micropolis_trafficAverage_set)
    def CityEvaluation(*args): return _micropolisengine.Micropolis_CityEvaluation(*args)
    def EvalInit(*args): return _micropolisengine.Micropolis_EvalInit(*args)
    def DoPopNum(*args): return _micropolisengine.Micropolis_DoPopNum(*args)
    def DoProblems(*args): return _micropolisengine.Micropolis_DoProblems(*args)
    def getAssValue(*args): return _micropolisengine.Micropolis_getAssValue(*args)
    def voteProblems(*args): return _micropolisengine.Micropolis_voteProblems(*args)
    def AverageTrf(*args): return _micropolisengine.Micropolis_AverageTrf(*args)
    def GetUnemployment(*args): return _micropolisengine.Micropolis_GetUnemployment(*args)
    def GetFire(*args): return _micropolisengine.Micropolis_GetFire(*args)
    def GetScore(*args): return _micropolisengine.Micropolis_GetScore(*args)
    def DoVotes(*args): return _micropolisengine.Micropolis_DoVotes(*args)
    def doScoreCard(*args): return _micropolisengine.Micropolis_doScoreCard(*args)
    def ChangeEval(*args): return _micropolisengine.Micropolis_ChangeEval(*args)
    def scoreDoer(*args): return _micropolisengine.Micropolis_scoreDoer(*args)
    def countProblems(*args): return _micropolisengine.Micropolis_countProblems(*args)
    def getProblemNumber(*args): return _micropolisengine.Micropolis_getProblemNumber(*args)
    def getProblemVotes(*args): return _micropolisengine.Micropolis_getProblemVotes(*args)
    def load_file(*args): return _micropolisengine.Micropolis_load_file(*args)
    def loadFile(*args): return _micropolisengine.Micropolis_loadFile(*args)
    def saveFile(*args): return _micropolisengine.Micropolis_saveFile(*args)
    def LoadScenario(*args): return _micropolisengine.Micropolis_LoadScenario(*args)
    def DidLoadScenario(*args): return _micropolisengine.Micropolis_DidLoadScenario(*args)
    def LoadCity(*args): return _micropolisengine.Micropolis_LoadCity(*args)
    def DidLoadCity(*args): return _micropolisengine.Micropolis_DidLoadCity(*args)
    def DidntLoadCity(*args): return _micropolisengine.Micropolis_DidntLoadCity(*args)
    def SaveCity(*args): return _micropolisengine.Micropolis_SaveCity(*args)
    def DoSaveCityAs(*args): return _micropolisengine.Micropolis_DoSaveCityAs(*args)
    def DidSaveCity(*args): return _micropolisengine.Micropolis_DidSaveCity(*args)
    def DidntSaveCity(*args): return _micropolisengine.Micropolis_DidntSaveCity(*args)
    def SaveCityAs(*args): return _micropolisengine.Micropolis_SaveCityAs(*args)
    __swig_setmethods__["XStart"] = _micropolisengine.Micropolis_XStart_set
    __swig_getmethods__["XStart"] = _micropolisengine.Micropolis_XStart_get
    if _newclass:XStart = _swig_property(_micropolisengine.Micropolis_XStart_get, _micropolisengine.Micropolis_XStart_set)
    __swig_setmethods__["YStart"] = _micropolisengine.Micropolis_YStart_set
    __swig_getmethods__["YStart"] = _micropolisengine.Micropolis_YStart_get
    if _newclass:YStart = _swig_property(_micropolisengine.Micropolis_YStart_get, _micropolisengine.Micropolis_YStart_set)
    __swig_setmethods__["MapX"] = _micropolisengine.Micropolis_MapX_set
    __swig_getmethods__["MapX"] = _micropolisengine.Micropolis_MapX_get
    if _newclass:MapX = _swig_property(_micropolisengine.Micropolis_MapX_get, _micropolisengine.Micropolis_MapX_set)
    __swig_setmethods__["MapY"] = _micropolisengine.Micropolis_MapY_set
    __swig_getmethods__["MapY"] = _micropolisengine.Micropolis_MapY_get
    if _newclass:MapY = _swig_property(_micropolisengine.Micropolis_MapY_get, _micropolisengine.Micropolis_MapY_set)
    __swig_setmethods__["Dir"] = _micropolisengine.Micropolis_Dir_set
    __swig_getmethods__["Dir"] = _micropolisengine.Micropolis_Dir_get
    if _newclass:Dir = _swig_property(_micropolisengine.Micropolis_Dir_get, _micropolisengine.Micropolis_Dir_set)
    __swig_setmethods__["LastDir"] = _micropolisengine.Micropolis_LastDir_set
    __swig_getmethods__["LastDir"] = _micropolisengine.Micropolis_LastDir_get
    if _newclass:LastDir = _swig_property(_micropolisengine.Micropolis_LastDir_get, _micropolisengine.Micropolis_LastDir_set)
    __swig_setmethods__["TreeLevel"] = _micropolisengine.Micropolis_TreeLevel_set
    __swig_getmethods__["TreeLevel"] = _micropolisengine.Micropolis_TreeLevel_get
    if _newclass:TreeLevel = _swig_property(_micropolisengine.Micropolis_TreeLevel_get, _micropolisengine.Micropolis_TreeLevel_set)
    __swig_setmethods__["LakeLevel"] = _micropolisengine.Micropolis_LakeLevel_set
    __swig_getmethods__["LakeLevel"] = _micropolisengine.Micropolis_LakeLevel_get
    if _newclass:LakeLevel = _swig_property(_micropolisengine.Micropolis_LakeLevel_get, _micropolisengine.Micropolis_LakeLevel_set)
    __swig_setmethods__["CurveLevel"] = _micropolisengine.Micropolis_CurveLevel_set
    __swig_getmethods__["CurveLevel"] = _micropolisengine.Micropolis_CurveLevel_get
    if _newclass:CurveLevel = _swig_property(_micropolisengine.Micropolis_CurveLevel_get, _micropolisengine.Micropolis_CurveLevel_set)
    __swig_setmethods__["CreateIsland"] = _micropolisengine.Micropolis_CreateIsland_set
    __swig_getmethods__["CreateIsland"] = _micropolisengine.Micropolis_CreateIsland_get
    if _newclass:CreateIsland = _swig_property(_micropolisengine.Micropolis_CreateIsland_get, _micropolisengine.Micropolis_CreateIsland_set)
    __swig_setmethods__["IslandRadius"] = _micropolisengine.Micropolis_IslandRadius_set
    __swig_getmethods__["IslandRadius"] = _micropolisengine.Micropolis_IslandRadius_get
    if _newclass:IslandRadius = _swig_property(_micropolisengine.Micropolis_IslandRadius_get, _micropolisengine.Micropolis_IslandRadius_set)
    def GenerateNewCity(*args): return _micropolisengine.Micropolis_GenerateNewCity(*args)
    def GenerateSomeCity(*args): return _micropolisengine.Micropolis_GenerateSomeCity(*args)
    def GenerateMap(*args): return _micropolisengine.Micropolis_GenerateMap(*args)
    def ClearMap(*args): return _micropolisengine.Micropolis_ClearMap(*args)
    def ClearUnnatural(*args): return _micropolisengine.Micropolis_ClearUnnatural(*args)
    def MakeNakedIsland(*args): return _micropolisengine.Micropolis_MakeNakedIsland(*args)
    def MakeIsland(*args): return _micropolisengine.Micropolis_MakeIsland(*args)
    def MakeLakes(*args): return _micropolisengine.Micropolis_MakeLakes(*args)
    def GetRandStart(*args): return _micropolisengine.Micropolis_GetRandStart(*args)
    def MoveMap(*args): return _micropolisengine.Micropolis_MoveMap(*args)
    def TreeSplash(*args): return _micropolisengine.Micropolis_TreeSplash(*args)
    def DoTrees(*args): return _micropolisengine.Micropolis_DoTrees(*args)
    def SmoothRiver(*args): return _micropolisengine.Micropolis_SmoothRiver(*args)
    def IsTree(*args): return _micropolisengine.Micropolis_IsTree(*args)
    def SmoothTrees(*args): return _micropolisengine.Micropolis_SmoothTrees(*args)
    def DoRivers(*args): return _micropolisengine.Micropolis_DoRivers(*args)
    def DoBRiv(*args): return _micropolisengine.Micropolis_DoBRiv(*args)
    def DoSRiv(*args): return _micropolisengine.Micropolis_DoSRiv(*args)
    def PutOnMap(*args): return _micropolisengine.Micropolis_PutOnMap(*args)
    def BRivPlop(*args): return _micropolisengine.Micropolis_BRivPlop(*args)
    def SRivPlop(*args): return _micropolisengine.Micropolis_SRivPlop(*args)
    def SmoothWater(*args): return _micropolisengine.Micropolis_SmoothWater(*args)
    __swig_setmethods__["newGraph"] = _micropolisengine.Micropolis_newGraph_set
    __swig_getmethods__["newGraph"] = _micropolisengine.Micropolis_newGraph_get
    if _newclass:newGraph = _swig_property(_micropolisengine.Micropolis_newGraph_get, _micropolisengine.Micropolis_newGraph_set)
    __swig_setmethods__["History10"] = _micropolisengine.Micropolis_History10_set
    __swig_getmethods__["History10"] = _micropolisengine.Micropolis_History10_get
    if _newclass:History10 = _swig_property(_micropolisengine.Micropolis_History10_get, _micropolisengine.Micropolis_History10_set)
    __swig_setmethods__["History120"] = _micropolisengine.Micropolis_History120_set
    __swig_getmethods__["History120"] = _micropolisengine.Micropolis_History120_get
    if _newclass:History120 = _swig_property(_micropolisengine.Micropolis_History120_get, _micropolisengine.Micropolis_History120_set)
    __swig_setmethods__["HistoryInitialized"] = _micropolisengine.Micropolis_HistoryInitialized_set
    __swig_getmethods__["HistoryInitialized"] = _micropolisengine.Micropolis_HistoryInitialized_get
    if _newclass:HistoryInitialized = _swig_property(_micropolisengine.Micropolis_HistoryInitialized_get, _micropolisengine.Micropolis_HistoryInitialized_set)
    __swig_setmethods__["Graph10Max"] = _micropolisengine.Micropolis_Graph10Max_set
    __swig_getmethods__["Graph10Max"] = _micropolisengine.Micropolis_Graph10Max_get
    if _newclass:Graph10Max = _swig_property(_micropolisengine.Micropolis_Graph10Max_get, _micropolisengine.Micropolis_Graph10Max_set)
    __swig_setmethods__["Graph120Max"] = _micropolisengine.Micropolis_Graph120Max_set
    __swig_getmethods__["Graph120Max"] = _micropolisengine.Micropolis_Graph120Max_get
    if _newclass:Graph120Max = _swig_property(_micropolisengine.Micropolis_Graph120Max_get, _micropolisengine.Micropolis_Graph120Max_set)
    __swig_setmethods__["GraphUpdateTime"] = _micropolisengine.Micropolis_GraphUpdateTime_set
    __swig_getmethods__["GraphUpdateTime"] = _micropolisengine.Micropolis_GraphUpdateTime_get
    if _newclass:GraphUpdateTime = _swig_property(_micropolisengine.Micropolis_GraphUpdateTime_get, _micropolisengine.Micropolis_GraphUpdateTime_set)
    def drawMonth(*args): return _micropolisengine.Micropolis_drawMonth(*args)
    def doAllGraphs(*args): return _micropolisengine.Micropolis_doAllGraphs(*args)
    def ChangeCensus(*args): return _micropolisengine.Micropolis_ChangeCensus(*args)
    def graphDoer(*args): return _micropolisengine.Micropolis_graphDoer(*args)
    def initGraphs(*args): return _micropolisengine.Micropolis_initGraphs(*args)
    def InitGraphMax(*args): return _micropolisengine.Micropolis_InitGraphMax(*args)
    def InitWillStuff(*args): return _micropolisengine.Micropolis_InitWillStuff(*args)
    def ResetMapState(*args): return _micropolisengine.Micropolis_ResetMapState(*args)
    def ResetEditorState(*args): return _micropolisengine.Micropolis_ResetEditorState(*args)
    __swig_setmethods__["sim_loops"] = _micropolisengine.Micropolis_sim_loops_set
    __swig_getmethods__["sim_loops"] = _micropolisengine.Micropolis_sim_loops_get
    if _newclass:sim_loops = _swig_property(_micropolisengine.Micropolis_sim_loops_get, _micropolisengine.Micropolis_sim_loops_set)
    __swig_setmethods__["sim_delay"] = _micropolisengine.Micropolis_sim_delay_set
    __swig_getmethods__["sim_delay"] = _micropolisengine.Micropolis_sim_delay_get
    if _newclass:sim_delay = _swig_property(_micropolisengine.Micropolis_sim_delay_get, _micropolisengine.Micropolis_sim_delay_set)
    __swig_setmethods__["sim_skips"] = _micropolisengine.Micropolis_sim_skips_set
    __swig_getmethods__["sim_skips"] = _micropolisengine.Micropolis_sim_skips_get
    if _newclass:sim_skips = _swig_property(_micropolisengine.Micropolis_sim_skips_get, _micropolisengine.Micropolis_sim_skips_set)
    __swig_setmethods__["sim_skip"] = _micropolisengine.Micropolis_sim_skip_set
    __swig_getmethods__["sim_skip"] = _micropolisengine.Micropolis_sim_skip_get
    if _newclass:sim_skip = _swig_property(_micropolisengine.Micropolis_sim_skip_get, _micropolisengine.Micropolis_sim_skip_set)
    __swig_setmethods__["sim_paused"] = _micropolisengine.Micropolis_sim_paused_set
    __swig_getmethods__["sim_paused"] = _micropolisengine.Micropolis_sim_paused_get
    if _newclass:sim_paused = _swig_property(_micropolisengine.Micropolis_sim_paused_get, _micropolisengine.Micropolis_sim_paused_set)
    __swig_setmethods__["sim_paused_speed"] = _micropolisengine.Micropolis_sim_paused_speed_set
    __swig_getmethods__["sim_paused_speed"] = _micropolisengine.Micropolis_sim_paused_speed_get
    if _newclass:sim_paused_speed = _swig_property(_micropolisengine.Micropolis_sim_paused_speed_get, _micropolisengine.Micropolis_sim_paused_speed_set)
    __swig_setmethods__["heat_steps"] = _micropolisengine.Micropolis_heat_steps_set
    __swig_getmethods__["heat_steps"] = _micropolisengine.Micropolis_heat_steps_get
    if _newclass:heat_steps = _swig_property(_micropolisengine.Micropolis_heat_steps_get, _micropolisengine.Micropolis_heat_steps_set)
    __swig_setmethods__["heat_flow"] = _micropolisengine.Micropolis_heat_flow_set
    __swig_getmethods__["heat_flow"] = _micropolisengine.Micropolis_heat_flow_get
    if _newclass:heat_flow = _swig_property(_micropolisengine.Micropolis_heat_flow_get, _micropolisengine.Micropolis_heat_flow_set)
    __swig_setmethods__["heat_rule"] = _micropolisengine.Micropolis_heat_rule_set
    __swig_getmethods__["heat_rule"] = _micropolisengine.Micropolis_heat_rule_get
    if _newclass:heat_rule = _swig_property(_micropolisengine.Micropolis_heat_rule_get, _micropolisengine.Micropolis_heat_rule_set)
    __swig_setmethods__["heat_wrap"] = _micropolisengine.Micropolis_heat_wrap_set
    __swig_getmethods__["heat_wrap"] = _micropolisengine.Micropolis_heat_wrap_get
    if _newclass:heat_wrap = _swig_property(_micropolisengine.Micropolis_heat_wrap_get, _micropolisengine.Micropolis_heat_wrap_set)
    __swig_setmethods__["CityFileName"] = _micropolisengine.Micropolis_CityFileName_set
    __swig_getmethods__["CityFileName"] = _micropolisengine.Micropolis_CityFileName_get
    if _newclass:CityFileName = _swig_property(_micropolisengine.Micropolis_CityFileName_get, _micropolisengine.Micropolis_CityFileName_set)
    __swig_setmethods__["MultiPlayerMode"] = _micropolisengine.Micropolis_MultiPlayerMode_set
    __swig_getmethods__["MultiPlayerMode"] = _micropolisengine.Micropolis_MultiPlayerMode_get
    if _newclass:MultiPlayerMode = _swig_property(_micropolisengine.Micropolis_MultiPlayerMode_get, _micropolisengine.Micropolis_MultiPlayerMode_set)
    __swig_setmethods__["TilesAnimated"] = _micropolisengine.Micropolis_TilesAnimated_set
    __swig_getmethods__["TilesAnimated"] = _micropolisengine.Micropolis_TilesAnimated_get
    if _newclass:TilesAnimated = _swig_property(_micropolisengine.Micropolis_TilesAnimated_get, _micropolisengine.Micropolis_TilesAnimated_set)
    __swig_setmethods__["DoAnimation"] = _micropolisengine.Micropolis_DoAnimation_set
    __swig_getmethods__["DoAnimation"] = _micropolisengine.Micropolis_DoAnimation_get
    if _newclass:DoAnimation = _swig_property(_micropolisengine.Micropolis_DoAnimation_get, _micropolisengine.Micropolis_DoAnimation_set)
    __swig_setmethods__["DoMessages"] = _micropolisengine.Micropolis_DoMessages_set
    __swig_getmethods__["DoMessages"] = _micropolisengine.Micropolis_DoMessages_get
    if _newclass:DoMessages = _swig_property(_micropolisengine.Micropolis_DoMessages_get, _micropolisengine.Micropolis_DoMessages_set)
    __swig_setmethods__["DoNotices"] = _micropolisengine.Micropolis_DoNotices_set
    __swig_getmethods__["DoNotices"] = _micropolisengine.Micropolis_DoNotices_get
    if _newclass:DoNotices = _swig_property(_micropolisengine.Micropolis_DoNotices_get, _micropolisengine.Micropolis_DoNotices_set)
    def getMicropolisVersion(*args): return _micropolisengine.Micropolis_getMicropolisVersion(*args)
    def env_init(*args): return _micropolisengine.Micropolis_env_init(*args)
    def sim_init(*args): return _micropolisengine.Micropolis_sim_init(*args)
    def sim_update(*args): return _micropolisengine.Micropolis_sim_update(*args)
    def sim_heat(*args): return _micropolisengine.Micropolis_sim_heat(*args)
    def sim_loop(*args): return _micropolisengine.Micropolis_sim_loop(*args)
    def sim_tick(*args): return _micropolisengine.Micropolis_sim_tick(*args)
    __swig_setmethods__["lastCityPop"] = _micropolisengine.Micropolis_lastCityPop_set
    __swig_getmethods__["lastCityPop"] = _micropolisengine.Micropolis_lastCityPop_get
    if _newclass:lastCityPop = _swig_property(_micropolisengine.Micropolis_lastCityPop_get, _micropolisengine.Micropolis_lastCityPop_set)
    __swig_setmethods__["LastCategory"] = _micropolisengine.Micropolis_LastCategory_set
    __swig_getmethods__["LastCategory"] = _micropolisengine.Micropolis_LastCategory_get
    if _newclass:LastCategory = _swig_property(_micropolisengine.Micropolis_LastCategory_get, _micropolisengine.Micropolis_LastCategory_set)
    __swig_setmethods__["LastPicNum"] = _micropolisengine.Micropolis_LastPicNum_set
    __swig_getmethods__["LastPicNum"] = _micropolisengine.Micropolis_LastPicNum_get
    if _newclass:LastPicNum = _swig_property(_micropolisengine.Micropolis_LastPicNum_get, _micropolisengine.Micropolis_LastPicNum_set)
    __swig_setmethods__["autoGo"] = _micropolisengine.Micropolis_autoGo_set
    __swig_getmethods__["autoGo"] = _micropolisengine.Micropolis_autoGo_get
    if _newclass:autoGo = _swig_property(_micropolisengine.Micropolis_autoGo_get, _micropolisengine.Micropolis_autoGo_set)
    __swig_setmethods__["HaveLastMessage"] = _micropolisengine.Micropolis_HaveLastMessage_set
    __swig_getmethods__["HaveLastMessage"] = _micropolisengine.Micropolis_HaveLastMessage_get
    if _newclass:HaveLastMessage = _swig_property(_micropolisengine.Micropolis_HaveLastMessage_get, _micropolisengine.Micropolis_HaveLastMessage_set)
    __swig_setmethods__["LastMessage"] = _micropolisengine.Micropolis_LastMessage_set
    __swig_getmethods__["LastMessage"] = _micropolisengine.Micropolis_LastMessage_get
    if _newclass:LastMessage = _swig_property(_micropolisengine.Micropolis_LastMessage_get, _micropolisengine.Micropolis_LastMessage_set)
    def SendMessages(*args): return _micropolisengine.Micropolis_SendMessages(*args)
    def CheckGrowth(*args): return _micropolisengine.Micropolis_CheckGrowth(*args)
    def DoScenarioScore(*args): return _micropolisengine.Micropolis_DoScenarioScore(*args)
    def ClearMes(*args): return _micropolisengine.Micropolis_ClearMes(*args)
    def SendMes(*args): return _micropolisengine.Micropolis_SendMes(*args)
    def SendMesAt(*args): return _micropolisengine.Micropolis_SendMesAt(*args)
    def doMessage(*args): return _micropolisengine.Micropolis_doMessage(*args)
    def doMakeSound(*args): return _micropolisengine.Micropolis_doMakeSound(*args)
    def DoAutoGoto(*args): return _micropolisengine.Micropolis_DoAutoGoto(*args)
    def SetMessageField(*args): return _micropolisengine.Micropolis_SetMessageField(*args)
    def DoShowPicture(*args): return _micropolisengine.Micropolis_DoShowPicture(*args)
    def DoLoseGame(*args): return _micropolisengine.Micropolis_DoLoseGame(*args)
    def DoWinGame(*args): return _micropolisengine.Micropolis_DoWinGame(*args)
    __swig_setmethods__["powerStackNum"] = _micropolisengine.Micropolis_powerStackNum_set
    __swig_getmethods__["powerStackNum"] = _micropolisengine.Micropolis_powerStackNum_get
    if _newclass:powerStackNum = _swig_property(_micropolisengine.Micropolis_powerStackNum_get, _micropolisengine.Micropolis_powerStackNum_set)
    __swig_setmethods__["powerStackX"] = _micropolisengine.Micropolis_powerStackX_set
    __swig_getmethods__["powerStackX"] = _micropolisengine.Micropolis_powerStackX_get
    if _newclass:powerStackX = _swig_property(_micropolisengine.Micropolis_powerStackX_get, _micropolisengine.Micropolis_powerStackX_set)
    __swig_setmethods__["powerStackY"] = _micropolisengine.Micropolis_powerStackY_set
    __swig_getmethods__["powerStackY"] = _micropolisengine.Micropolis_powerStackY_get
    if _newclass:powerStackY = _swig_property(_micropolisengine.Micropolis_powerStackY_get, _micropolisengine.Micropolis_powerStackY_set)
    def DoPowerScan(*args): return _micropolisengine.Micropolis_DoPowerScan(*args)
    def TestForCond(*args): return _micropolisengine.Micropolis_TestForCond(*args)
    def PushPowerStack(*args): return _micropolisengine.Micropolis_PushPowerStack(*args)
    def PullPowerStack(*args): return _micropolisengine.Micropolis_PullPowerStack(*args)
    __swig_setmethods__["MaxPower"] = _micropolisengine.Micropolis_MaxPower_set
    __swig_getmethods__["MaxPower"] = _micropolisengine.Micropolis_MaxPower_get
    if _newclass:MaxPower = _swig_property(_micropolisengine.Micropolis_MaxPower_get, _micropolisengine.Micropolis_MaxPower_set)
    __swig_setmethods__["NumPower"] = _micropolisengine.Micropolis_NumPower_set
    __swig_getmethods__["NumPower"] = _micropolisengine.Micropolis_NumPower_get
    if _newclass:NumPower = _swig_property(_micropolisengine.Micropolis_NumPower_get, _micropolisengine.Micropolis_NumPower_set)
    def MoveMapSim(*args): return _micropolisengine.Micropolis_MoveMapSim(*args)
    __swig_setmethods__["nextRandom"] = _micropolisengine.Micropolis_nextRandom_set
    __swig_getmethods__["nextRandom"] = _micropolisengine.Micropolis_nextRandom_get
    if _newclass:nextRandom = _swig_property(_micropolisengine.Micropolis_nextRandom_get, _micropolisengine.Micropolis_nextRandom_set)
    def sim_rand(*args): return _micropolisengine.Micropolis_sim_rand(*args)
    def sim_srand(*args): return _micropolisengine.Micropolis_sim_srand(*args)
    def Rand(*args): return _micropolisengine.Micropolis_Rand(*args)
    def Rand16(*args): return _micropolisengine.Micropolis_Rand16(*args)
    def Rand16Signed(*args): return _micropolisengine.Micropolis_Rand16Signed(*args)
    def ERand(*args): return _micropolisengine.Micropolis_ERand(*args)
    def RandomlySeedRand(*args): return _micropolisengine.Micropolis_RandomlySeedRand(*args)
    def SeedRand(*args): return _micropolisengine.Micropolis_SeedRand(*args)
    __swig_setmethods__["HomeDir"] = _micropolisengine.Micropolis_HomeDir_set
    __swig_getmethods__["HomeDir"] = _micropolisengine.Micropolis_HomeDir_get
    if _newclass:HomeDir = _swig_property(_micropolisengine.Micropolis_HomeDir_get, _micropolisengine.Micropolis_HomeDir_set)
    __swig_setmethods__["ResourceDir"] = _micropolisengine.Micropolis_ResourceDir_set
    __swig_getmethods__["ResourceDir"] = _micropolisengine.Micropolis_ResourceDir_get
    if _newclass:ResourceDir = _swig_property(_micropolisengine.Micropolis_ResourceDir_get, _micropolisengine.Micropolis_ResourceDir_set)
    __swig_setmethods__["KeyDir"] = _micropolisengine.Micropolis_KeyDir_set
    __swig_getmethods__["KeyDir"] = _micropolisengine.Micropolis_KeyDir_get
    if _newclass:KeyDir = _swig_property(_micropolisengine.Micropolis_KeyDir_get, _micropolisengine.Micropolis_KeyDir_set)
    __swig_setmethods__["HostName"] = _micropolisengine.Micropolis_HostName_set
    __swig_getmethods__["HostName"] = _micropolisengine.Micropolis_HostName_get
    if _newclass:HostName = _swig_property(_micropolisengine.Micropolis_HostName_get, _micropolisengine.Micropolis_HostName_set)
    __swig_setmethods__["Resources"] = _micropolisengine.Micropolis_Resources_set
    __swig_getmethods__["Resources"] = _micropolisengine.Micropolis_Resources_get
    if _newclass:Resources = _swig_property(_micropolisengine.Micropolis_Resources_get, _micropolisengine.Micropolis_Resources_set)
    __swig_setmethods__["StringTables"] = _micropolisengine.Micropolis_StringTables_set
    __swig_getmethods__["StringTables"] = _micropolisengine.Micropolis_StringTables_get
    if _newclass:StringTables = _swig_property(_micropolisengine.Micropolis_StringTables_get, _micropolisengine.Micropolis_StringTables_set)
    def GetResource(*args): return _micropolisengine.Micropolis_GetResource(*args)
    def GetIndString(*args): return _micropolisengine.Micropolis_GetIndString(*args)
    __swig_setmethods__["NewMap"] = _micropolisengine.Micropolis_NewMap_set
    __swig_getmethods__["NewMap"] = _micropolisengine.Micropolis_NewMap_get
    if _newclass:NewMap = _swig_property(_micropolisengine.Micropolis_NewMap_get, _micropolisengine.Micropolis_NewMap_set)
    __swig_setmethods__["NewMapFlags"] = _micropolisengine.Micropolis_NewMapFlags_set
    __swig_getmethods__["NewMapFlags"] = _micropolisengine.Micropolis_NewMapFlags_get
    if _newclass:NewMapFlags = _swig_property(_micropolisengine.Micropolis_NewMapFlags_get, _micropolisengine.Micropolis_NewMapFlags_set)
    __swig_setmethods__["CCx"] = _micropolisengine.Micropolis_CCx_set
    __swig_getmethods__["CCx"] = _micropolisengine.Micropolis_CCx_get
    if _newclass:CCx = _swig_property(_micropolisengine.Micropolis_CCx_get, _micropolisengine.Micropolis_CCx_set)
    __swig_setmethods__["CCy"] = _micropolisengine.Micropolis_CCy_set
    __swig_getmethods__["CCy"] = _micropolisengine.Micropolis_CCy_get
    if _newclass:CCy = _swig_property(_micropolisengine.Micropolis_CCy_get, _micropolisengine.Micropolis_CCy_set)
    __swig_setmethods__["CCx2"] = _micropolisengine.Micropolis_CCx2_set
    __swig_getmethods__["CCx2"] = _micropolisengine.Micropolis_CCx2_get
    if _newclass:CCx2 = _swig_property(_micropolisengine.Micropolis_CCx2_get, _micropolisengine.Micropolis_CCx2_set)
    __swig_setmethods__["CCy2"] = _micropolisengine.Micropolis_CCy2_set
    __swig_getmethods__["CCy2"] = _micropolisengine.Micropolis_CCy2_get
    if _newclass:CCy2 = _swig_property(_micropolisengine.Micropolis_CCy2_get, _micropolisengine.Micropolis_CCy2_set)
    __swig_setmethods__["PolMaxX"] = _micropolisengine.Micropolis_PolMaxX_set
    __swig_getmethods__["PolMaxX"] = _micropolisengine.Micropolis_PolMaxX_get
    if _newclass:PolMaxX = _swig_property(_micropolisengine.Micropolis_PolMaxX_get, _micropolisengine.Micropolis_PolMaxX_set)
    __swig_setmethods__["PolMaxY"] = _micropolisengine.Micropolis_PolMaxY_set
    __swig_getmethods__["PolMaxY"] = _micropolisengine.Micropolis_PolMaxY_get
    if _newclass:PolMaxY = _swig_property(_micropolisengine.Micropolis_PolMaxY_get, _micropolisengine.Micropolis_PolMaxY_set)
    __swig_setmethods__["CrimeMaxX"] = _micropolisengine.Micropolis_CrimeMaxX_set
    __swig_getmethods__["CrimeMaxX"] = _micropolisengine.Micropolis_CrimeMaxX_get
    if _newclass:CrimeMaxX = _swig_property(_micropolisengine.Micropolis_CrimeMaxX_get, _micropolisengine.Micropolis_CrimeMaxX_set)
    __swig_setmethods__["CrimeMaxY"] = _micropolisengine.Micropolis_CrimeMaxY_set
    __swig_getmethods__["CrimeMaxY"] = _micropolisengine.Micropolis_CrimeMaxY_get
    if _newclass:CrimeMaxY = _swig_property(_micropolisengine.Micropolis_CrimeMaxY_get, _micropolisengine.Micropolis_CrimeMaxY_set)
    __swig_setmethods__["DonDither"] = _micropolisengine.Micropolis_DonDither_set
    __swig_getmethods__["DonDither"] = _micropolisengine.Micropolis_DonDither_get
    if _newclass:DonDither = _swig_property(_micropolisengine.Micropolis_DonDither_get, _micropolisengine.Micropolis_DonDither_set)
    def FireAnalysis(*args): return _micropolisengine.Micropolis_FireAnalysis(*args)
    def PopDenScan(*args): return _micropolisengine.Micropolis_PopDenScan(*args)
    def GetPDen(*args): return _micropolisengine.Micropolis_GetPDen(*args)
    def PTLScan(*args): return _micropolisengine.Micropolis_PTLScan(*args)
    def GetPValue(*args): return _micropolisengine.Micropolis_GetPValue(*args)
    def GetDisCC(*args): return _micropolisengine.Micropolis_GetDisCC(*args)
    def CrimeScan(*args): return _micropolisengine.Micropolis_CrimeScan(*args)
    def SmoothTerrain(*args): return _micropolisengine.Micropolis_SmoothTerrain(*args)
    def DoSmooth(*args): return _micropolisengine.Micropolis_DoSmooth(*args)
    def DoSmooth2(*args): return _micropolisengine.Micropolis_DoSmooth2(*args)
    def ClrTemArray(*args): return _micropolisengine.Micropolis_ClrTemArray(*args)
    def SmoothFSMap(*args): return _micropolisengine.Micropolis_SmoothFSMap(*args)
    def SmoothPSMap(*args): return _micropolisengine.Micropolis_SmoothPSMap(*args)
    def DistIntMarket(*args): return _micropolisengine.Micropolis_DistIntMarket(*args)
    __swig_setmethods__["ValveFlag"] = _micropolisengine.Micropolis_ValveFlag_set
    __swig_getmethods__["ValveFlag"] = _micropolisengine.Micropolis_ValveFlag_get
    if _newclass:ValveFlag = _swig_property(_micropolisengine.Micropolis_ValveFlag_get, _micropolisengine.Micropolis_ValveFlag_set)
    __swig_setmethods__["CrimeRamp"] = _micropolisengine.Micropolis_CrimeRamp_set
    __swig_getmethods__["CrimeRamp"] = _micropolisengine.Micropolis_CrimeRamp_get
    if _newclass:CrimeRamp = _swig_property(_micropolisengine.Micropolis_CrimeRamp_get, _micropolisengine.Micropolis_CrimeRamp_set)
    __swig_setmethods__["PolluteRamp"] = _micropolisengine.Micropolis_PolluteRamp_set
    __swig_getmethods__["PolluteRamp"] = _micropolisengine.Micropolis_PolluteRamp_get
    if _newclass:PolluteRamp = _swig_property(_micropolisengine.Micropolis_PolluteRamp_get, _micropolisengine.Micropolis_PolluteRamp_set)
    __swig_setmethods__["RValve"] = _micropolisengine.Micropolis_RValve_set
    __swig_getmethods__["RValve"] = _micropolisengine.Micropolis_RValve_get
    if _newclass:RValve = _swig_property(_micropolisengine.Micropolis_RValve_get, _micropolisengine.Micropolis_RValve_set)
    __swig_setmethods__["CValve"] = _micropolisengine.Micropolis_CValve_set
    __swig_getmethods__["CValve"] = _micropolisengine.Micropolis_CValve_get
    if _newclass:CValve = _swig_property(_micropolisengine.Micropolis_CValve_get, _micropolisengine.Micropolis_CValve_set)
    __swig_setmethods__["IValve"] = _micropolisengine.Micropolis_IValve_set
    __swig_getmethods__["IValve"] = _micropolisengine.Micropolis_IValve_get
    if _newclass:IValve = _swig_property(_micropolisengine.Micropolis_IValve_get, _micropolisengine.Micropolis_IValve_set)
    __swig_setmethods__["ResCap"] = _micropolisengine.Micropolis_ResCap_set
    __swig_getmethods__["ResCap"] = _micropolisengine.Micropolis_ResCap_get
    if _newclass:ResCap = _swig_property(_micropolisengine.Micropolis_ResCap_get, _micropolisengine.Micropolis_ResCap_set)
    __swig_setmethods__["ComCap"] = _micropolisengine.Micropolis_ComCap_set
    __swig_getmethods__["ComCap"] = _micropolisengine.Micropolis_ComCap_get
    if _newclass:ComCap = _swig_property(_micropolisengine.Micropolis_ComCap_get, _micropolisengine.Micropolis_ComCap_set)
    __swig_setmethods__["IndCap"] = _micropolisengine.Micropolis_IndCap_set
    __swig_getmethods__["IndCap"] = _micropolisengine.Micropolis_IndCap_get
    if _newclass:IndCap = _swig_property(_micropolisengine.Micropolis_IndCap_get, _micropolisengine.Micropolis_IndCap_set)
    __swig_setmethods__["CashFlow"] = _micropolisengine.Micropolis_CashFlow_set
    __swig_getmethods__["CashFlow"] = _micropolisengine.Micropolis_CashFlow_get
    if _newclass:CashFlow = _swig_property(_micropolisengine.Micropolis_CashFlow_get, _micropolisengine.Micropolis_CashFlow_set)
    __swig_setmethods__["EMarket"] = _micropolisengine.Micropolis_EMarket_set
    __swig_getmethods__["EMarket"] = _micropolisengine.Micropolis_EMarket_get
    if _newclass:EMarket = _swig_property(_micropolisengine.Micropolis_EMarket_get, _micropolisengine.Micropolis_EMarket_set)
    __swig_setmethods__["DisasterEvent"] = _micropolisengine.Micropolis_DisasterEvent_set
    __swig_getmethods__["DisasterEvent"] = _micropolisengine.Micropolis_DisasterEvent_get
    if _newclass:DisasterEvent = _swig_property(_micropolisengine.Micropolis_DisasterEvent_get, _micropolisengine.Micropolis_DisasterEvent_set)
    __swig_setmethods__["DisasterWait"] = _micropolisengine.Micropolis_DisasterWait_set
    __swig_getmethods__["DisasterWait"] = _micropolisengine.Micropolis_DisasterWait_get
    if _newclass:DisasterWait = _swig_property(_micropolisengine.Micropolis_DisasterWait_get, _micropolisengine.Micropolis_DisasterWait_set)
    __swig_setmethods__["ScoreType"] = _micropolisengine.Micropolis_ScoreType_set
    __swig_getmethods__["ScoreType"] = _micropolisengine.Micropolis_ScoreType_get
    if _newclass:ScoreType = _swig_property(_micropolisengine.Micropolis_ScoreType_get, _micropolisengine.Micropolis_ScoreType_set)
    __swig_setmethods__["ScoreWait"] = _micropolisengine.Micropolis_ScoreWait_set
    __swig_getmethods__["ScoreWait"] = _micropolisengine.Micropolis_ScoreWait_get
    if _newclass:ScoreWait = _swig_property(_micropolisengine.Micropolis_ScoreWait_get, _micropolisengine.Micropolis_ScoreWait_set)
    __swig_setmethods__["PwrdZCnt"] = _micropolisengine.Micropolis_PwrdZCnt_set
    __swig_getmethods__["PwrdZCnt"] = _micropolisengine.Micropolis_PwrdZCnt_get
    if _newclass:PwrdZCnt = _swig_property(_micropolisengine.Micropolis_PwrdZCnt_get, _micropolisengine.Micropolis_PwrdZCnt_set)
    __swig_setmethods__["unPwrdZCnt"] = _micropolisengine.Micropolis_unPwrdZCnt_set
    __swig_getmethods__["unPwrdZCnt"] = _micropolisengine.Micropolis_unPwrdZCnt_get
    if _newclass:unPwrdZCnt = _swig_property(_micropolisengine.Micropolis_unPwrdZCnt_get, _micropolisengine.Micropolis_unPwrdZCnt_set)
    __swig_setmethods__["NewPower"] = _micropolisengine.Micropolis_NewPower_set
    __swig_getmethods__["NewPower"] = _micropolisengine.Micropolis_NewPower_get
    if _newclass:NewPower = _swig_property(_micropolisengine.Micropolis_NewPower_get, _micropolisengine.Micropolis_NewPower_set)
    __swig_setmethods__["AvCityTax"] = _micropolisengine.Micropolis_AvCityTax_set
    __swig_getmethods__["AvCityTax"] = _micropolisengine.Micropolis_AvCityTax_get
    if _newclass:AvCityTax = _swig_property(_micropolisengine.Micropolis_AvCityTax_get, _micropolisengine.Micropolis_AvCityTax_set)
    __swig_setmethods__["Scycle"] = _micropolisengine.Micropolis_Scycle_set
    __swig_getmethods__["Scycle"] = _micropolisengine.Micropolis_Scycle_get
    if _newclass:Scycle = _swig_property(_micropolisengine.Micropolis_Scycle_get, _micropolisengine.Micropolis_Scycle_set)
    __swig_setmethods__["Fcycle"] = _micropolisengine.Micropolis_Fcycle_set
    __swig_getmethods__["Fcycle"] = _micropolisengine.Micropolis_Fcycle_get
    if _newclass:Fcycle = _swig_property(_micropolisengine.Micropolis_Fcycle_get, _micropolisengine.Micropolis_Fcycle_set)
    __swig_setmethods__["Spdcycle"] = _micropolisengine.Micropolis_Spdcycle_set
    __swig_getmethods__["Spdcycle"] = _micropolisengine.Micropolis_Spdcycle_get
    if _newclass:Spdcycle = _swig_property(_micropolisengine.Micropolis_Spdcycle_get, _micropolisengine.Micropolis_Spdcycle_set)
    __swig_setmethods__["DoInitialEval"] = _micropolisengine.Micropolis_DoInitialEval_set
    __swig_getmethods__["DoInitialEval"] = _micropolisengine.Micropolis_DoInitialEval_get
    if _newclass:DoInitialEval = _swig_property(_micropolisengine.Micropolis_DoInitialEval_get, _micropolisengine.Micropolis_DoInitialEval_set)
    def SimFrame(*args): return _micropolisengine.Micropolis_SimFrame(*args)
    def Simulate(*args): return _micropolisengine.Micropolis_Simulate(*args)
    def DoSimInit(*args): return _micropolisengine.Micropolis_DoSimInit(*args)
    def DoNilPower(*args): return _micropolisengine.Micropolis_DoNilPower(*args)
    def DecTrafficMem(*args): return _micropolisengine.Micropolis_DecTrafficMem(*args)
    def DecROGMem(*args): return _micropolisengine.Micropolis_DecROGMem(*args)
    def InitSimMemory(*args): return _micropolisengine.Micropolis_InitSimMemory(*args)
    def SimLoadInit(*args): return _micropolisengine.Micropolis_SimLoadInit(*args)
    def SetCommonInits(*args): return _micropolisengine.Micropolis_SetCommonInits(*args)
    def SetValves(*args): return _micropolisengine.Micropolis_SetValves(*args)
    def ClearCensus(*args): return _micropolisengine.Micropolis_ClearCensus(*args)
    def TakeCensus(*args): return _micropolisengine.Micropolis_TakeCensus(*args)
    def Take2Census(*args): return _micropolisengine.Micropolis_Take2Census(*args)
    def CollectTax(*args): return _micropolisengine.Micropolis_CollectTax(*args)
    def UpdateFundEffects(*args): return _micropolisengine.Micropolis_UpdateFundEffects(*args)
    def MapScan(*args): return _micropolisengine.Micropolis_MapScan(*args)
    def DoRail(*args): return _micropolisengine.Micropolis_DoRail(*args)
    def DoRadTile(*args): return _micropolisengine.Micropolis_DoRadTile(*args)
    def DoRoad(*args): return _micropolisengine.Micropolis_DoRoad(*args)
    def DoBridge(*args): return _micropolisengine.Micropolis_DoBridge(*args)
    def GetBoatDis(*args): return _micropolisengine.Micropolis_GetBoatDis(*args)
    def DoFire(*args): return _micropolisengine.Micropolis_DoFire(*args)
    def FireZone(*args): return _micropolisengine.Micropolis_FireZone(*args)
    __swig_setmethods__["spriteList"] = _micropolisengine.Micropolis_spriteList_set
    __swig_getmethods__["spriteList"] = _micropolisengine.Micropolis_spriteList_get
    if _newclass:spriteList = _swig_property(_micropolisengine.Micropolis_spriteList_get, _micropolisengine.Micropolis_spriteList_set)
    __swig_setmethods__["FreeSprites"] = _micropolisengine.Micropolis_FreeSprites_set
    __swig_getmethods__["FreeSprites"] = _micropolisengine.Micropolis_FreeSprites_get
    if _newclass:FreeSprites = _swig_property(_micropolisengine.Micropolis_FreeSprites_get, _micropolisengine.Micropolis_FreeSprites_set)
    __swig_setmethods__["GlobalSprites"] = _micropolisengine.Micropolis_GlobalSprites_set
    __swig_getmethods__["GlobalSprites"] = _micropolisengine.Micropolis_GlobalSprites_get
    if _newclass:GlobalSprites = _swig_property(_micropolisengine.Micropolis_GlobalSprites_get, _micropolisengine.Micropolis_GlobalSprites_set)
    __swig_setmethods__["CrashX"] = _micropolisengine.Micropolis_CrashX_set
    __swig_getmethods__["CrashX"] = _micropolisengine.Micropolis_CrashX_get
    if _newclass:CrashX = _swig_property(_micropolisengine.Micropolis_CrashX_get, _micropolisengine.Micropolis_CrashX_set)
    __swig_setmethods__["CrashY"] = _micropolisengine.Micropolis_CrashY_set
    __swig_getmethods__["CrashY"] = _micropolisengine.Micropolis_CrashY_get
    if _newclass:CrashY = _swig_property(_micropolisengine.Micropolis_CrashY_get, _micropolisengine.Micropolis_CrashY_set)
    __swig_setmethods__["absDist"] = _micropolisengine.Micropolis_absDist_set
    __swig_getmethods__["absDist"] = _micropolisengine.Micropolis_absDist_get
    if _newclass:absDist = _swig_property(_micropolisengine.Micropolis_absDist_get, _micropolisengine.Micropolis_absDist_set)
    __swig_setmethods__["Cycle"] = _micropolisengine.Micropolis_Cycle_set
    __swig_getmethods__["Cycle"] = _micropolisengine.Micropolis_Cycle_get
    if _newclass:Cycle = _swig_property(_micropolisengine.Micropolis_Cycle_get, _micropolisengine.Micropolis_Cycle_set)
    def NewSprite(*args): return _micropolisengine.Micropolis_NewSprite(*args)
    def InitSprite(*args): return _micropolisengine.Micropolis_InitSprite(*args)
    def DestroyAllSprites(*args): return _micropolisengine.Micropolis_DestroyAllSprites(*args)
    def DestroySprite(*args): return _micropolisengine.Micropolis_DestroySprite(*args)
    def GetSprite(*args): return _micropolisengine.Micropolis_GetSprite(*args)
    def MakeSprite(*args): return _micropolisengine.Micropolis_MakeSprite(*args)
    def DrawObjects(*args): return _micropolisengine.Micropolis_DrawObjects(*args)
    def DrawSprite(*args): return _micropolisengine.Micropolis_DrawSprite(*args)
    def GetChar(*args): return _micropolisengine.Micropolis_GetChar(*args)
    def TurnTo(*args): return _micropolisengine.Micropolis_TurnTo(*args)
    def TryOther(*args): return _micropolisengine.Micropolis_TryOther(*args)
    def SpriteNotInBounds(*args): return _micropolisengine.Micropolis_SpriteNotInBounds(*args)
    def GetDir(*args): return _micropolisengine.Micropolis_GetDir(*args)
    def GetDistance(*args): return _micropolisengine.Micropolis_GetDistance(*args)
    def CheckSpriteCollision(*args): return _micropolisengine.Micropolis_CheckSpriteCollision(*args)
    def MoveObjects(*args): return _micropolisengine.Micropolis_MoveObjects(*args)
    def DoTrainSprite(*args): return _micropolisengine.Micropolis_DoTrainSprite(*args)
    def DoCopterSprite(*args): return _micropolisengine.Micropolis_DoCopterSprite(*args)
    def DoAirplaneSprite(*args): return _micropolisengine.Micropolis_DoAirplaneSprite(*args)
    def DoShipSprite(*args): return _micropolisengine.Micropolis_DoShipSprite(*args)
    def DoMonsterSprite(*args): return _micropolisengine.Micropolis_DoMonsterSprite(*args)
    def DoTornadoSprite(*args): return _micropolisengine.Micropolis_DoTornadoSprite(*args)
    def DoExplosionSprite(*args): return _micropolisengine.Micropolis_DoExplosionSprite(*args)
    def DoBusSprite(*args): return _micropolisengine.Micropolis_DoBusSprite(*args)
    def CanDriveOn(*args): return _micropolisengine.Micropolis_CanDriveOn(*args)
    def ExplodeSprite(*args): return _micropolisengine.Micropolis_ExplodeSprite(*args)
    def checkWet(*args): return _micropolisengine.Micropolis_checkWet(*args)
    def Destroy(*args): return _micropolisengine.Micropolis_Destroy(*args)
    def OFireZone(*args): return _micropolisengine.Micropolis_OFireZone(*args)
    def StartFire(*args): return _micropolisengine.Micropolis_StartFire(*args)
    def GenerateTrain(*args): return _micropolisengine.Micropolis_GenerateTrain(*args)
    def GenerateBus(*args): return _micropolisengine.Micropolis_GenerateBus(*args)
    def GenerateShip(*args): return _micropolisengine.Micropolis_GenerateShip(*args)
    def MakeShipHere(*args): return _micropolisengine.Micropolis_MakeShipHere(*args)
    def MakeMonster(*args): return _micropolisengine.Micropolis_MakeMonster(*args)
    def MonsterHere(*args): return _micropolisengine.Micropolis_MonsterHere(*args)
    def GenerateCopter(*args): return _micropolisengine.Micropolis_GenerateCopter(*args)
    def GeneratePlane(*args): return _micropolisengine.Micropolis_GeneratePlane(*args)
    def MakeTornado(*args): return _micropolisengine.Micropolis_MakeTornado(*args)
    def MakeExplosion(*args): return _micropolisengine.Micropolis_MakeExplosion(*args)
    def MakeExplosionAt(*args): return _micropolisengine.Micropolis_MakeExplosionAt(*args)
    __swig_setmethods__["TotalFunds"] = _micropolisengine.Micropolis_TotalFunds_set
    __swig_getmethods__["TotalFunds"] = _micropolisengine.Micropolis_TotalFunds_get
    if _newclass:TotalFunds = _swig_property(_micropolisengine.Micropolis_TotalFunds_get, _micropolisengine.Micropolis_TotalFunds_set)
    __swig_setmethods__["autoBulldoze"] = _micropolisengine.Micropolis_autoBulldoze_set
    __swig_getmethods__["autoBulldoze"] = _micropolisengine.Micropolis_autoBulldoze_get
    if _newclass:autoBulldoze = _swig_property(_micropolisengine.Micropolis_autoBulldoze_get, _micropolisengine.Micropolis_autoBulldoze_set)
    __swig_setmethods__["autoBudget"] = _micropolisengine.Micropolis_autoBudget_set
    __swig_getmethods__["autoBudget"] = _micropolisengine.Micropolis_autoBudget_get
    if _newclass:autoBudget = _swig_property(_micropolisengine.Micropolis_autoBudget_get, _micropolisengine.Micropolis_autoBudget_set)
    __swig_setmethods__["LastMesTime"] = _micropolisengine.Micropolis_LastMesTime_set
    __swig_getmethods__["LastMesTime"] = _micropolisengine.Micropolis_LastMesTime_get
    if _newclass:LastMesTime = _swig_property(_micropolisengine.Micropolis_LastMesTime_get, _micropolisengine.Micropolis_LastMesTime_set)
    __swig_setmethods__["gameLevel"] = _micropolisengine.Micropolis_gameLevel_set
    __swig_getmethods__["gameLevel"] = _micropolisengine.Micropolis_gameLevel_get
    if _newclass:gameLevel = _swig_property(_micropolisengine.Micropolis_gameLevel_get, _micropolisengine.Micropolis_gameLevel_set)
    __swig_setmethods__["InitSimLoad"] = _micropolisengine.Micropolis_InitSimLoad_set
    __swig_getmethods__["InitSimLoad"] = _micropolisengine.Micropolis_InitSimLoad_get
    if _newclass:InitSimLoad = _swig_property(_micropolisengine.Micropolis_InitSimLoad_get, _micropolisengine.Micropolis_InitSimLoad_set)
    __swig_setmethods__["ScenarioID"] = _micropolisengine.Micropolis_ScenarioID_set
    __swig_getmethods__["ScenarioID"] = _micropolisengine.Micropolis_ScenarioID_get
    if _newclass:ScenarioID = _swig_property(_micropolisengine.Micropolis_ScenarioID_get, _micropolisengine.Micropolis_ScenarioID_set)
    __swig_setmethods__["SimSpeed"] = _micropolisengine.Micropolis_SimSpeed_set
    __swig_getmethods__["SimSpeed"] = _micropolisengine.Micropolis_SimSpeed_get
    if _newclass:SimSpeed = _swig_property(_micropolisengine.Micropolis_SimSpeed_get, _micropolisengine.Micropolis_SimSpeed_set)
    __swig_setmethods__["SimMetaSpeed"] = _micropolisengine.Micropolis_SimMetaSpeed_set
    __swig_getmethods__["SimMetaSpeed"] = _micropolisengine.Micropolis_SimMetaSpeed_get
    if _newclass:SimMetaSpeed = _swig_property(_micropolisengine.Micropolis_SimMetaSpeed_get, _micropolisengine.Micropolis_SimMetaSpeed_set)
    __swig_setmethods__["UserSoundOn"] = _micropolisengine.Micropolis_UserSoundOn_set
    __swig_getmethods__["UserSoundOn"] = _micropolisengine.Micropolis_UserSoundOn_get
    if _newclass:UserSoundOn = _swig_property(_micropolisengine.Micropolis_UserSoundOn_get, _micropolisengine.Micropolis_UserSoundOn_set)
    __swig_setmethods__["CityName"] = _micropolisengine.Micropolis_CityName_set
    __swig_getmethods__["CityName"] = _micropolisengine.Micropolis_CityName_get
    if _newclass:CityName = _swig_property(_micropolisengine.Micropolis_CityName_get, _micropolisengine.Micropolis_CityName_set)
    __swig_setmethods__["NoDisasters"] = _micropolisengine.Micropolis_NoDisasters_set
    __swig_getmethods__["NoDisasters"] = _micropolisengine.Micropolis_NoDisasters_get
    if _newclass:NoDisasters = _swig_property(_micropolisengine.Micropolis_NoDisasters_get, _micropolisengine.Micropolis_NoDisasters_set)
    __swig_setmethods__["MesNum"] = _micropolisengine.Micropolis_MesNum_set
    __swig_getmethods__["MesNum"] = _micropolisengine.Micropolis_MesNum_get
    if _newclass:MesNum = _swig_property(_micropolisengine.Micropolis_MesNum_get, _micropolisengine.Micropolis_MesNum_set)
    __swig_setmethods__["evalChanged"] = _micropolisengine.Micropolis_evalChanged_set
    __swig_getmethods__["evalChanged"] = _micropolisengine.Micropolis_evalChanged_get
    if _newclass:evalChanged = _swig_property(_micropolisengine.Micropolis_evalChanged_get, _micropolisengine.Micropolis_evalChanged_set)
    __swig_setmethods__["flagBlink"] = _micropolisengine.Micropolis_flagBlink_set
    __swig_getmethods__["flagBlink"] = _micropolisengine.Micropolis_flagBlink_get
    if _newclass:flagBlink = _swig_property(_micropolisengine.Micropolis_flagBlink_get, _micropolisengine.Micropolis_flagBlink_set)
    __swig_setmethods__["callbackHook"] = _micropolisengine.Micropolis_callbackHook_set
    __swig_getmethods__["callbackHook"] = _micropolisengine.Micropolis_callbackHook_get
    if _newclass:callbackHook = _swig_property(_micropolisengine.Micropolis_callbackHook_get, _micropolisengine.Micropolis_callbackHook_set)
    __swig_setmethods__["callbackData"] = _micropolisengine.Micropolis_callbackData_set
    __swig_getmethods__["callbackData"] = _micropolisengine.Micropolis_callbackData_get
    if _newclass:callbackData = _swig_property(_micropolisengine.Micropolis_callbackData_get, _micropolisengine.Micropolis_callbackData_set)
    __swig_setmethods__["userData"] = _micropolisengine.Micropolis_userData_set
    __swig_getmethods__["userData"] = _micropolisengine.Micropolis_userData_get
    if _newclass:userData = _swig_property(_micropolisengine.Micropolis_userData_get, _micropolisengine.Micropolis_userData_set)
    def Spend(*args): return _micropolisengine.Micropolis_Spend(*args)
    def SetFunds(*args): return _micropolisengine.Micropolis_SetFunds(*args)
    def TickCount(*args): return _micropolisengine.Micropolis_TickCount(*args)
    def NewPtr(*args): return _micropolisengine.Micropolis_NewPtr(*args)
    def FreePtr(*args): return _micropolisengine.Micropolis_FreePtr(*args)
    def DoPlayNewCity(*args): return _micropolisengine.Micropolis_DoPlayNewCity(*args)
    def DoReallyStartGame(*args): return _micropolisengine.Micropolis_DoReallyStartGame(*args)
    def DoStartLoad(*args): return _micropolisengine.Micropolis_DoStartLoad(*args)
    def DoStartScenario(*args): return _micropolisengine.Micropolis_DoStartScenario(*args)
    def DropFireBombs(*args): return _micropolisengine.Micropolis_DropFireBombs(*args)
    def InitGame(*args): return _micropolisengine.Micropolis_InitGame(*args)
    def Callback(*args): return _micropolisengine.Micropolis_Callback(*args)
    def DoEarthquake(*args): return _micropolisengine.Micropolis_DoEarthquake(*args)
    def InvalidateEditors(*args): return _micropolisengine.Micropolis_InvalidateEditors(*args)
    def InvalidateMaps(*args): return _micropolisengine.Micropolis_InvalidateMaps(*args)
    def InitializeSound(*args): return _micropolisengine.Micropolis_InitializeSound(*args)
    def MakeSound(*args): return _micropolisengine.Micropolis_MakeSound(*args)
    def getTile(*args): return _micropolisengine.Micropolis_getTile(*args)
    def getMapBuffer(*args): return _micropolisengine.Micropolis_getMapBuffer(*args)
    __swig_setmethods__["last_x"] = _micropolisengine.Micropolis_last_x_set
    __swig_getmethods__["last_x"] = _micropolisengine.Micropolis_last_x_get
    if _newclass:last_x = _swig_property(_micropolisengine.Micropolis_last_x_get, _micropolisengine.Micropolis_last_x_set)
    __swig_setmethods__["last_y"] = _micropolisengine.Micropolis_last_y_set
    __swig_getmethods__["last_y"] = _micropolisengine.Micropolis_last_y_get
    if _newclass:last_y = _swig_property(_micropolisengine.Micropolis_last_y_get, _micropolisengine.Micropolis_last_y_set)
    __swig_setmethods__["tool_x"] = _micropolisengine.Micropolis_tool_x_set
    __swig_getmethods__["tool_x"] = _micropolisengine.Micropolis_tool_x_get
    if _newclass:tool_x = _swig_property(_micropolisengine.Micropolis_tool_x_get, _micropolisengine.Micropolis_tool_x_set)
    __swig_setmethods__["tool_y"] = _micropolisengine.Micropolis_tool_y_set
    __swig_getmethods__["tool_y"] = _micropolisengine.Micropolis_tool_y_get
    if _newclass:tool_y = _swig_property(_micropolisengine.Micropolis_tool_y_get, _micropolisengine.Micropolis_tool_y_set)
    def putDownPark(*args): return _micropolisengine.Micropolis_putDownPark(*args)
    def putDownNetwork(*args): return _micropolisengine.Micropolis_putDownNetwork(*args)
    def checkBigZone(*args): return _micropolisengine.Micropolis_checkBigZone(*args)
    def check3x3(*args): return _micropolisengine.Micropolis_check3x3(*args)
    def check4x4(*args): return _micropolisengine.Micropolis_check4x4(*args)
    def check6x6(*args): return _micropolisengine.Micropolis_check6x6(*args)
    def getDensityStr(*args): return _micropolisengine.Micropolis_getDensityStr(*args)
    def doZoneStatus(*args): return _micropolisengine.Micropolis_doZoneStatus(*args)
    def doShowZoneStatus(*args): return _micropolisengine.Micropolis_doShowZoneStatus(*args)
    def didTool(*args): return _micropolisengine.Micropolis_didTool(*args)
    def queryTool(*args): return _micropolisengine.Micropolis_queryTool(*args)
    def bulldozerTool(*args): return _micropolisengine.Micropolis_bulldozerTool(*args)
    def roadTool(*args): return _micropolisengine.Micropolis_roadTool(*args)
    def railroadTool(*args): return _micropolisengine.Micropolis_railroadTool(*args)
    def wireTool(*args): return _micropolisengine.Micropolis_wireTool(*args)
    def parkTool(*args): return _micropolisengine.Micropolis_parkTool(*args)
    def residentialTool(*args): return _micropolisengine.Micropolis_residentialTool(*args)
    def commercialTool(*args): return _micropolisengine.Micropolis_commercialTool(*args)
    def industrialTool(*args): return _micropolisengine.Micropolis_industrialTool(*args)
    def policeStationTool(*args): return _micropolisengine.Micropolis_policeStationTool(*args)
    def fireStationTool(*args): return _micropolisengine.Micropolis_fireStationTool(*args)
    def stadiumTool(*args): return _micropolisengine.Micropolis_stadiumTool(*args)
    def coalPowerTool(*args): return _micropolisengine.Micropolis_coalPowerTool(*args)
    def nuclearPowerTool(*args): return _micropolisengine.Micropolis_nuclearPowerTool(*args)
    def seaportTool(*args): return _micropolisengine.Micropolis_seaportTool(*args)
    def airportTool(*args): return _micropolisengine.Micropolis_airportTool(*args)
    def networkTool(*args): return _micropolisengine.Micropolis_networkTool(*args)
    def doTool(*args): return _micropolisengine.Micropolis_doTool(*args)
    def toolDown(*args): return _micropolisengine.Micropolis_toolDown(*args)
    def toolUp(*args): return _micropolisengine.Micropolis_toolUp(*args)
    def toolDrag(*args): return _micropolisengine.Micropolis_toolDrag(*args)
    __swig_setmethods__["PosStackN"] = _micropolisengine.Micropolis_PosStackN_set
    __swig_getmethods__["PosStackN"] = _micropolisengine.Micropolis_PosStackN_get
    if _newclass:PosStackN = _swig_property(_micropolisengine.Micropolis_PosStackN_get, _micropolisengine.Micropolis_PosStackN_set)
    __swig_setmethods__["SMapXStack"] = _micropolisengine.Micropolis_SMapXStack_set
    __swig_getmethods__["SMapXStack"] = _micropolisengine.Micropolis_SMapXStack_get
    if _newclass:SMapXStack = _swig_property(_micropolisengine.Micropolis_SMapXStack_get, _micropolisengine.Micropolis_SMapXStack_set)
    __swig_setmethods__["SMapYStack"] = _micropolisengine.Micropolis_SMapYStack_set
    __swig_getmethods__["SMapYStack"] = _micropolisengine.Micropolis_SMapYStack_get
    if _newclass:SMapYStack = _swig_property(_micropolisengine.Micropolis_SMapYStack_get, _micropolisengine.Micropolis_SMapYStack_set)
    __swig_setmethods__["LDir"] = _micropolisengine.Micropolis_LDir_set
    __swig_getmethods__["LDir"] = _micropolisengine.Micropolis_LDir_get
    if _newclass:LDir = _swig_property(_micropolisengine.Micropolis_LDir_get, _micropolisengine.Micropolis_LDir_set)
    __swig_setmethods__["TrafMaxX"] = _micropolisengine.Micropolis_TrafMaxX_set
    __swig_getmethods__["TrafMaxX"] = _micropolisengine.Micropolis_TrafMaxX_get
    if _newclass:TrafMaxX = _swig_property(_micropolisengine.Micropolis_TrafMaxX_get, _micropolisengine.Micropolis_TrafMaxX_set)
    __swig_setmethods__["TrafMaxY"] = _micropolisengine.Micropolis_TrafMaxY_set
    __swig_getmethods__["TrafMaxY"] = _micropolisengine.Micropolis_TrafMaxY_get
    if _newclass:TrafMaxY = _swig_property(_micropolisengine.Micropolis_TrafMaxY_get, _micropolisengine.Micropolis_TrafMaxY_set)
    def MakeTraf(*args): return _micropolisengine.Micropolis_MakeTraf(*args)
    def SetTrafMem(*args): return _micropolisengine.Micropolis_SetTrafMem(*args)
    def PushPos(*args): return _micropolisengine.Micropolis_PushPos(*args)
    def PullPos(*args): return _micropolisengine.Micropolis_PullPos(*args)
    def FindPRoad(*args): return _micropolisengine.Micropolis_FindPRoad(*args)
    def FindPTele(*args): return _micropolisengine.Micropolis_FindPTele(*args)
    def TryDrive(*args): return _micropolisengine.Micropolis_TryDrive(*args)
    def TryGo(*args): return _micropolisengine.Micropolis_TryGo(*args)
    def GetFromMap(*args): return _micropolisengine.Micropolis_GetFromMap(*args)
    __swig_setmethods__["MustUpdateFunds"] = _micropolisengine.Micropolis_MustUpdateFunds_set
    __swig_getmethods__["MustUpdateFunds"] = _micropolisengine.Micropolis_MustUpdateFunds_get
    if _newclass:MustUpdateFunds = _swig_property(_micropolisengine.Micropolis_MustUpdateFunds_get, _micropolisengine.Micropolis_MustUpdateFunds_set)
    __swig_setmethods__["MustUpdateOptions"] = _micropolisengine.Micropolis_MustUpdateOptions_set
    __swig_getmethods__["MustUpdateOptions"] = _micropolisengine.Micropolis_MustUpdateOptions_get
    if _newclass:MustUpdateOptions = _swig_property(_micropolisengine.Micropolis_MustUpdateOptions_get, _micropolisengine.Micropolis_MustUpdateOptions_set)
    __swig_setmethods__["LastCityTime"] = _micropolisengine.Micropolis_LastCityTime_set
    __swig_getmethods__["LastCityTime"] = _micropolisengine.Micropolis_LastCityTime_get
    if _newclass:LastCityTime = _swig_property(_micropolisengine.Micropolis_LastCityTime_get, _micropolisengine.Micropolis_LastCityTime_set)
    __swig_setmethods__["LastCityYear"] = _micropolisengine.Micropolis_LastCityYear_set
    __swig_getmethods__["LastCityYear"] = _micropolisengine.Micropolis_LastCityYear_get
    if _newclass:LastCityYear = _swig_property(_micropolisengine.Micropolis_LastCityYear_get, _micropolisengine.Micropolis_LastCityYear_set)
    __swig_setmethods__["LastCityMonth"] = _micropolisengine.Micropolis_LastCityMonth_set
    __swig_getmethods__["LastCityMonth"] = _micropolisengine.Micropolis_LastCityMonth_get
    if _newclass:LastCityMonth = _swig_property(_micropolisengine.Micropolis_LastCityMonth_get, _micropolisengine.Micropolis_LastCityMonth_set)
    __swig_setmethods__["LastFunds"] = _micropolisengine.Micropolis_LastFunds_set
    __swig_getmethods__["LastFunds"] = _micropolisengine.Micropolis_LastFunds_get
    if _newclass:LastFunds = _swig_property(_micropolisengine.Micropolis_LastFunds_get, _micropolisengine.Micropolis_LastFunds_set)
    __swig_setmethods__["LastR"] = _micropolisengine.Micropolis_LastR_set
    __swig_getmethods__["LastR"] = _micropolisengine.Micropolis_LastR_get
    if _newclass:LastR = _swig_property(_micropolisengine.Micropolis_LastR_get, _micropolisengine.Micropolis_LastR_set)
    __swig_setmethods__["LastC"] = _micropolisengine.Micropolis_LastC_set
    __swig_getmethods__["LastC"] = _micropolisengine.Micropolis_LastC_get
    if _newclass:LastC = _swig_property(_micropolisengine.Micropolis_LastC_get, _micropolisengine.Micropolis_LastC_set)
    __swig_setmethods__["LastI"] = _micropolisengine.Micropolis_LastI_set
    __swig_getmethods__["LastI"] = _micropolisengine.Micropolis_LastI_get
    if _newclass:LastI = _swig_property(_micropolisengine.Micropolis_LastI_get, _micropolisengine.Micropolis_LastI_set)
    def DoUpdateHeads(*args): return _micropolisengine.Micropolis_DoUpdateHeads(*args)
    def UpdateEditors(*args): return _micropolisengine.Micropolis_UpdateEditors(*args)
    def UpdateMaps(*args): return _micropolisengine.Micropolis_UpdateMaps(*args)
    def UpdateGraphs(*args): return _micropolisengine.Micropolis_UpdateGraphs(*args)
    def UpdateEvaluation(*args): return _micropolisengine.Micropolis_UpdateEvaluation(*args)
    def UpdateHeads(*args): return _micropolisengine.Micropolis_UpdateHeads(*args)
    def UpdateFunds(*args): return _micropolisengine.Micropolis_UpdateFunds(*args)
    def ReallyUpdateFunds(*args): return _micropolisengine.Micropolis_ReallyUpdateFunds(*args)
    def doTimeStuff(*args): return _micropolisengine.Micropolis_doTimeStuff(*args)
    def updateDate(*args): return _micropolisengine.Micropolis_updateDate(*args)
    def showValves(*args): return _micropolisengine.Micropolis_showValves(*args)
    def drawValve(*args): return _micropolisengine.Micropolis_drawValve(*args)
    def SetDemand(*args): return _micropolisengine.Micropolis_SetDemand(*args)
    def updateOptions(*args): return _micropolisengine.Micropolis_updateOptions(*args)
    def UpdateOptionsMenu(*args): return _micropolisengine.Micropolis_UpdateOptionsMenu(*args)
    def UpdateUserInterface(*args): return _micropolisengine.Micropolis_UpdateUserInterface(*args)
    def makeDollarDecimalStr(*args): return _micropolisengine.Micropolis_makeDollarDecimalStr(*args)
    def Pause(*args): return _micropolisengine.Micropolis_Pause(*args)
    def Resume(*args): return _micropolisengine.Micropolis_Resume(*args)
    def setSpeed(*args): return _micropolisengine.Micropolis_setSpeed(*args)
    def setSkips(*args): return _micropolisengine.Micropolis_setSkips(*args)
    def SetGameLevelFunds(*args): return _micropolisengine.Micropolis_SetGameLevelFunds(*args)
    def SetGameLevel(*args): return _micropolisengine.Micropolis_SetGameLevel(*args)
    def UpdateGameLevel(*args): return _micropolisengine.Micropolis_UpdateGameLevel(*args)
    def setCityName(*args): return _micropolisengine.Micropolis_setCityName(*args)
    def setCleanCityName(*args): return _micropolisengine.Micropolis_setCleanCityName(*args)
    def SetYear(*args): return _micropolisengine.Micropolis_SetYear(*args)
    def CurrentYear(*args): return _micropolisengine.Micropolis_CurrentYear(*args)
    def DoNewGame(*args): return _micropolisengine.Micropolis_DoNewGame(*args)
    def DoZone(*args): return _micropolisengine.Micropolis_DoZone(*args)
    def DoHospChur(*args): return _micropolisengine.Micropolis_DoHospChur(*args)
    def SetSmoke(*args): return _micropolisengine.Micropolis_SetSmoke(*args)
    def DoIndustrial(*args): return _micropolisengine.Micropolis_DoIndustrial(*args)
    def DoCommercial(*args): return _micropolisengine.Micropolis_DoCommercial(*args)
    def DoResidential(*args): return _micropolisengine.Micropolis_DoResidential(*args)
    def MakeHosp(*args): return _micropolisengine.Micropolis_MakeHosp(*args)
    def GetCRVal(*args): return _micropolisengine.Micropolis_GetCRVal(*args)
    def DoResIn(*args): return _micropolisengine.Micropolis_DoResIn(*args)
    def DoComIn(*args): return _micropolisengine.Micropolis_DoComIn(*args)
    def DoIndIn(*args): return _micropolisengine.Micropolis_DoIndIn(*args)
    def IncROG(*args): return _micropolisengine.Micropolis_IncROG(*args)
    def DoResOut(*args): return _micropolisengine.Micropolis_DoResOut(*args)
    def DoComOut(*args): return _micropolisengine.Micropolis_DoComOut(*args)
    def DoIndOut(*args): return _micropolisengine.Micropolis_DoIndOut(*args)
    def RZPop(*args): return _micropolisengine.Micropolis_RZPop(*args)
    def CZPop(*args): return _micropolisengine.Micropolis_CZPop(*args)
    def IZPop(*args): return _micropolisengine.Micropolis_IZPop(*args)
    def BuildHouse(*args): return _micropolisengine.Micropolis_BuildHouse(*args)
    def ResPlop(*args): return _micropolisengine.Micropolis_ResPlop(*args)
    def ComPlop(*args): return _micropolisengine.Micropolis_ComPlop(*args)
    def IndPlop(*args): return _micropolisengine.Micropolis_IndPlop(*args)
    def EvalLot(*args): return _micropolisengine.Micropolis_EvalLot(*args)
    def ZonePlop(*args): return _micropolisengine.Micropolis_ZonePlop(*args)
    def EvalRes(*args): return _micropolisengine.Micropolis_EvalRes(*args)
    def EvalCom(*args): return _micropolisengine.Micropolis_EvalCom(*args)
    def EvalInd(*args): return _micropolisengine.Micropolis_EvalInd(*args)
    def DoFreePop(*args): return _micropolisengine.Micropolis_DoFreePop(*args)
    def SetZPower(*args): return _micropolisengine.Micropolis_SetZPower(*args)
Micropolis_swigregister = _micropolisengine.Micropolis_swigregister
Micropolis_swigregister(Micropolis)



