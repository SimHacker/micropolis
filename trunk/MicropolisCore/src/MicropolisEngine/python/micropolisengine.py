# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.31
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _micropolisengine
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


GetPythonCallbackHook = _micropolisengine.GetPythonCallbackHook
GetPythonCallbackData = _micropolisengine.GetPythonCallbackData
MICROPOLIS_VERSION = _micropolisengine.MICROPOLIS_VERSION
IS_INTEL = _micropolisengine.IS_INTEL
RANDOM_RANGE = _micropolisengine.RANDOM_RANGE
NIL = _micropolisengine.NIL
HORIZ = _micropolisengine.HORIZ
VERT = _micropolisengine.VERT
HISTLEN = _micropolisengine.HISTLEN
MISCHISTLEN = _micropolisengine.MISCHISTLEN
ISLAND_RADIUS = _micropolisengine.ISLAND_RADIUS
HISTORY_TYPE_RES = _micropolisengine.HISTORY_TYPE_RES
HISTORY_TYPE_COM = _micropolisengine.HISTORY_TYPE_COM
HISTORY_TYPE_IND = _micropolisengine.HISTORY_TYPE_IND
HISTORY_TYPE_MONEY = _micropolisengine.HISTORY_TYPE_MONEY
HISTORY_TYPE_CRIME = _micropolisengine.HISTORY_TYPE_CRIME
HISTORY_TYPE_POLLUTION = _micropolisengine.HISTORY_TYPE_POLLUTION
HISTORY_TYPE_COUNT = _micropolisengine.HISTORY_TYPE_COUNT
RES_HIST = _micropolisengine.RES_HIST
COM_HIST = _micropolisengine.COM_HIST
IND_HIST = _micropolisengine.IND_HIST
MONEY_HIST = _micropolisengine.MONEY_HIST
CRIME_HIST = _micropolisengine.CRIME_HIST
POLLUTION_HIST = _micropolisengine.POLLUTION_HIST
HISTORIES = _micropolisengine.HISTORIES
ALL_HISTORIES = _micropolisengine.ALL_HISTORIES
HISTORY_SCALE_SHORT = _micropolisengine.HISTORY_SCALE_SHORT
HISTORY_SCALE_LONG = _micropolisengine.HISTORY_SCALE_LONG
HISTORY_SCALE_COUNT = _micropolisengine.HISTORY_SCALE_COUNT
POWERMAPLEN = _micropolisengine.POWERMAPLEN
ALMAP = _micropolisengine.ALMAP
REMAP = _micropolisengine.REMAP
COMAP = _micropolisengine.COMAP
INMAP = _micropolisengine.INMAP
PRMAP = _micropolisengine.PRMAP
RDMAP = _micropolisengine.RDMAP
PDMAP = _micropolisengine.PDMAP
RGMAP = _micropolisengine.RGMAP
TDMAP = _micropolisengine.TDMAP
PLMAP = _micropolisengine.PLMAP
CRMAP = _micropolisengine.CRMAP
LVMAP = _micropolisengine.LVMAP
FIMAP = _micropolisengine.FIMAP
POMAP = _micropolisengine.POMAP
DYMAP = _micropolisengine.DYMAP
NMAPS = _micropolisengine.NMAPS
VALVERATE = _micropolisengine.VALVERATE
CENSUSRATE = _micropolisengine.CENSUSRATE
TAXFREQ = _micropolisengine.TAXFREQ
SPRITE_NOTUSED = _micropolisengine.SPRITE_NOTUSED
SPRITE_TRAIN = _micropolisengine.SPRITE_TRAIN
SPRITE_HELICOPTER = _micropolisengine.SPRITE_HELICOPTER
SPRITE_AIRPLANE = _micropolisengine.SPRITE_AIRPLANE
SPRITE_SHIP = _micropolisengine.SPRITE_SHIP
SPRITE_MONSTER = _micropolisengine.SPRITE_MONSTER
SPRITE_TORNADO = _micropolisengine.SPRITE_TORNADO
SPRITE_EXPLOSION = _micropolisengine.SPRITE_EXPLOSION
SPRITE_BUS = _micropolisengine.SPRITE_BUS
SPRITE_COUNT = _micropolisengine.SPRITE_COUNT
PWRBIT = _micropolisengine.PWRBIT
CONDBIT = _micropolisengine.CONDBIT
BURNBIT = _micropolisengine.BURNBIT
BULLBIT = _micropolisengine.BULLBIT
ANIMBIT = _micropolisengine.ANIMBIT
ZONEBIT = _micropolisengine.ZONEBIT
ALLBITS = _micropolisengine.ALLBITS
LOMASK = _micropolisengine.LOMASK
BLBNBIT = _micropolisengine.BLBNBIT
BLBNCNBIT = _micropolisengine.BLBNCNBIT
BNCNBIT = _micropolisengine.BNCNBIT
DIRT = _micropolisengine.DIRT
RIVER = _micropolisengine.RIVER
REDGE = _micropolisengine.REDGE
CHANNEL = _micropolisengine.CHANNEL
FIRSTRIVEDGE = _micropolisengine.FIRSTRIVEDGE
LASTRIVEDGE = _micropolisengine.LASTRIVEDGE
WATER_LOW = _micropolisengine.WATER_LOW
WATER_HIGH = _micropolisengine.WATER_HIGH
TREEBASE = _micropolisengine.TREEBASE
WOODS_LOW = _micropolisengine.WOODS_LOW
LASTTREE = _micropolisengine.LASTTREE
WOODS = _micropolisengine.WOODS
UNUSED_TRASH1 = _micropolisengine.UNUSED_TRASH1
UNUSED_TRASH2 = _micropolisengine.UNUSED_TRASH2
WOODS_HIGH = _micropolisengine.WOODS_HIGH
WOODS2 = _micropolisengine.WOODS2
WOODS3 = _micropolisengine.WOODS3
WOODS4 = _micropolisengine.WOODS4
WOODS5 = _micropolisengine.WOODS5
RUBBLE = _micropolisengine.RUBBLE
LASTRUBBLE = _micropolisengine.LASTRUBBLE
FLOOD = _micropolisengine.FLOOD
LASTFLOOD = _micropolisengine.LASTFLOOD
RADTILE = _micropolisengine.RADTILE
UNUSED_TRASH3 = _micropolisengine.UNUSED_TRASH3
UNUSED_TRASH4 = _micropolisengine.UNUSED_TRASH4
UNUSED_TRASH5 = _micropolisengine.UNUSED_TRASH5
FIRE = _micropolisengine.FIRE
FIREBASE = _micropolisengine.FIREBASE
LASTFIRE = _micropolisengine.LASTFIRE
HBRIDGE = _micropolisengine.HBRIDGE
ROADBASE = _micropolisengine.ROADBASE
VBRIDGE = _micropolisengine.VBRIDGE
ROADS = _micropolisengine.ROADS
ROADS2 = _micropolisengine.ROADS2
ROADS3 = _micropolisengine.ROADS3
ROADS4 = _micropolisengine.ROADS4
ROADS5 = _micropolisengine.ROADS5
ROADS6 = _micropolisengine.ROADS6
ROADS7 = _micropolisengine.ROADS7
ROADS8 = _micropolisengine.ROADS8
ROADS9 = _micropolisengine.ROADS9
ROADS10 = _micropolisengine.ROADS10
INTERSECTION = _micropolisengine.INTERSECTION
HROADPOWER = _micropolisengine.HROADPOWER
VROADPOWER = _micropolisengine.VROADPOWER
BRWH = _micropolisengine.BRWH
LTRFBASE = _micropolisengine.LTRFBASE
BRWV = _micropolisengine.BRWV
BRWXXX1 = _micropolisengine.BRWXXX1
BRWXXX2 = _micropolisengine.BRWXXX2
BRWXXX3 = _micropolisengine.BRWXXX3
HTRFBASE = _micropolisengine.HTRFBASE
BRWXXX4 = _micropolisengine.BRWXXX4
BRWXXX5 = _micropolisengine.BRWXXX5
BRWXXX6 = _micropolisengine.BRWXXX6
LASTROAD = _micropolisengine.LASTROAD
BRWXXX7 = _micropolisengine.BRWXXX7
HPOWER = _micropolisengine.HPOWER
VPOWER = _micropolisengine.VPOWER
LHPOWER = _micropolisengine.LHPOWER
LVPOWER = _micropolisengine.LVPOWER
LVPOWER2 = _micropolisengine.LVPOWER2
LVPOWER3 = _micropolisengine.LVPOWER3
LVPOWER4 = _micropolisengine.LVPOWER4
LVPOWER5 = _micropolisengine.LVPOWER5
LVPOWER6 = _micropolisengine.LVPOWER6
LVPOWER7 = _micropolisengine.LVPOWER7
LVPOWER8 = _micropolisengine.LVPOWER8
LVPOWER9 = _micropolisengine.LVPOWER9
LVPOWER10 = _micropolisengine.LVPOWER10
RAILHPOWERV = _micropolisengine.RAILHPOWERV
RAILVPOWERH = _micropolisengine.RAILVPOWERH
POWERBASE = _micropolisengine.POWERBASE
LASTPOWER = _micropolisengine.LASTPOWER
UNUSED_TRASH6 = _micropolisengine.UNUSED_TRASH6
HRAIL = _micropolisengine.HRAIL
VRAIL = _micropolisengine.VRAIL
LHRAIL = _micropolisengine.LHRAIL
LVRAIL = _micropolisengine.LVRAIL
LVRAIL2 = _micropolisengine.LVRAIL2
LVRAIL3 = _micropolisengine.LVRAIL3
LVRAIL4 = _micropolisengine.LVRAIL4
LVRAIL5 = _micropolisengine.LVRAIL5
LVRAIL6 = _micropolisengine.LVRAIL6
LVRAIL7 = _micropolisengine.LVRAIL7
LVRAIL8 = _micropolisengine.LVRAIL8
LVRAIL9 = _micropolisengine.LVRAIL9
LVRAIL10 = _micropolisengine.LVRAIL10
HRAILROAD = _micropolisengine.HRAILROAD
VRAILROAD = _micropolisengine.VRAILROAD
RAILBASE = _micropolisengine.RAILBASE
LASTRAIL = _micropolisengine.LASTRAIL
ROADVPOWERH = _micropolisengine.ROADVPOWERH
RESBASE = _micropolisengine.RESBASE
FREEZ = _micropolisengine.FREEZ
HOUSE = _micropolisengine.HOUSE
LHTHR = _micropolisengine.LHTHR
HHTHR = _micropolisengine.HHTHR
RZB = _micropolisengine.RZB
HOSPITAL = _micropolisengine.HOSPITAL
CHURCH = _micropolisengine.CHURCH
COMBASE = _micropolisengine.COMBASE
COMCLR = _micropolisengine.COMCLR
CZB = _micropolisengine.CZB
COMLAST = _micropolisengine.COMLAST
INDBASE = _micropolisengine.INDBASE
INDCLR = _micropolisengine.INDCLR
LASTIND = _micropolisengine.LASTIND
IND1 = _micropolisengine.IND1
IZB = _micropolisengine.IZB
IND2 = _micropolisengine.IND2
IND3 = _micropolisengine.IND3
IND4 = _micropolisengine.IND4
IND5 = _micropolisengine.IND5
IND6 = _micropolisengine.IND6
IND7 = _micropolisengine.IND7
IND8 = _micropolisengine.IND8
IND9 = _micropolisengine.IND9
PORTBASE = _micropolisengine.PORTBASE
PORT = _micropolisengine.PORT
LASTPORT = _micropolisengine.LASTPORT
AIRPORTBASE = _micropolisengine.AIRPORTBASE
RADAR = _micropolisengine.RADAR
AIRPORT = _micropolisengine.AIRPORT
COALBASE = _micropolisengine.COALBASE
POWERPLANT = _micropolisengine.POWERPLANT
LASTPOWERPLANT = _micropolisengine.LASTPOWERPLANT
FIRESTBASE = _micropolisengine.FIRESTBASE
FIRESTATION = _micropolisengine.FIRESTATION
POLICESTBASE = _micropolisengine.POLICESTBASE
POLICESTATION = _micropolisengine.POLICESTATION
STADIUMBASE = _micropolisengine.STADIUMBASE
STADIUM = _micropolisengine.STADIUM
FULLSTADIUM = _micropolisengine.FULLSTADIUM
NUCLEARBASE = _micropolisengine.NUCLEARBASE
NUCLEAR = _micropolisengine.NUCLEAR
LASTZONE = _micropolisengine.LASTZONE
LIGHTNINGBOLT = _micropolisengine.LIGHTNINGBOLT
HBRDG0 = _micropolisengine.HBRDG0
HBRDG1 = _micropolisengine.HBRDG1
HBRDG2 = _micropolisengine.HBRDG2
HBRDG3 = _micropolisengine.HBRDG3
HBRDG_END = _micropolisengine.HBRDG_END
RADAR0 = _micropolisengine.RADAR0
RADAR1 = _micropolisengine.RADAR1
RADAR2 = _micropolisengine.RADAR2
RADAR3 = _micropolisengine.RADAR3
RADAR4 = _micropolisengine.RADAR4
RADAR5 = _micropolisengine.RADAR5
RADAR6 = _micropolisengine.RADAR6
RADAR7 = _micropolisengine.RADAR7
FOUNTAIN = _micropolisengine.FOUNTAIN
INDBASE2 = _micropolisengine.INDBASE2
TELEBASE = _micropolisengine.TELEBASE
TELELAST = _micropolisengine.TELELAST
SMOKEBASE = _micropolisengine.SMOKEBASE
TINYEXP = _micropolisengine.TINYEXP
SOMETINYEXP = _micropolisengine.SOMETINYEXP
LASTTINYEXP = _micropolisengine.LASTTINYEXP
TINYEXPLAST = _micropolisengine.TINYEXPLAST
COALSMOKE1 = _micropolisengine.COALSMOKE1
COALSMOKE2 = _micropolisengine.COALSMOKE2
COALSMOKE3 = _micropolisengine.COALSMOKE3
COALSMOKE4 = _micropolisengine.COALSMOKE4
FOOTBALLGAME1 = _micropolisengine.FOOTBALLGAME1
FOOTBALLGAME2 = _micropolisengine.FOOTBALLGAME2
VBRDG0 = _micropolisengine.VBRDG0
VBRDG1 = _micropolisengine.VBRDG1
VBRDG2 = _micropolisengine.VBRDG2
VBRDG3 = _micropolisengine.VBRDG3
TILE_COUNT = _micropolisengine.TILE_COUNT
TOOL_RESIDENTIAL = _micropolisengine.TOOL_RESIDENTIAL
TOOL_COMMERCIAL = _micropolisengine.TOOL_COMMERCIAL
TOOL_INDUSTRIAL = _micropolisengine.TOOL_INDUSTRIAL
TOOL_FIRESTATION = _micropolisengine.TOOL_FIRESTATION
TOOL_POLICESTATION = _micropolisengine.TOOL_POLICESTATION
TOOL_QUERY = _micropolisengine.TOOL_QUERY
TOOL_WIRE = _micropolisengine.TOOL_WIRE
TOOL_BULLDOZER = _micropolisengine.TOOL_BULLDOZER
TOOL_RAILROAD = _micropolisengine.TOOL_RAILROAD
TOOL_ROAD = _micropolisengine.TOOL_ROAD
TOOL_STADIUM = _micropolisengine.TOOL_STADIUM
TOOL_PARK = _micropolisengine.TOOL_PARK
TOOL_SEAPORT = _micropolisengine.TOOL_SEAPORT
TOOL_COALPOWER = _micropolisengine.TOOL_COALPOWER
TOOL_NUCLEARPOWER = _micropolisengine.TOOL_NUCLEARPOWER
TOOL_AIRPORT = _micropolisengine.TOOL_AIRPORT
TOOL_NETWORK = _micropolisengine.TOOL_NETWORK
TOOL_COUNT = _micropolisengine.TOOL_COUNT
TOOL_FIRST = _micropolisengine.TOOL_FIRST
TOOL_LAST = _micropolisengine.TOOL_LAST
SC_NONE = _micropolisengine.SC_NONE
SC_DULLSVILLE = _micropolisengine.SC_DULLSVILLE
SC_SAN_FRANCISCO = _micropolisengine.SC_SAN_FRANCISCO
SC_HAMBURG = _micropolisengine.SC_HAMBURG
SC_BERN = _micropolisengine.SC_BERN
SC_TOKYO = _micropolisengine.SC_TOKYO
SC_DETROIT = _micropolisengine.SC_DETROIT
SC_BOSTON = _micropolisengine.SC_BOSTON
SC_RIO = _micropolisengine.SC_RIO
SC_COUNT = _micropolisengine.SC_COUNT
DIR_NORTH = _micropolisengine.DIR_NORTH
DIR_WEST = _micropolisengine.DIR_WEST
DIR_SOUTH = _micropolisengine.DIR_SOUTH
DIR_EAST = _micropolisengine.DIR_EAST
DIR_DIR4 = _micropolisengine.DIR_DIR4
DIR_INVALID = _micropolisengine.DIR_INVALID
ReverseDirection = _micropolisengine.ReverseDirection
ZT_COMMERCIAL = _micropolisengine.ZT_COMMERCIAL
ZT_INDUSTRIAL = _micropolisengine.ZT_INDUSTRIAL
ZT_RESIDENTIAL = _micropolisengine.ZT_RESIDENTIAL
ZT_NUM_DESTINATIONS = _micropolisengine.ZT_NUM_DESTINATIONS
CVP_CRIME = _micropolisengine.CVP_CRIME
CVP_POLLUTION = _micropolisengine.CVP_POLLUTION
CVP_HOUSING = _micropolisengine.CVP_HOUSING
CVP_TAXES = _micropolisengine.CVP_TAXES
CVP_TRAFFIC = _micropolisengine.CVP_TRAFFIC
CVP_UNEMPLOYMENT = _micropolisengine.CVP_UNEMPLOYMENT
CVP_FIRE = _micropolisengine.CVP_FIRE
CVP_NUMPROBLEMS = _micropolisengine.CVP_NUMPROBLEMS
CVP_PROBLEM_COMPLAINTS = _micropolisengine.CVP_PROBLEM_COMPLAINTS
PROBNUM = _micropolisengine.PROBNUM
CC_VILLAGE = _micropolisengine.CC_VILLAGE
CC_TOWN = _micropolisengine.CC_TOWN
CC_CITY = _micropolisengine.CC_CITY
CC_CAPITAL = _micropolisengine.CC_CAPITAL
CC_METROPOLIS = _micropolisengine.CC_METROPOLIS
CC_MEGALOPOLIS = _micropolisengine.CC_MEGALOPOLIS
CC_NUM_CITIES = _micropolisengine.CC_NUM_CITIES
LEVEL_EASY = _micropolisengine.LEVEL_EASY
LEVEL_MEDIUM = _micropolisengine.LEVEL_MEDIUM
LEVEL_HARD = _micropolisengine.LEVEL_HARD
LEVEL_COUNT = _micropolisengine.LEVEL_COUNT
LEVEL_FIRST = _micropolisengine.LEVEL_FIRST
LEVEL_LAST = _micropolisengine.LEVEL_LAST
TestBounds = _micropolisengine.TestBounds
absoluteValue = _micropolisengine.absoluteValue
not_reached = _micropolisengine.not_reached
class Resource(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Resource, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Resource, name)
    __repr__ = _swig_repr
    __swig_setmethods__["buf"] = _micropolisengine.Resource_buf_set
    __swig_getmethods__["buf"] = _micropolisengine.Resource_buf_get
    if _newclass:buf = _swig_property(_micropolisengine.Resource_buf_get, _micropolisengine.Resource_buf_set)
    __swig_setmethods__["size"] = _micropolisengine.Resource_size_set
    __swig_getmethods__["size"] = _micropolisengine.Resource_size_get
    if _newclass:size = _swig_property(_micropolisengine.Resource_size_get, _micropolisengine.Resource_size_set)
    __swig_setmethods__["name"] = _micropolisengine.Resource_name_set
    __swig_getmethods__["name"] = _micropolisengine.Resource_name_get
    if _newclass:name = _swig_property(_micropolisengine.Resource_name_get, _micropolisengine.Resource_name_set)
    __swig_setmethods__["id"] = _micropolisengine.Resource_id_set
    __swig_getmethods__["id"] = _micropolisengine.Resource_id_get
    if _newclass:id = _swig_property(_micropolisengine.Resource_id_get, _micropolisengine.Resource_id_set)
    __swig_setmethods__["next"] = _micropolisengine.Resource_next_set
    __swig_getmethods__["next"] = _micropolisengine.Resource_next_get
    if _newclass:next = _swig_property(_micropolisengine.Resource_next_get, _micropolisengine.Resource_next_set)
    def __init__(self, *args): 
        this = _micropolisengine.new_Resource(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _micropolisengine.delete_Resource
    __del__ = lambda self : None;
Resource_swigregister = _micropolisengine.Resource_swigregister
Resource_swigregister(Resource)
cvar = _micropolisengine.cvar
WORLD_X = cvar.WORLD_X
WORLD_Y = cvar.WORLD_Y
HWLDX = cvar.HWLDX
HWLDY = cvar.HWLDY
QWX = cvar.QWX
QWY = cvar.QWY
SmX = cvar.SmX
SmY = cvar.SmY
HISTORY_COUNT = cvar.HISTORY_COUNT
MAX_TRAFFIC_DISTANCE = cvar.MAX_TRAFFIC_DISTANCE
MAX_ROAD_EFFECT = cvar.MAX_ROAD_EFFECT
MAX_POLICESTATION_EFFECT = cvar.MAX_POLICESTATION_EFFECT
MAX_FIRESTATION_EFFECT = cvar.MAX_FIRESTATION_EFFECT

class StringTable(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringTable, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StringTable, name)
    __repr__ = _swig_repr
    __swig_setmethods__["id"] = _micropolisengine.StringTable_id_set
    __swig_getmethods__["id"] = _micropolisengine.StringTable_id_get
    if _newclass:id = _swig_property(_micropolisengine.StringTable_id_get, _micropolisengine.StringTable_id_set)
    __swig_setmethods__["lines"] = _micropolisengine.StringTable_lines_set
    __swig_getmethods__["lines"] = _micropolisengine.StringTable_lines_get
    if _newclass:lines = _swig_property(_micropolisengine.StringTable_lines_get, _micropolisengine.StringTable_lines_set)
    __swig_setmethods__["strings"] = _micropolisengine.StringTable_strings_set
    __swig_getmethods__["strings"] = _micropolisengine.StringTable_strings_get
    if _newclass:strings = _swig_property(_micropolisengine.StringTable_strings_get, _micropolisengine.StringTable_strings_set)
    __swig_setmethods__["next"] = _micropolisengine.StringTable_next_set
    __swig_getmethods__["next"] = _micropolisengine.StringTable_next_get
    if _newclass:next = _swig_property(_micropolisengine.StringTable_next_get, _micropolisengine.StringTable_next_set)
    def __init__(self, *args): 
        this = _micropolisengine.new_StringTable(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _micropolisengine.delete_StringTable
    __del__ = lambda self : None;
StringTable_swigregister = _micropolisengine.StringTable_swigregister
StringTable_swigregister(StringTable)

class SimSprite(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SimSprite, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SimSprite, name)
    __repr__ = _swig_repr
    __swig_setmethods__["next"] = _micropolisengine.SimSprite_next_set
    __swig_getmethods__["next"] = _micropolisengine.SimSprite_next_get
    if _newclass:next = _swig_property(_micropolisengine.SimSprite_next_get, _micropolisengine.SimSprite_next_set)
    __swig_setmethods__["name"] = _micropolisengine.SimSprite_name_set
    __swig_getmethods__["name"] = _micropolisengine.SimSprite_name_get
    if _newclass:name = _swig_property(_micropolisengine.SimSprite_name_get, _micropolisengine.SimSprite_name_set)
    __swig_setmethods__["type"] = _micropolisengine.SimSprite_type_set
    __swig_getmethods__["type"] = _micropolisengine.SimSprite_type_get
    if _newclass:type = _swig_property(_micropolisengine.SimSprite_type_get, _micropolisengine.SimSprite_type_set)
    __swig_setmethods__["frame"] = _micropolisengine.SimSprite_frame_set
    __swig_getmethods__["frame"] = _micropolisengine.SimSprite_frame_get
    if _newclass:frame = _swig_property(_micropolisengine.SimSprite_frame_get, _micropolisengine.SimSprite_frame_set)
    __swig_setmethods__["x"] = _micropolisengine.SimSprite_x_set
    __swig_getmethods__["x"] = _micropolisengine.SimSprite_x_get
    if _newclass:x = _swig_property(_micropolisengine.SimSprite_x_get, _micropolisengine.SimSprite_x_set)
    __swig_setmethods__["y"] = _micropolisengine.SimSprite_y_set
    __swig_getmethods__["y"] = _micropolisengine.SimSprite_y_get
    if _newclass:y = _swig_property(_micropolisengine.SimSprite_y_get, _micropolisengine.SimSprite_y_set)
    __swig_setmethods__["width"] = _micropolisengine.SimSprite_width_set
    __swig_getmethods__["width"] = _micropolisengine.SimSprite_width_get
    if _newclass:width = _swig_property(_micropolisengine.SimSprite_width_get, _micropolisengine.SimSprite_width_set)
    __swig_setmethods__["height"] = _micropolisengine.SimSprite_height_set
    __swig_getmethods__["height"] = _micropolisengine.SimSprite_height_get
    if _newclass:height = _swig_property(_micropolisengine.SimSprite_height_get, _micropolisengine.SimSprite_height_set)
    __swig_setmethods__["xOffset"] = _micropolisengine.SimSprite_xOffset_set
    __swig_getmethods__["xOffset"] = _micropolisengine.SimSprite_xOffset_get
    if _newclass:xOffset = _swig_property(_micropolisengine.SimSprite_xOffset_get, _micropolisengine.SimSprite_xOffset_set)
    __swig_setmethods__["yOffset"] = _micropolisengine.SimSprite_yOffset_set
    __swig_getmethods__["yOffset"] = _micropolisengine.SimSprite_yOffset_get
    if _newclass:yOffset = _swig_property(_micropolisengine.SimSprite_yOffset_get, _micropolisengine.SimSprite_yOffset_set)
    __swig_setmethods__["xHot"] = _micropolisengine.SimSprite_xHot_set
    __swig_getmethods__["xHot"] = _micropolisengine.SimSprite_xHot_get
    if _newclass:xHot = _swig_property(_micropolisengine.SimSprite_xHot_get, _micropolisengine.SimSprite_xHot_set)
    __swig_setmethods__["yHot"] = _micropolisengine.SimSprite_yHot_set
    __swig_getmethods__["yHot"] = _micropolisengine.SimSprite_yHot_get
    if _newclass:yHot = _swig_property(_micropolisengine.SimSprite_yHot_get, _micropolisengine.SimSprite_yHot_set)
    __swig_setmethods__["origX"] = _micropolisengine.SimSprite_origX_set
    __swig_getmethods__["origX"] = _micropolisengine.SimSprite_origX_get
    if _newclass:origX = _swig_property(_micropolisengine.SimSprite_origX_get, _micropolisengine.SimSprite_origX_set)
    __swig_setmethods__["origY"] = _micropolisengine.SimSprite_origY_set
    __swig_getmethods__["origY"] = _micropolisengine.SimSprite_origY_get
    if _newclass:origY = _swig_property(_micropolisengine.SimSprite_origY_get, _micropolisengine.SimSprite_origY_set)
    __swig_setmethods__["destX"] = _micropolisengine.SimSprite_destX_set
    __swig_getmethods__["destX"] = _micropolisengine.SimSprite_destX_get
    if _newclass:destX = _swig_property(_micropolisengine.SimSprite_destX_get, _micropolisengine.SimSprite_destX_set)
    __swig_setmethods__["destY"] = _micropolisengine.SimSprite_destY_set
    __swig_getmethods__["destY"] = _micropolisengine.SimSprite_destY_get
    if _newclass:destY = _swig_property(_micropolisengine.SimSprite_destY_get, _micropolisengine.SimSprite_destY_set)
    __swig_setmethods__["count"] = _micropolisengine.SimSprite_count_set
    __swig_getmethods__["count"] = _micropolisengine.SimSprite_count_get
    if _newclass:count = _swig_property(_micropolisengine.SimSprite_count_get, _micropolisengine.SimSprite_count_set)
    __swig_setmethods__["soundCount"] = _micropolisengine.SimSprite_soundCount_set
    __swig_getmethods__["soundCount"] = _micropolisengine.SimSprite_soundCount_get
    if _newclass:soundCount = _swig_property(_micropolisengine.SimSprite_soundCount_get, _micropolisengine.SimSprite_soundCount_set)
    __swig_setmethods__["dir"] = _micropolisengine.SimSprite_dir_set
    __swig_getmethods__["dir"] = _micropolisengine.SimSprite_dir_get
    if _newclass:dir = _swig_property(_micropolisengine.SimSprite_dir_get, _micropolisengine.SimSprite_dir_set)
    __swig_setmethods__["newDir"] = _micropolisengine.SimSprite_newDir_set
    __swig_getmethods__["newDir"] = _micropolisengine.SimSprite_newDir_get
    if _newclass:newDir = _swig_property(_micropolisengine.SimSprite_newDir_get, _micropolisengine.SimSprite_newDir_set)
    __swig_setmethods__["step"] = _micropolisengine.SimSprite_step_set
    __swig_getmethods__["step"] = _micropolisengine.SimSprite_step_get
    if _newclass:step = _swig_property(_micropolisengine.SimSprite_step_get, _micropolisengine.SimSprite_step_set)
    __swig_setmethods__["flag"] = _micropolisengine.SimSprite_flag_set
    __swig_getmethods__["flag"] = _micropolisengine.SimSprite_flag_get
    if _newclass:flag = _swig_property(_micropolisengine.SimSprite_flag_get, _micropolisengine.SimSprite_flag_set)
    __swig_setmethods__["control"] = _micropolisengine.SimSprite_control_set
    __swig_getmethods__["control"] = _micropolisengine.SimSprite_control_get
    if _newclass:control = _swig_property(_micropolisengine.SimSprite_control_get, _micropolisengine.SimSprite_control_set)
    __swig_setmethods__["turn"] = _micropolisengine.SimSprite_turn_set
    __swig_getmethods__["turn"] = _micropolisengine.SimSprite_turn_get
    if _newclass:turn = _swig_property(_micropolisengine.SimSprite_turn_get, _micropolisengine.SimSprite_turn_set)
    __swig_setmethods__["accel"] = _micropolisengine.SimSprite_accel_set
    __swig_getmethods__["accel"] = _micropolisengine.SimSprite_accel_get
    if _newclass:accel = _swig_property(_micropolisengine.SimSprite_accel_get, _micropolisengine.SimSprite_accel_set)
    __swig_setmethods__["speed"] = _micropolisengine.SimSprite_speed_set
    __swig_getmethods__["speed"] = _micropolisengine.SimSprite_speed_get
    if _newclass:speed = _swig_property(_micropolisengine.SimSprite_speed_get, _micropolisengine.SimSprite_speed_set)
    def __init__(self, *args): 
        this = _micropolisengine.new_SimSprite(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _micropolisengine.delete_SimSprite
    __del__ = lambda self : None;
SimSprite_swigregister = _micropolisengine.SimSprite_swigregister
SimSprite_swigregister(SimSprite)

class Micropolis(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Micropolis, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Micropolis, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _micropolisengine.new_Micropolis(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _micropolisengine.delete_Micropolis
    __del__ = lambda self : None;
    def init(*args): return _micropolisengine.Micropolis_init(*args)
    def destroy(*args): return _micropolisengine.Micropolis_destroy(*args)
    __swig_setmethods__["curMapX"] = _micropolisengine.Micropolis_curMapX_set
    __swig_getmethods__["curMapX"] = _micropolisengine.Micropolis_curMapX_get
    if _newclass:curMapX = _swig_property(_micropolisengine.Micropolis_curMapX_get, _micropolisengine.Micropolis_curMapX_set)
    __swig_setmethods__["curMapY"] = _micropolisengine.Micropolis_curMapY_set
    __swig_getmethods__["curMapY"] = _micropolisengine.Micropolis_curMapY_get
    if _newclass:curMapY = _swig_property(_micropolisengine.Micropolis_curMapY_get, _micropolisengine.Micropolis_curMapY_set)
    __swig_setmethods__["curNum"] = _micropolisengine.Micropolis_curNum_set
    __swig_getmethods__["curNum"] = _micropolisengine.Micropolis_curNum_get
    if _newclass:curNum = _swig_property(_micropolisengine.Micropolis_curNum_get, _micropolisengine.Micropolis_curNum_set)
    __swig_setmethods__["curTile"] = _micropolisengine.Micropolis_curTile_set
    __swig_getmethods__["curTile"] = _micropolisengine.Micropolis_curTile_get
    if _newclass:curTile = _swig_property(_micropolisengine.Micropolis_curTile_get, _micropolisengine.Micropolis_curTile_set)
    __swig_setmethods__["roadTotal"] = _micropolisengine.Micropolis_roadTotal_set
    __swig_getmethods__["roadTotal"] = _micropolisengine.Micropolis_roadTotal_get
    if _newclass:roadTotal = _swig_property(_micropolisengine.Micropolis_roadTotal_get, _micropolisengine.Micropolis_roadTotal_set)
    __swig_setmethods__["railTotal"] = _micropolisengine.Micropolis_railTotal_set
    __swig_getmethods__["railTotal"] = _micropolisengine.Micropolis_railTotal_get
    if _newclass:railTotal = _swig_property(_micropolisengine.Micropolis_railTotal_get, _micropolisengine.Micropolis_railTotal_set)
    __swig_setmethods__["firePop"] = _micropolisengine.Micropolis_firePop_set
    __swig_getmethods__["firePop"] = _micropolisengine.Micropolis_firePop_get
    if _newclass:firePop = _swig_property(_micropolisengine.Micropolis_firePop_get, _micropolisengine.Micropolis_firePop_set)
    __swig_setmethods__["resPop"] = _micropolisengine.Micropolis_resPop_set
    __swig_getmethods__["resPop"] = _micropolisengine.Micropolis_resPop_get
    if _newclass:resPop = _swig_property(_micropolisengine.Micropolis_resPop_get, _micropolisengine.Micropolis_resPop_set)
    __swig_setmethods__["comPop"] = _micropolisengine.Micropolis_comPop_set
    __swig_getmethods__["comPop"] = _micropolisengine.Micropolis_comPop_get
    if _newclass:comPop = _swig_property(_micropolisengine.Micropolis_comPop_get, _micropolisengine.Micropolis_comPop_set)
    __swig_setmethods__["indPop"] = _micropolisengine.Micropolis_indPop_set
    __swig_getmethods__["indPop"] = _micropolisengine.Micropolis_indPop_get
    if _newclass:indPop = _swig_property(_micropolisengine.Micropolis_indPop_get, _micropolisengine.Micropolis_indPop_set)
    __swig_setmethods__["totalPop"] = _micropolisengine.Micropolis_totalPop_set
    __swig_getmethods__["totalPop"] = _micropolisengine.Micropolis_totalPop_get
    if _newclass:totalPop = _swig_property(_micropolisengine.Micropolis_totalPop_get, _micropolisengine.Micropolis_totalPop_set)
    __swig_setmethods__["totalPopLast"] = _micropolisengine.Micropolis_totalPopLast_set
    __swig_getmethods__["totalPopLast"] = _micropolisengine.Micropolis_totalPopLast_get
    if _newclass:totalPopLast = _swig_property(_micropolisengine.Micropolis_totalPopLast_get, _micropolisengine.Micropolis_totalPopLast_set)
    __swig_setmethods__["resZonePop"] = _micropolisengine.Micropolis_resZonePop_set
    __swig_getmethods__["resZonePop"] = _micropolisengine.Micropolis_resZonePop_get
    if _newclass:resZonePop = _swig_property(_micropolisengine.Micropolis_resZonePop_get, _micropolisengine.Micropolis_resZonePop_set)
    __swig_setmethods__["comZonePop"] = _micropolisengine.Micropolis_comZonePop_set
    __swig_getmethods__["comZonePop"] = _micropolisengine.Micropolis_comZonePop_get
    if _newclass:comZonePop = _swig_property(_micropolisengine.Micropolis_comZonePop_get, _micropolisengine.Micropolis_comZonePop_set)
    __swig_setmethods__["indZonePop"] = _micropolisengine.Micropolis_indZonePop_set
    __swig_getmethods__["indZonePop"] = _micropolisengine.Micropolis_indZonePop_get
    if _newclass:indZonePop = _swig_property(_micropolisengine.Micropolis_indZonePop_get, _micropolisengine.Micropolis_indZonePop_set)
    __swig_setmethods__["totalZonePop"] = _micropolisengine.Micropolis_totalZonePop_set
    __swig_getmethods__["totalZonePop"] = _micropolisengine.Micropolis_totalZonePop_get
    if _newclass:totalZonePop = _swig_property(_micropolisengine.Micropolis_totalZonePop_get, _micropolisengine.Micropolis_totalZonePop_set)
    __swig_setmethods__["hospitalPop"] = _micropolisengine.Micropolis_hospitalPop_set
    __swig_getmethods__["hospitalPop"] = _micropolisengine.Micropolis_hospitalPop_get
    if _newclass:hospitalPop = _swig_property(_micropolisengine.Micropolis_hospitalPop_get, _micropolisengine.Micropolis_hospitalPop_set)
    __swig_setmethods__["churchPop"] = _micropolisengine.Micropolis_churchPop_set
    __swig_getmethods__["churchPop"] = _micropolisengine.Micropolis_churchPop_get
    if _newclass:churchPop = _swig_property(_micropolisengine.Micropolis_churchPop_get, _micropolisengine.Micropolis_churchPop_set)
    __swig_setmethods__["stadiumPop"] = _micropolisengine.Micropolis_stadiumPop_set
    __swig_getmethods__["stadiumPop"] = _micropolisengine.Micropolis_stadiumPop_get
    if _newclass:stadiumPop = _swig_property(_micropolisengine.Micropolis_stadiumPop_get, _micropolisengine.Micropolis_stadiumPop_set)
    __swig_setmethods__["policeStationPop"] = _micropolisengine.Micropolis_policeStationPop_set
    __swig_getmethods__["policeStationPop"] = _micropolisengine.Micropolis_policeStationPop_get
    if _newclass:policeStationPop = _swig_property(_micropolisengine.Micropolis_policeStationPop_get, _micropolisengine.Micropolis_policeStationPop_set)
    __swig_setmethods__["fireStationPop"] = _micropolisengine.Micropolis_fireStationPop_set
    __swig_getmethods__["fireStationPop"] = _micropolisengine.Micropolis_fireStationPop_get
    if _newclass:fireStationPop = _swig_property(_micropolisengine.Micropolis_fireStationPop_get, _micropolisengine.Micropolis_fireStationPop_set)
    __swig_setmethods__["coalPowerPop"] = _micropolisengine.Micropolis_coalPowerPop_set
    __swig_getmethods__["coalPowerPop"] = _micropolisengine.Micropolis_coalPowerPop_get
    if _newclass:coalPowerPop = _swig_property(_micropolisengine.Micropolis_coalPowerPop_get, _micropolisengine.Micropolis_coalPowerPop_set)
    __swig_setmethods__["nuclearPowerPop"] = _micropolisengine.Micropolis_nuclearPowerPop_set
    __swig_getmethods__["nuclearPowerPop"] = _micropolisengine.Micropolis_nuclearPowerPop_get
    if _newclass:nuclearPowerPop = _swig_property(_micropolisengine.Micropolis_nuclearPowerPop_get, _micropolisengine.Micropolis_nuclearPowerPop_set)
    __swig_setmethods__["seaportPop"] = _micropolisengine.Micropolis_seaportPop_set
    __swig_getmethods__["seaportPop"] = _micropolisengine.Micropolis_seaportPop_get
    if _newclass:seaportPop = _swig_property(_micropolisengine.Micropolis_seaportPop_get, _micropolisengine.Micropolis_seaportPop_set)
    __swig_setmethods__["airportPop"] = _micropolisengine.Micropolis_airportPop_set
    __swig_getmethods__["airportPop"] = _micropolisengine.Micropolis_airportPop_get
    if _newclass:airportPop = _swig_property(_micropolisengine.Micropolis_airportPop_get, _micropolisengine.Micropolis_airportPop_set)
    __swig_setmethods__["needHospital"] = _micropolisengine.Micropolis_needHospital_set
    __swig_getmethods__["needHospital"] = _micropolisengine.Micropolis_needHospital_get
    if _newclass:needHospital = _swig_property(_micropolisengine.Micropolis_needHospital_get, _micropolisengine.Micropolis_needHospital_set)
    __swig_setmethods__["needChurch"] = _micropolisengine.Micropolis_needChurch_set
    __swig_getmethods__["needChurch"] = _micropolisengine.Micropolis_needChurch_get
    if _newclass:needChurch = _swig_property(_micropolisengine.Micropolis_needChurch_get, _micropolisengine.Micropolis_needChurch_set)
    __swig_setmethods__["crimeAverage"] = _micropolisengine.Micropolis_crimeAverage_set
    __swig_getmethods__["crimeAverage"] = _micropolisengine.Micropolis_crimeAverage_get
    if _newclass:crimeAverage = _swig_property(_micropolisengine.Micropolis_crimeAverage_get, _micropolisengine.Micropolis_crimeAverage_set)
    __swig_setmethods__["pollutionAverage"] = _micropolisengine.Micropolis_pollutionAverage_set
    __swig_getmethods__["pollutionAverage"] = _micropolisengine.Micropolis_pollutionAverage_get
    if _newclass:pollutionAverage = _swig_property(_micropolisengine.Micropolis_pollutionAverage_get, _micropolisengine.Micropolis_pollutionAverage_set)
    __swig_setmethods__["landValueAverage"] = _micropolisengine.Micropolis_landValueAverage_set
    __swig_getmethods__["landValueAverage"] = _micropolisengine.Micropolis_landValueAverage_get
    if _newclass:landValueAverage = _swig_property(_micropolisengine.Micropolis_landValueAverage_get, _micropolisengine.Micropolis_landValueAverage_set)
    __swig_setmethods__["cityTime"] = _micropolisengine.Micropolis_cityTime_set
    __swig_getmethods__["cityTime"] = _micropolisengine.Micropolis_cityTime_get
    if _newclass:cityTime = _swig_property(_micropolisengine.Micropolis_cityTime_get, _micropolisengine.Micropolis_cityTime_set)
    __swig_setmethods__["cityMonth"] = _micropolisengine.Micropolis_cityMonth_set
    __swig_getmethods__["cityMonth"] = _micropolisengine.Micropolis_cityMonth_get
    if _newclass:cityMonth = _swig_property(_micropolisengine.Micropolis_cityMonth_get, _micropolisengine.Micropolis_cityMonth_set)
    __swig_setmethods__["cityYear"] = _micropolisengine.Micropolis_cityYear_set
    __swig_getmethods__["cityYear"] = _micropolisengine.Micropolis_cityYear_get
    if _newclass:cityYear = _swig_property(_micropolisengine.Micropolis_cityYear_get, _micropolisengine.Micropolis_cityYear_set)
    __swig_setmethods__["startingYear"] = _micropolisengine.Micropolis_startingYear_set
    __swig_getmethods__["startingYear"] = _micropolisengine.Micropolis_startingYear_get
    if _newclass:startingYear = _swig_property(_micropolisengine.Micropolis_startingYear_get, _micropolisengine.Micropolis_startingYear_set)
    __swig_setmethods__["map"] = _micropolisengine.Micropolis_map_set
    __swig_getmethods__["map"] = _micropolisengine.Micropolis_map_get
    if _newclass:map = _swig_property(_micropolisengine.Micropolis_map_get, _micropolisengine.Micropolis_map_set)
    __swig_setmethods__["resHist10Max"] = _micropolisengine.Micropolis_resHist10Max_set
    __swig_getmethods__["resHist10Max"] = _micropolisengine.Micropolis_resHist10Max_get
    if _newclass:resHist10Max = _swig_property(_micropolisengine.Micropolis_resHist10Max_get, _micropolisengine.Micropolis_resHist10Max_set)
    __swig_setmethods__["resHist120Max"] = _micropolisengine.Micropolis_resHist120Max_set
    __swig_getmethods__["resHist120Max"] = _micropolisengine.Micropolis_resHist120Max_get
    if _newclass:resHist120Max = _swig_property(_micropolisengine.Micropolis_resHist120Max_get, _micropolisengine.Micropolis_resHist120Max_set)
    __swig_setmethods__["comHist10Max"] = _micropolisengine.Micropolis_comHist10Max_set
    __swig_getmethods__["comHist10Max"] = _micropolisengine.Micropolis_comHist10Max_get
    if _newclass:comHist10Max = _swig_property(_micropolisengine.Micropolis_comHist10Max_get, _micropolisengine.Micropolis_comHist10Max_set)
    __swig_setmethods__["comHist120Max"] = _micropolisengine.Micropolis_comHist120Max_set
    __swig_getmethods__["comHist120Max"] = _micropolisengine.Micropolis_comHist120Max_get
    if _newclass:comHist120Max = _swig_property(_micropolisengine.Micropolis_comHist120Max_get, _micropolisengine.Micropolis_comHist120Max_set)
    __swig_setmethods__["indHist10Max"] = _micropolisengine.Micropolis_indHist10Max_set
    __swig_getmethods__["indHist10Max"] = _micropolisengine.Micropolis_indHist10Max_get
    if _newclass:indHist10Max = _swig_property(_micropolisengine.Micropolis_indHist10Max_get, _micropolisengine.Micropolis_indHist10Max_set)
    __swig_setmethods__["indHist120Max"] = _micropolisengine.Micropolis_indHist120Max_set
    __swig_getmethods__["indHist120Max"] = _micropolisengine.Micropolis_indHist120Max_get
    if _newclass:indHist120Max = _swig_property(_micropolisengine.Micropolis_indHist120Max_get, _micropolisengine.Micropolis_indHist120Max_set)
    __swig_setmethods__["censusChanged"] = _micropolisengine.Micropolis_censusChanged_set
    __swig_getmethods__["censusChanged"] = _micropolisengine.Micropolis_censusChanged_get
    if _newclass:censusChanged = _swig_property(_micropolisengine.Micropolis_censusChanged_get, _micropolisengine.Micropolis_censusChanged_set)
    __swig_setmethods__["messagePort"] = _micropolisengine.Micropolis_messagePort_set
    __swig_getmethods__["messagePort"] = _micropolisengine.Micropolis_messagePort_get
    if _newclass:messagePort = _swig_property(_micropolisengine.Micropolis_messagePort_get, _micropolisengine.Micropolis_messagePort_set)
    __swig_setmethods__["messageX"] = _micropolisengine.Micropolis_messageX_set
    __swig_getmethods__["messageX"] = _micropolisengine.Micropolis_messageX_get
    if _newclass:messageX = _swig_property(_micropolisengine.Micropolis_messageX_get, _micropolisengine.Micropolis_messageX_set)
    __swig_setmethods__["messageY"] = _micropolisengine.Micropolis_messageY_set
    __swig_getmethods__["messageY"] = _micropolisengine.Micropolis_messageY_get
    if _newclass:messageY = _swig_property(_micropolisengine.Micropolis_messageY_get, _micropolisengine.Micropolis_messageY_set)
    __swig_setmethods__["roadSpend"] = _micropolisengine.Micropolis_roadSpend_set
    __swig_getmethods__["roadSpend"] = _micropolisengine.Micropolis_roadSpend_get
    if _newclass:roadSpend = _swig_property(_micropolisengine.Micropolis_roadSpend_get, _micropolisengine.Micropolis_roadSpend_set)
    __swig_setmethods__["policeSpend"] = _micropolisengine.Micropolis_policeSpend_set
    __swig_getmethods__["policeSpend"] = _micropolisengine.Micropolis_policeSpend_get
    if _newclass:policeSpend = _swig_property(_micropolisengine.Micropolis_policeSpend_get, _micropolisengine.Micropolis_policeSpend_set)
    __swig_setmethods__["fireSpend"] = _micropolisengine.Micropolis_fireSpend_set
    __swig_getmethods__["fireSpend"] = _micropolisengine.Micropolis_fireSpend_get
    if _newclass:fireSpend = _swig_property(_micropolisengine.Micropolis_fireSpend_get, _micropolisengine.Micropolis_fireSpend_set)
    __swig_setmethods__["roadFund"] = _micropolisengine.Micropolis_roadFund_set
    __swig_getmethods__["roadFund"] = _micropolisengine.Micropolis_roadFund_get
    if _newclass:roadFund = _swig_property(_micropolisengine.Micropolis_roadFund_get, _micropolisengine.Micropolis_roadFund_set)
    __swig_setmethods__["policeFund"] = _micropolisengine.Micropolis_policeFund_set
    __swig_getmethods__["policeFund"] = _micropolisengine.Micropolis_policeFund_get
    if _newclass:policeFund = _swig_property(_micropolisengine.Micropolis_policeFund_get, _micropolisengine.Micropolis_policeFund_set)
    __swig_setmethods__["fireFund"] = _micropolisengine.Micropolis_fireFund_set
    __swig_getmethods__["fireFund"] = _micropolisengine.Micropolis_fireFund_get
    if _newclass:fireFund = _swig_property(_micropolisengine.Micropolis_fireFund_get, _micropolisengine.Micropolis_fireFund_set)
    __swig_setmethods__["roadEffect"] = _micropolisengine.Micropolis_roadEffect_set
    __swig_getmethods__["roadEffect"] = _micropolisengine.Micropolis_roadEffect_get
    if _newclass:roadEffect = _swig_property(_micropolisengine.Micropolis_roadEffect_get, _micropolisengine.Micropolis_roadEffect_set)
    __swig_setmethods__["policeEffect"] = _micropolisengine.Micropolis_policeEffect_set
    __swig_getmethods__["policeEffect"] = _micropolisengine.Micropolis_policeEffect_get
    if _newclass:policeEffect = _swig_property(_micropolisengine.Micropolis_policeEffect_get, _micropolisengine.Micropolis_policeEffect_set)
    __swig_setmethods__["fireEffect"] = _micropolisengine.Micropolis_fireEffect_set
    __swig_getmethods__["fireEffect"] = _micropolisengine.Micropolis_fireEffect_get
    if _newclass:fireEffect = _swig_property(_micropolisengine.Micropolis_fireEffect_get, _micropolisengine.Micropolis_fireEffect_set)
    __swig_setmethods__["taxFund"] = _micropolisengine.Micropolis_taxFund_set
    __swig_getmethods__["taxFund"] = _micropolisengine.Micropolis_taxFund_get
    if _newclass:taxFund = _swig_property(_micropolisengine.Micropolis_taxFund_get, _micropolisengine.Micropolis_taxFund_set)
    __swig_setmethods__["cityTax"] = _micropolisengine.Micropolis_cityTax_set
    __swig_getmethods__["cityTax"] = _micropolisengine.Micropolis_cityTax_get
    if _newclass:cityTax = _swig_property(_micropolisengine.Micropolis_cityTax_get, _micropolisengine.Micropolis_cityTax_set)
    __swig_setmethods__["taxFlag"] = _micropolisengine.Micropolis_taxFlag_set
    __swig_getmethods__["taxFlag"] = _micropolisengine.Micropolis_taxFlag_get
    if _newclass:taxFlag = _swig_property(_micropolisengine.Micropolis_taxFlag_get, _micropolisengine.Micropolis_taxFlag_set)
    __swig_setmethods__["populationDensityMap"] = _micropolisengine.Micropolis_populationDensityMap_set
    __swig_getmethods__["populationDensityMap"] = _micropolisengine.Micropolis_populationDensityMap_get
    if _newclass:populationDensityMap = _swig_property(_micropolisengine.Micropolis_populationDensityMap_get, _micropolisengine.Micropolis_populationDensityMap_set)
    __swig_setmethods__["trafficDensityMap"] = _micropolisengine.Micropolis_trafficDensityMap_set
    __swig_getmethods__["trafficDensityMap"] = _micropolisengine.Micropolis_trafficDensityMap_get
    if _newclass:trafficDensityMap = _swig_property(_micropolisengine.Micropolis_trafficDensityMap_get, _micropolisengine.Micropolis_trafficDensityMap_set)
    __swig_setmethods__["pollutionMap"] = _micropolisengine.Micropolis_pollutionMap_set
    __swig_getmethods__["pollutionMap"] = _micropolisengine.Micropolis_pollutionMap_get
    if _newclass:pollutionMap = _swig_property(_micropolisengine.Micropolis_pollutionMap_get, _micropolisengine.Micropolis_pollutionMap_set)
    __swig_setmethods__["landValueMap"] = _micropolisengine.Micropolis_landValueMap_set
    __swig_getmethods__["landValueMap"] = _micropolisengine.Micropolis_landValueMap_get
    if _newclass:landValueMap = _swig_property(_micropolisengine.Micropolis_landValueMap_get, _micropolisengine.Micropolis_landValueMap_set)
    __swig_setmethods__["crimeMap"] = _micropolisengine.Micropolis_crimeMap_set
    __swig_getmethods__["crimeMap"] = _micropolisengine.Micropolis_crimeMap_get
    if _newclass:crimeMap = _swig_property(_micropolisengine.Micropolis_crimeMap_get, _micropolisengine.Micropolis_crimeMap_set)
    __swig_setmethods__["tempMap1"] = _micropolisengine.Micropolis_tempMap1_set
    __swig_getmethods__["tempMap1"] = _micropolisengine.Micropolis_tempMap1_get
    if _newclass:tempMap1 = _swig_property(_micropolisengine.Micropolis_tempMap1_get, _micropolisengine.Micropolis_tempMap1_set)
    __swig_setmethods__["tempMap2"] = _micropolisengine.Micropolis_tempMap2_set
    __swig_getmethods__["tempMap2"] = _micropolisengine.Micropolis_tempMap2_get
    if _newclass:tempMap2 = _swig_property(_micropolisengine.Micropolis_tempMap2_get, _micropolisengine.Micropolis_tempMap2_set)
    __swig_setmethods__["tempMap3"] = _micropolisengine.Micropolis_tempMap3_set
    __swig_getmethods__["tempMap3"] = _micropolisengine.Micropolis_tempMap3_get
    if _newclass:tempMap3 = _swig_property(_micropolisengine.Micropolis_tempMap3_get, _micropolisengine.Micropolis_tempMap3_set)
    __swig_setmethods__["tempMap4"] = _micropolisengine.Micropolis_tempMap4_set
    __swig_getmethods__["tempMap4"] = _micropolisengine.Micropolis_tempMap4_get
    if _newclass:tempMap4 = _swig_property(_micropolisengine.Micropolis_tempMap4_get, _micropolisengine.Micropolis_tempMap4_set)
    __swig_setmethods__["terrainDensityMap"] = _micropolisengine.Micropolis_terrainDensityMap_set
    __swig_getmethods__["terrainDensityMap"] = _micropolisengine.Micropolis_terrainDensityMap_get
    if _newclass:terrainDensityMap = _swig_property(_micropolisengine.Micropolis_terrainDensityMap_get, _micropolisengine.Micropolis_terrainDensityMap_set)
    __swig_setmethods__["rateOfGrowthMap"] = _micropolisengine.Micropolis_rateOfGrowthMap_set
    __swig_getmethods__["rateOfGrowthMap"] = _micropolisengine.Micropolis_rateOfGrowthMap_get
    if _newclass:rateOfGrowthMap = _swig_property(_micropolisengine.Micropolis_rateOfGrowthMap_get, _micropolisengine.Micropolis_rateOfGrowthMap_set)
    __swig_setmethods__["fireStationMap"] = _micropolisengine.Micropolis_fireStationMap_set
    __swig_getmethods__["fireStationMap"] = _micropolisengine.Micropolis_fireStationMap_get
    if _newclass:fireStationMap = _swig_property(_micropolisengine.Micropolis_fireStationMap_get, _micropolisengine.Micropolis_fireStationMap_set)
    __swig_setmethods__["policeStationMap"] = _micropolisengine.Micropolis_policeStationMap_set
    __swig_getmethods__["policeStationMap"] = _micropolisengine.Micropolis_policeStationMap_get
    if _newclass:policeStationMap = _swig_property(_micropolisengine.Micropolis_policeStationMap_get, _micropolisengine.Micropolis_policeStationMap_set)
    __swig_setmethods__["policeStationMapEffect"] = _micropolisengine.Micropolis_policeStationMapEffect_set
    __swig_getmethods__["policeStationMapEffect"] = _micropolisengine.Micropolis_policeStationMapEffect_get
    if _newclass:policeStationMapEffect = _swig_property(_micropolisengine.Micropolis_policeStationMapEffect_get, _micropolisengine.Micropolis_policeStationMapEffect_set)
    __swig_setmethods__["fireStationMapEffect"] = _micropolisengine.Micropolis_fireStationMapEffect_set
    __swig_getmethods__["fireStationMapEffect"] = _micropolisengine.Micropolis_fireStationMapEffect_get
    if _newclass:fireStationMapEffect = _swig_property(_micropolisengine.Micropolis_fireStationMapEffect_get, _micropolisengine.Micropolis_fireStationMapEffect_set)
    __swig_setmethods__["comRateMap"] = _micropolisengine.Micropolis_comRateMap_set
    __swig_getmethods__["comRateMap"] = _micropolisengine.Micropolis_comRateMap_get
    if _newclass:comRateMap = _swig_property(_micropolisengine.Micropolis_comRateMap_get, _micropolisengine.Micropolis_comRateMap_set)
    __swig_setmethods__["terrainDensityMapBase"] = _micropolisengine.Micropolis_terrainDensityMapBase_set
    __swig_getmethods__["terrainDensityMapBase"] = _micropolisengine.Micropolis_terrainDensityMapBase_get
    if _newclass:terrainDensityMapBase = _swig_property(_micropolisengine.Micropolis_terrainDensityMapBase_get, _micropolisengine.Micropolis_terrainDensityMapBase_set)
    __swig_setmethods__["tempMap1Base"] = _micropolisengine.Micropolis_tempMap1Base_set
    __swig_getmethods__["tempMap1Base"] = _micropolisengine.Micropolis_tempMap1Base_get
    if _newclass:tempMap1Base = _swig_property(_micropolisengine.Micropolis_tempMap1Base_get, _micropolisengine.Micropolis_tempMap1Base_set)
    __swig_setmethods__["tempMap2Base"] = _micropolisengine.Micropolis_tempMap2Base_set
    __swig_getmethods__["tempMap2Base"] = _micropolisengine.Micropolis_tempMap2Base_get
    if _newclass:tempMap2Base = _swig_property(_micropolisengine.Micropolis_tempMap2Base_get, _micropolisengine.Micropolis_tempMap2Base_set)
    __swig_setmethods__["tempMap3Base"] = _micropolisengine.Micropolis_tempMap3Base_set
    __swig_getmethods__["tempMap3Base"] = _micropolisengine.Micropolis_tempMap3Base_get
    if _newclass:tempMap3Base = _swig_property(_micropolisengine.Micropolis_tempMap3Base_get, _micropolisengine.Micropolis_tempMap3Base_set)
    __swig_setmethods__["populationDensityMapBase"] = _micropolisengine.Micropolis_populationDensityMapBase_set
    __swig_getmethods__["populationDensityMapBase"] = _micropolisengine.Micropolis_populationDensityMapBase_get
    if _newclass:populationDensityMapBase = _swig_property(_micropolisengine.Micropolis_populationDensityMapBase_get, _micropolisengine.Micropolis_populationDensityMapBase_set)
    __swig_setmethods__["trafficDensityMapBase"] = _micropolisengine.Micropolis_trafficDensityMapBase_set
    __swig_getmethods__["trafficDensityMapBase"] = _micropolisengine.Micropolis_trafficDensityMapBase_get
    if _newclass:trafficDensityMapBase = _swig_property(_micropolisengine.Micropolis_trafficDensityMapBase_get, _micropolisengine.Micropolis_trafficDensityMapBase_set)
    __swig_setmethods__["pollutionMapBase"] = _micropolisengine.Micropolis_pollutionMapBase_set
    __swig_getmethods__["pollutionMapBase"] = _micropolisengine.Micropolis_pollutionMapBase_get
    if _newclass:pollutionMapBase = _swig_property(_micropolisengine.Micropolis_pollutionMapBase_get, _micropolisengine.Micropolis_pollutionMapBase_set)
    __swig_setmethods__["landValueMapBase"] = _micropolisengine.Micropolis_landValueMapBase_set
    __swig_getmethods__["landValueMapBase"] = _micropolisengine.Micropolis_landValueMapBase_get
    if _newclass:landValueMapBase = _swig_property(_micropolisengine.Micropolis_landValueMapBase_get, _micropolisengine.Micropolis_landValueMapBase_set)
    __swig_setmethods__["crimeMapBase"] = _micropolisengine.Micropolis_crimeMapBase_set
    __swig_getmethods__["crimeMapBase"] = _micropolisengine.Micropolis_crimeMapBase_get
    if _newclass:crimeMapBase = _swig_property(_micropolisengine.Micropolis_crimeMapBase_get, _micropolisengine.Micropolis_crimeMapBase_set)
    __swig_setmethods__["mapBase"] = _micropolisengine.Micropolis_mapBase_set
    __swig_getmethods__["mapBase"] = _micropolisengine.Micropolis_mapBase_get
    if _newclass:mapBase = _swig_property(_micropolisengine.Micropolis_mapBase_get, _micropolisengine.Micropolis_mapBase_set)
    __swig_setmethods__["resHist"] = _micropolisengine.Micropolis_resHist_set
    __swig_getmethods__["resHist"] = _micropolisengine.Micropolis_resHist_get
    if _newclass:resHist = _swig_property(_micropolisengine.Micropolis_resHist_get, _micropolisengine.Micropolis_resHist_set)
    __swig_setmethods__["comHist"] = _micropolisengine.Micropolis_comHist_set
    __swig_getmethods__["comHist"] = _micropolisengine.Micropolis_comHist_get
    if _newclass:comHist = _swig_property(_micropolisengine.Micropolis_comHist_get, _micropolisengine.Micropolis_comHist_set)
    __swig_setmethods__["indHist"] = _micropolisengine.Micropolis_indHist_set
    __swig_getmethods__["indHist"] = _micropolisengine.Micropolis_indHist_get
    if _newclass:indHist = _swig_property(_micropolisengine.Micropolis_indHist_get, _micropolisengine.Micropolis_indHist_set)
    __swig_setmethods__["moneyHist"] = _micropolisengine.Micropolis_moneyHist_set
    __swig_getmethods__["moneyHist"] = _micropolisengine.Micropolis_moneyHist_get
    if _newclass:moneyHist = _swig_property(_micropolisengine.Micropolis_moneyHist_get, _micropolisengine.Micropolis_moneyHist_set)
    __swig_setmethods__["pollutionHist"] = _micropolisengine.Micropolis_pollutionHist_set
    __swig_getmethods__["pollutionHist"] = _micropolisengine.Micropolis_pollutionHist_get
    if _newclass:pollutionHist = _swig_property(_micropolisengine.Micropolis_pollutionHist_get, _micropolisengine.Micropolis_pollutionHist_set)
    __swig_setmethods__["crimeHist"] = _micropolisengine.Micropolis_crimeHist_set
    __swig_getmethods__["crimeHist"] = _micropolisengine.Micropolis_crimeHist_get
    if _newclass:crimeHist = _swig_property(_micropolisengine.Micropolis_crimeHist_get, _micropolisengine.Micropolis_crimeHist_set)
    __swig_setmethods__["miscHist"] = _micropolisengine.Micropolis_miscHist_set
    __swig_getmethods__["miscHist"] = _micropolisengine.Micropolis_miscHist_get
    if _newclass:miscHist = _swig_property(_micropolisengine.Micropolis_miscHist_get, _micropolisengine.Micropolis_miscHist_set)
    __swig_setmethods__["powerMap"] = _micropolisengine.Micropolis_powerMap_set
    __swig_getmethods__["powerMap"] = _micropolisengine.Micropolis_powerMap_get
    if _newclass:powerMap = _swig_property(_micropolisengine.Micropolis_powerMap_get, _micropolisengine.Micropolis_powerMap_set)
    def initMapArrays(*args): return _micropolisengine.Micropolis_initMapArrays(*args)
    def destroyMapArrays(*args): return _micropolisengine.Micropolis_destroyMapArrays(*args)
    def getHistoryRange(*args): return _micropolisengine.Micropolis_getHistoryRange(*args)
    def getHistory(*args): return _micropolisengine.Micropolis_getHistory(*args)
    def animateTiles(*args): return _micropolisengine.Micropolis_animateTiles(*args)
    __swig_setmethods__["roadPercent"] = _micropolisengine.Micropolis_roadPercent_set
    __swig_getmethods__["roadPercent"] = _micropolisengine.Micropolis_roadPercent_get
    if _newclass:roadPercent = _swig_property(_micropolisengine.Micropolis_roadPercent_get, _micropolisengine.Micropolis_roadPercent_set)
    __swig_setmethods__["policePercent"] = _micropolisengine.Micropolis_policePercent_set
    __swig_getmethods__["policePercent"] = _micropolisengine.Micropolis_policePercent_get
    if _newclass:policePercent = _swig_property(_micropolisengine.Micropolis_policePercent_get, _micropolisengine.Micropolis_policePercent_set)
    __swig_setmethods__["firePercent"] = _micropolisengine.Micropolis_firePercent_set
    __swig_getmethods__["firePercent"] = _micropolisengine.Micropolis_firePercent_get
    if _newclass:firePercent = _swig_property(_micropolisengine.Micropolis_firePercent_get, _micropolisengine.Micropolis_firePercent_set)
    __swig_setmethods__["roadValue"] = _micropolisengine.Micropolis_roadValue_set
    __swig_getmethods__["roadValue"] = _micropolisengine.Micropolis_roadValue_get
    if _newclass:roadValue = _swig_property(_micropolisengine.Micropolis_roadValue_get, _micropolisengine.Micropolis_roadValue_set)
    __swig_setmethods__["policeValue"] = _micropolisengine.Micropolis_policeValue_set
    __swig_getmethods__["policeValue"] = _micropolisengine.Micropolis_policeValue_get
    if _newclass:policeValue = _swig_property(_micropolisengine.Micropolis_policeValue_get, _micropolisengine.Micropolis_policeValue_set)
    __swig_setmethods__["fireValue"] = _micropolisengine.Micropolis_fireValue_set
    __swig_getmethods__["fireValue"] = _micropolisengine.Micropolis_fireValue_get
    if _newclass:fireValue = _swig_property(_micropolisengine.Micropolis_fireValue_get, _micropolisengine.Micropolis_fireValue_set)
    __swig_setmethods__["mustDrawCurrPercents"] = _micropolisengine.Micropolis_mustDrawCurrPercents_set
    __swig_getmethods__["mustDrawCurrPercents"] = _micropolisengine.Micropolis_mustDrawCurrPercents_get
    if _newclass:mustDrawCurrPercents = _swig_property(_micropolisengine.Micropolis_mustDrawCurrPercents_get, _micropolisengine.Micropolis_mustDrawCurrPercents_set)
    __swig_setmethods__["mustDrawBudgetWindow"] = _micropolisengine.Micropolis_mustDrawBudgetWindow_set
    __swig_getmethods__["mustDrawBudgetWindow"] = _micropolisengine.Micropolis_mustDrawBudgetWindow_get
    if _newclass:mustDrawBudgetWindow = _swig_property(_micropolisengine.Micropolis_mustDrawBudgetWindow_get, _micropolisengine.Micropolis_mustDrawBudgetWindow_set)
    def initFundingLevel(*args): return _micropolisengine.Micropolis_initFundingLevel(*args)
    def doBudget(*args): return _micropolisengine.Micropolis_doBudget(*args)
    def doBudgetFromMenu(*args): return _micropolisengine.Micropolis_doBudgetFromMenu(*args)
    def doBudgetNow(*args): return _micropolisengine.Micropolis_doBudgetNow(*args)
    def drawBudgetWindow(*args): return _micropolisengine.Micropolis_drawBudgetWindow(*args)
    def reallyDrawBudgetWindow(*args): return _micropolisengine.Micropolis_reallyDrawBudgetWindow(*args)
    def drawCurrPercents(*args): return _micropolisengine.Micropolis_drawCurrPercents(*args)
    def reallyDrawCurrPercents(*args): return _micropolisengine.Micropolis_reallyDrawCurrPercents(*args)
    def updateBudgetWindow(*args): return _micropolisengine.Micropolis_updateBudgetWindow(*args)
    def updateBudget(*args): return _micropolisengine.Micropolis_updateBudget(*args)
    def showBudgetWindowAndStartWaiting(*args): return _micropolisengine.Micropolis_showBudgetWindowAndStartWaiting(*args)
    def setBudget(*args): return _micropolisengine.Micropolis_setBudget(*args)
    def setBudgetValues(*args): return _micropolisengine.Micropolis_setBudgetValues(*args)
    def connectTile(*args): return _micropolisengine.Micropolis_connectTile(*args)
    def layDoze(*args): return _micropolisengine.Micropolis_layDoze(*args)
    def layRoad(*args): return _micropolisengine.Micropolis_layRoad(*args)
    def layRail(*args): return _micropolisengine.Micropolis_layRail(*args)
    def layWire(*args): return _micropolisengine.Micropolis_layWire(*args)
    def fixZone(*args): return _micropolisengine.Micropolis_fixZone(*args)
    def fixSingle(*args): return _micropolisengine.Micropolis_fixSingle(*args)
    __swig_setmethods__["floodCount"] = _micropolisengine.Micropolis_floodCount_set
    __swig_getmethods__["floodCount"] = _micropolisengine.Micropolis_floodCount_get
    if _newclass:floodCount = _swig_property(_micropolisengine.Micropolis_floodCount_get, _micropolisengine.Micropolis_floodCount_set)
    def makeMeltdown(*args): return _micropolisengine.Micropolis_makeMeltdown(*args)
    def fireBomb(*args): return _micropolisengine.Micropolis_fireBomb(*args)
    def makeEarthquake(*args): return _micropolisengine.Micropolis_makeEarthquake(*args)
    def makeFire(*args): return _micropolisengine.Micropolis_makeFire(*args)
    def makeFlood(*args): return _micropolisengine.Micropolis_makeFlood(*args)
    __swig_setmethods__["cityYes"] = _micropolisengine.Micropolis_cityYes_set
    __swig_getmethods__["cityYes"] = _micropolisengine.Micropolis_cityYes_get
    if _newclass:cityYes = _swig_property(_micropolisengine.Micropolis_cityYes_get, _micropolisengine.Micropolis_cityYes_set)
    __swig_setmethods__["problemTable"] = _micropolisengine.Micropolis_problemTable_set
    __swig_getmethods__["problemTable"] = _micropolisengine.Micropolis_problemTable_get
    if _newclass:problemTable = _swig_property(_micropolisengine.Micropolis_problemTable_get, _micropolisengine.Micropolis_problemTable_set)
    __swig_setmethods__["problemVotes"] = _micropolisengine.Micropolis_problemVotes_set
    __swig_getmethods__["problemVotes"] = _micropolisengine.Micropolis_problemVotes_get
    if _newclass:problemVotes = _swig_property(_micropolisengine.Micropolis_problemVotes_get, _micropolisengine.Micropolis_problemVotes_set)
    __swig_setmethods__["problemOrder"] = _micropolisengine.Micropolis_problemOrder_set
    __swig_getmethods__["problemOrder"] = _micropolisengine.Micropolis_problemOrder_get
    if _newclass:problemOrder = _swig_property(_micropolisengine.Micropolis_problemOrder_get, _micropolisengine.Micropolis_problemOrder_set)
    __swig_setmethods__["cityPop"] = _micropolisengine.Micropolis_cityPop_set
    __swig_getmethods__["cityPop"] = _micropolisengine.Micropolis_cityPop_get
    if _newclass:cityPop = _swig_property(_micropolisengine.Micropolis_cityPop_get, _micropolisengine.Micropolis_cityPop_set)
    __swig_setmethods__["deltaCityPop"] = _micropolisengine.Micropolis_deltaCityPop_set
    __swig_getmethods__["deltaCityPop"] = _micropolisengine.Micropolis_deltaCityPop_get
    if _newclass:deltaCityPop = _swig_property(_micropolisengine.Micropolis_deltaCityPop_get, _micropolisengine.Micropolis_deltaCityPop_set)
    __swig_setmethods__["cityAssessedValue"] = _micropolisengine.Micropolis_cityAssessedValue_set
    __swig_getmethods__["cityAssessedValue"] = _micropolisengine.Micropolis_cityAssessedValue_get
    if _newclass:cityAssessedValue = _swig_property(_micropolisengine.Micropolis_cityAssessedValue_get, _micropolisengine.Micropolis_cityAssessedValue_set)
    __swig_setmethods__["cityClass"] = _micropolisengine.Micropolis_cityClass_set
    __swig_getmethods__["cityClass"] = _micropolisengine.Micropolis_cityClass_get
    if _newclass:cityClass = _swig_property(_micropolisengine.Micropolis_cityClass_get, _micropolisengine.Micropolis_cityClass_set)
    __swig_setmethods__["cityScore"] = _micropolisengine.Micropolis_cityScore_set
    __swig_getmethods__["cityScore"] = _micropolisengine.Micropolis_cityScore_get
    if _newclass:cityScore = _swig_property(_micropolisengine.Micropolis_cityScore_get, _micropolisengine.Micropolis_cityScore_set)
    __swig_setmethods__["cityScoreDelta"] = _micropolisengine.Micropolis_cityScoreDelta_set
    __swig_getmethods__["cityScoreDelta"] = _micropolisengine.Micropolis_cityScoreDelta_get
    if _newclass:cityScoreDelta = _swig_property(_micropolisengine.Micropolis_cityScoreDelta_get, _micropolisengine.Micropolis_cityScoreDelta_set)
    __swig_setmethods__["trafficAverage"] = _micropolisengine.Micropolis_trafficAverage_set
    __swig_getmethods__["trafficAverage"] = _micropolisengine.Micropolis_trafficAverage_get
    if _newclass:trafficAverage = _swig_property(_micropolisengine.Micropolis_trafficAverage_get, _micropolisengine.Micropolis_trafficAverage_set)
    def cityEvaluation(*args): return _micropolisengine.Micropolis_cityEvaluation(*args)
    def evalInit(*args): return _micropolisengine.Micropolis_evalInit(*args)
    def doPopNum(*args): return _micropolisengine.Micropolis_doPopNum(*args)
    def doProblems(*args): return _micropolisengine.Micropolis_doProblems(*args)
    def getAssessedValue(*args): return _micropolisengine.Micropolis_getAssessedValue(*args)
    def voteProblems(*args): return _micropolisengine.Micropolis_voteProblems(*args)
    def getTrafficAverage(*args): return _micropolisengine.Micropolis_getTrafficAverage(*args)
    def getUnemployment(*args): return _micropolisengine.Micropolis_getUnemployment(*args)
    def getFireSeverity(*args): return _micropolisengine.Micropolis_getFireSeverity(*args)
    def getScore(*args): return _micropolisengine.Micropolis_getScore(*args)
    def doVotes(*args): return _micropolisengine.Micropolis_doVotes(*args)
    def doScoreCard(*args): return _micropolisengine.Micropolis_doScoreCard(*args)
    def changeEval(*args): return _micropolisengine.Micropolis_changeEval(*args)
    def scoreDoer(*args): return _micropolisengine.Micropolis_scoreDoer(*args)
    def countProblems(*args): return _micropolisengine.Micropolis_countProblems(*args)
    def getProblemNumber(*args): return _micropolisengine.Micropolis_getProblemNumber(*args)
    def getProblemVotes(*args): return _micropolisengine.Micropolis_getProblemVotes(*args)
    def loadFileDir(*args): return _micropolisengine.Micropolis_loadFileDir(*args)
    def loadFile(*args): return _micropolisengine.Micropolis_loadFile(*args)
    def saveFile(*args): return _micropolisengine.Micropolis_saveFile(*args)
    def loadScenario(*args): return _micropolisengine.Micropolis_loadScenario(*args)
    def didLoadScenario(*args): return _micropolisengine.Micropolis_didLoadScenario(*args)
    def loadCity(*args): return _micropolisengine.Micropolis_loadCity(*args)
    def didLoadCity(*args): return _micropolisengine.Micropolis_didLoadCity(*args)
    def didntLoadCity(*args): return _micropolisengine.Micropolis_didntLoadCity(*args)
    def saveCity(*args): return _micropolisengine.Micropolis_saveCity(*args)
    def doSaveCityAs(*args): return _micropolisengine.Micropolis_doSaveCityAs(*args)
    def didSaveCity(*args): return _micropolisengine.Micropolis_didSaveCity(*args)
    def didntSaveCity(*args): return _micropolisengine.Micropolis_didntSaveCity(*args)
    def saveCityAs(*args): return _micropolisengine.Micropolis_saveCityAs(*args)
    __swig_setmethods__["terrainXStart"] = _micropolisengine.Micropolis_terrainXStart_set
    __swig_getmethods__["terrainXStart"] = _micropolisengine.Micropolis_terrainXStart_get
    if _newclass:terrainXStart = _swig_property(_micropolisengine.Micropolis_terrainXStart_get, _micropolisengine.Micropolis_terrainXStart_set)
    __swig_setmethods__["terrainYStart"] = _micropolisengine.Micropolis_terrainYStart_set
    __swig_getmethods__["terrainYStart"] = _micropolisengine.Micropolis_terrainYStart_get
    if _newclass:terrainYStart = _swig_property(_micropolisengine.Micropolis_terrainYStart_get, _micropolisengine.Micropolis_terrainYStart_set)
    __swig_setmethods__["terrainMapX"] = _micropolisengine.Micropolis_terrainMapX_set
    __swig_getmethods__["terrainMapX"] = _micropolisengine.Micropolis_terrainMapX_get
    if _newclass:terrainMapX = _swig_property(_micropolisengine.Micropolis_terrainMapX_get, _micropolisengine.Micropolis_terrainMapX_set)
    __swig_setmethods__["terrainMapY"] = _micropolisengine.Micropolis_terrainMapY_set
    __swig_getmethods__["terrainMapY"] = _micropolisengine.Micropolis_terrainMapY_get
    if _newclass:terrainMapY = _swig_property(_micropolisengine.Micropolis_terrainMapY_get, _micropolisengine.Micropolis_terrainMapY_set)
    __swig_setmethods__["terrainDir"] = _micropolisengine.Micropolis_terrainDir_set
    __swig_getmethods__["terrainDir"] = _micropolisengine.Micropolis_terrainDir_get
    if _newclass:terrainDir = _swig_property(_micropolisengine.Micropolis_terrainDir_get, _micropolisengine.Micropolis_terrainDir_set)
    __swig_setmethods__["terrainDirLast"] = _micropolisengine.Micropolis_terrainDirLast_set
    __swig_getmethods__["terrainDirLast"] = _micropolisengine.Micropolis_terrainDirLast_get
    if _newclass:terrainDirLast = _swig_property(_micropolisengine.Micropolis_terrainDirLast_get, _micropolisengine.Micropolis_terrainDirLast_set)
    __swig_setmethods__["terrainTreeLevel"] = _micropolisengine.Micropolis_terrainTreeLevel_set
    __swig_getmethods__["terrainTreeLevel"] = _micropolisengine.Micropolis_terrainTreeLevel_get
    if _newclass:terrainTreeLevel = _swig_property(_micropolisengine.Micropolis_terrainTreeLevel_get, _micropolisengine.Micropolis_terrainTreeLevel_set)
    __swig_setmethods__["terrainLakeLevel"] = _micropolisengine.Micropolis_terrainLakeLevel_set
    __swig_getmethods__["terrainLakeLevel"] = _micropolisengine.Micropolis_terrainLakeLevel_get
    if _newclass:terrainLakeLevel = _swig_property(_micropolisengine.Micropolis_terrainLakeLevel_get, _micropolisengine.Micropolis_terrainLakeLevel_set)
    __swig_setmethods__["terrainCurveLevel"] = _micropolisengine.Micropolis_terrainCurveLevel_set
    __swig_getmethods__["terrainCurveLevel"] = _micropolisengine.Micropolis_terrainCurveLevel_get
    if _newclass:terrainCurveLevel = _swig_property(_micropolisengine.Micropolis_terrainCurveLevel_get, _micropolisengine.Micropolis_terrainCurveLevel_set)
    __swig_setmethods__["terrainCreateIsland"] = _micropolisengine.Micropolis_terrainCreateIsland_set
    __swig_getmethods__["terrainCreateIsland"] = _micropolisengine.Micropolis_terrainCreateIsland_get
    if _newclass:terrainCreateIsland = _swig_property(_micropolisengine.Micropolis_terrainCreateIsland_get, _micropolisengine.Micropolis_terrainCreateIsland_set)
    __swig_setmethods__["terrainIslandRadius"] = _micropolisengine.Micropolis_terrainIslandRadius_set
    __swig_getmethods__["terrainIslandRadius"] = _micropolisengine.Micropolis_terrainIslandRadius_get
    if _newclass:terrainIslandRadius = _swig_property(_micropolisengine.Micropolis_terrainIslandRadius_get, _micropolisengine.Micropolis_terrainIslandRadius_set)
    def generateNewCity(*args): return _micropolisengine.Micropolis_generateNewCity(*args)
    def generateSomeCity(*args): return _micropolisengine.Micropolis_generateSomeCity(*args)
    def generateMap(*args): return _micropolisengine.Micropolis_generateMap(*args)
    def clearMap(*args): return _micropolisengine.Micropolis_clearMap(*args)
    def clearUnnatural(*args): return _micropolisengine.Micropolis_clearUnnatural(*args)
    def makeNakedIsland(*args): return _micropolisengine.Micropolis_makeNakedIsland(*args)
    def makeIsland(*args): return _micropolisengine.Micropolis_makeIsland(*args)
    def makeLakes(*args): return _micropolisengine.Micropolis_makeLakes(*args)
    def getRandStart(*args): return _micropolisengine.Micropolis_getRandStart(*args)
    def moveMap(*args): return _micropolisengine.Micropolis_moveMap(*args)
    def treeSplash(*args): return _micropolisengine.Micropolis_treeSplash(*args)
    def doTrees(*args): return _micropolisengine.Micropolis_doTrees(*args)
    def smoothRiver(*args): return _micropolisengine.Micropolis_smoothRiver(*args)
    def isTree(*args): return _micropolisengine.Micropolis_isTree(*args)
    def smoothTrees(*args): return _micropolisengine.Micropolis_smoothTrees(*args)
    def doRivers(*args): return _micropolisengine.Micropolis_doRivers(*args)
    def doBRiver(*args): return _micropolisengine.Micropolis_doBRiver(*args)
    def doSRiver(*args): return _micropolisengine.Micropolis_doSRiver(*args)
    def putOnMap(*args): return _micropolisengine.Micropolis_putOnMap(*args)
    def plopBRiver(*args): return _micropolisengine.Micropolis_plopBRiver(*args)
    def plopSRiver(*args): return _micropolisengine.Micropolis_plopSRiver(*args)
    def smoothWater(*args): return _micropolisengine.Micropolis_smoothWater(*args)
    __swig_setmethods__["newGraph"] = _micropolisengine.Micropolis_newGraph_set
    __swig_getmethods__["newGraph"] = _micropolisengine.Micropolis_newGraph_get
    if _newclass:newGraph = _swig_property(_micropolisengine.Micropolis_newGraph_get, _micropolisengine.Micropolis_newGraph_set)
    __swig_setmethods__["history10"] = _micropolisengine.Micropolis_history10_set
    __swig_getmethods__["history10"] = _micropolisengine.Micropolis_history10_get
    if _newclass:history10 = _swig_property(_micropolisengine.Micropolis_history10_get, _micropolisengine.Micropolis_history10_set)
    __swig_setmethods__["history120"] = _micropolisengine.Micropolis_history120_set
    __swig_getmethods__["history120"] = _micropolisengine.Micropolis_history120_get
    if _newclass:history120 = _swig_property(_micropolisengine.Micropolis_history120_get, _micropolisengine.Micropolis_history120_set)
    __swig_setmethods__["historyInitialized"] = _micropolisengine.Micropolis_historyInitialized_set
    __swig_getmethods__["historyInitialized"] = _micropolisengine.Micropolis_historyInitialized_get
    if _newclass:historyInitialized = _swig_property(_micropolisengine.Micropolis_historyInitialized_get, _micropolisengine.Micropolis_historyInitialized_set)
    __swig_setmethods__["graph10Max"] = _micropolisengine.Micropolis_graph10Max_set
    __swig_getmethods__["graph10Max"] = _micropolisengine.Micropolis_graph10Max_get
    if _newclass:graph10Max = _swig_property(_micropolisengine.Micropolis_graph10Max_get, _micropolisengine.Micropolis_graph10Max_set)
    __swig_setmethods__["graph120Max"] = _micropolisengine.Micropolis_graph120Max_set
    __swig_getmethods__["graph120Max"] = _micropolisengine.Micropolis_graph120Max_get
    if _newclass:graph120Max = _swig_property(_micropolisengine.Micropolis_graph120Max_get, _micropolisengine.Micropolis_graph120Max_set)
    __swig_setmethods__["graphUpdateTime"] = _micropolisengine.Micropolis_graphUpdateTime_set
    __swig_getmethods__["graphUpdateTime"] = _micropolisengine.Micropolis_graphUpdateTime_get
    if _newclass:graphUpdateTime = _swig_property(_micropolisengine.Micropolis_graphUpdateTime_get, _micropolisengine.Micropolis_graphUpdateTime_set)
    def drawMonth(*args): return _micropolisengine.Micropolis_drawMonth(*args)
    def doAllGraphs(*args): return _micropolisengine.Micropolis_doAllGraphs(*args)
    def changeCensus(*args): return _micropolisengine.Micropolis_changeCensus(*args)
    def graphDoer(*args): return _micropolisengine.Micropolis_graphDoer(*args)
    def initGraphs(*args): return _micropolisengine.Micropolis_initGraphs(*args)
    def initGraphMax(*args): return _micropolisengine.Micropolis_initGraphMax(*args)
    def initWillStuff(*args): return _micropolisengine.Micropolis_initWillStuff(*args)
    def resetMapState(*args): return _micropolisengine.Micropolis_resetMapState(*args)
    def resetEditorState(*args): return _micropolisengine.Micropolis_resetEditorState(*args)
    __swig_setmethods__["simLoops"] = _micropolisengine.Micropolis_simLoops_set
    __swig_getmethods__["simLoops"] = _micropolisengine.Micropolis_simLoops_get
    if _newclass:simLoops = _swig_property(_micropolisengine.Micropolis_simLoops_get, _micropolisengine.Micropolis_simLoops_set)
    __swig_setmethods__["simSkips"] = _micropolisengine.Micropolis_simSkips_set
    __swig_getmethods__["simSkips"] = _micropolisengine.Micropolis_simSkips_get
    if _newclass:simSkips = _swig_property(_micropolisengine.Micropolis_simSkips_get, _micropolisengine.Micropolis_simSkips_set)
    __swig_setmethods__["simSkip"] = _micropolisengine.Micropolis_simSkip_set
    __swig_getmethods__["simSkip"] = _micropolisengine.Micropolis_simSkip_get
    if _newclass:simSkip = _swig_property(_micropolisengine.Micropolis_simSkip_get, _micropolisengine.Micropolis_simSkip_set)
    __swig_setmethods__["simPaused"] = _micropolisengine.Micropolis_simPaused_set
    __swig_getmethods__["simPaused"] = _micropolisengine.Micropolis_simPaused_get
    if _newclass:simPaused = _swig_property(_micropolisengine.Micropolis_simPaused_get, _micropolisengine.Micropolis_simPaused_set)
    __swig_setmethods__["simPausedSpeed"] = _micropolisengine.Micropolis_simPausedSpeed_set
    __swig_getmethods__["simPausedSpeed"] = _micropolisengine.Micropolis_simPausedSpeed_get
    if _newclass:simPausedSpeed = _swig_property(_micropolisengine.Micropolis_simPausedSpeed_get, _micropolisengine.Micropolis_simPausedSpeed_set)
    __swig_setmethods__["heatSteps"] = _micropolisengine.Micropolis_heatSteps_set
    __swig_getmethods__["heatSteps"] = _micropolisengine.Micropolis_heatSteps_get
    if _newclass:heatSteps = _swig_property(_micropolisengine.Micropolis_heatSteps_get, _micropolisengine.Micropolis_heatSteps_set)
    __swig_setmethods__["heatFlow"] = _micropolisengine.Micropolis_heatFlow_set
    __swig_getmethods__["heatFlow"] = _micropolisengine.Micropolis_heatFlow_get
    if _newclass:heatFlow = _swig_property(_micropolisengine.Micropolis_heatFlow_get, _micropolisengine.Micropolis_heatFlow_set)
    __swig_setmethods__["heatRule"] = _micropolisengine.Micropolis_heatRule_set
    __swig_getmethods__["heatRule"] = _micropolisengine.Micropolis_heatRule_get
    if _newclass:heatRule = _swig_property(_micropolisengine.Micropolis_heatRule_get, _micropolisengine.Micropolis_heatRule_set)
    __swig_setmethods__["heatWrap"] = _micropolisengine.Micropolis_heatWrap_set
    __swig_getmethods__["heatWrap"] = _micropolisengine.Micropolis_heatWrap_get
    if _newclass:heatWrap = _swig_property(_micropolisengine.Micropolis_heatWrap_get, _micropolisengine.Micropolis_heatWrap_set)
    __swig_setmethods__["cityFileName"] = _micropolisengine.Micropolis_cityFileName_set
    __swig_getmethods__["cityFileName"] = _micropolisengine.Micropolis_cityFileName_get
    if _newclass:cityFileName = _swig_property(_micropolisengine.Micropolis_cityFileName_get, _micropolisengine.Micropolis_cityFileName_set)
    __swig_setmethods__["cityName"] = _micropolisengine.Micropolis_cityName_set
    __swig_getmethods__["cityName"] = _micropolisengine.Micropolis_cityName_get
    if _newclass:cityName = _swig_property(_micropolisengine.Micropolis_cityName_get, _micropolisengine.Micropolis_cityName_set)
    __swig_setmethods__["tilesAnimated"] = _micropolisengine.Micropolis_tilesAnimated_set
    __swig_getmethods__["tilesAnimated"] = _micropolisengine.Micropolis_tilesAnimated_get
    if _newclass:tilesAnimated = _swig_property(_micropolisengine.Micropolis_tilesAnimated_get, _micropolisengine.Micropolis_tilesAnimated_set)
    __swig_setmethods__["doAnimation"] = _micropolisengine.Micropolis_doAnimation_set
    __swig_getmethods__["doAnimation"] = _micropolisengine.Micropolis_doAnimation_get
    if _newclass:doAnimation = _swig_property(_micropolisengine.Micropolis_doAnimation_get, _micropolisengine.Micropolis_doAnimation_set)
    __swig_setmethods__["doMessages"] = _micropolisengine.Micropolis_doMessages_set
    __swig_getmethods__["doMessages"] = _micropolisengine.Micropolis_doMessages_get
    if _newclass:doMessages = _swig_property(_micropolisengine.Micropolis_doMessages_get, _micropolisengine.Micropolis_doMessages_set)
    __swig_setmethods__["doNotices"] = _micropolisengine.Micropolis_doNotices_set
    __swig_getmethods__["doNotices"] = _micropolisengine.Micropolis_doNotices_get
    if _newclass:doNotices = _swig_property(_micropolisengine.Micropolis_doNotices_get, _micropolisengine.Micropolis_doNotices_set)
    def getMicropolisVersion(*args): return _micropolisengine.Micropolis_getMicropolisVersion(*args)
    def environmentInit(*args): return _micropolisengine.Micropolis_environmentInit(*args)
    def simInit(*args): return _micropolisengine.Micropolis_simInit(*args)
    def simUpdate(*args): return _micropolisengine.Micropolis_simUpdate(*args)
    def simHeat(*args): return _micropolisengine.Micropolis_simHeat(*args)
    def simLoop(*args): return _micropolisengine.Micropolis_simLoop(*args)
    def simTick(*args): return _micropolisengine.Micropolis_simTick(*args)
    __swig_setmethods__["lastCityPop"] = _micropolisengine.Micropolis_lastCityPop_set
    __swig_getmethods__["lastCityPop"] = _micropolisengine.Micropolis_lastCityPop_get
    if _newclass:lastCityPop = _swig_property(_micropolisengine.Micropolis_lastCityPop_get, _micropolisengine.Micropolis_lastCityPop_set)
    __swig_setmethods__["lastCategory"] = _micropolisengine.Micropolis_lastCategory_set
    __swig_getmethods__["lastCategory"] = _micropolisengine.Micropolis_lastCategory_get
    if _newclass:lastCategory = _swig_property(_micropolisengine.Micropolis_lastCategory_get, _micropolisengine.Micropolis_lastCategory_set)
    __swig_setmethods__["messagePictureLast"] = _micropolisengine.Micropolis_messagePictureLast_set
    __swig_getmethods__["messagePictureLast"] = _micropolisengine.Micropolis_messagePictureLast_get
    if _newclass:messagePictureLast = _swig_property(_micropolisengine.Micropolis_messagePictureLast_get, _micropolisengine.Micropolis_messagePictureLast_set)
    __swig_setmethods__["autoGoto"] = _micropolisengine.Micropolis_autoGoto_set
    __swig_getmethods__["autoGoto"] = _micropolisengine.Micropolis_autoGoto_get
    if _newclass:autoGoto = _swig_property(_micropolisengine.Micropolis_autoGoto_get, _micropolisengine.Micropolis_autoGoto_set)
    __swig_setmethods__["messageLastValid"] = _micropolisengine.Micropolis_messageLastValid_set
    __swig_getmethods__["messageLastValid"] = _micropolisengine.Micropolis_messageLastValid_get
    if _newclass:messageLastValid = _swig_property(_micropolisengine.Micropolis_messageLastValid_get, _micropolisengine.Micropolis_messageLastValid_set)
    __swig_setmethods__["messageLast"] = _micropolisengine.Micropolis_messageLast_set
    __swig_getmethods__["messageLast"] = _micropolisengine.Micropolis_messageLast_get
    if _newclass:messageLast = _swig_property(_micropolisengine.Micropolis_messageLast_get, _micropolisengine.Micropolis_messageLast_set)
    def sendMessages(*args): return _micropolisengine.Micropolis_sendMessages(*args)
    def checkGrowth(*args): return _micropolisengine.Micropolis_checkGrowth(*args)
    def doScenarioScore(*args): return _micropolisengine.Micropolis_doScenarioScore(*args)
    def clearMessage(*args): return _micropolisengine.Micropolis_clearMessage(*args)
    def sendMessage(*args): return _micropolisengine.Micropolis_sendMessage(*args)
    def sendMessageAt(*args): return _micropolisengine.Micropolis_sendMessageAt(*args)
    def doMessage(*args): return _micropolisengine.Micropolis_doMessage(*args)
    def doMakeSound(*args): return _micropolisengine.Micropolis_doMakeSound(*args)
    def doAutoGoto(*args): return _micropolisengine.Micropolis_doAutoGoto(*args)
    def setMessageField(*args): return _micropolisengine.Micropolis_setMessageField(*args)
    def doShowPicture(*args): return _micropolisengine.Micropolis_doShowPicture(*args)
    def doLoseGame(*args): return _micropolisengine.Micropolis_doLoseGame(*args)
    def doWinGame(*args): return _micropolisengine.Micropolis_doWinGame(*args)
    __swig_setmethods__["powerStackNum"] = _micropolisengine.Micropolis_powerStackNum_set
    __swig_getmethods__["powerStackNum"] = _micropolisengine.Micropolis_powerStackNum_get
    if _newclass:powerStackNum = _swig_property(_micropolisengine.Micropolis_powerStackNum_get, _micropolisengine.Micropolis_powerStackNum_set)
    __swig_setmethods__["powerStackX"] = _micropolisengine.Micropolis_powerStackX_set
    __swig_getmethods__["powerStackX"] = _micropolisengine.Micropolis_powerStackX_get
    if _newclass:powerStackX = _swig_property(_micropolisengine.Micropolis_powerStackX_get, _micropolisengine.Micropolis_powerStackX_set)
    __swig_setmethods__["powerStackY"] = _micropolisengine.Micropolis_powerStackY_set
    __swig_getmethods__["powerStackY"] = _micropolisengine.Micropolis_powerStackY_get
    if _newclass:powerStackY = _swig_property(_micropolisengine.Micropolis_powerStackY_get, _micropolisengine.Micropolis_powerStackY_set)
    def doPowerScan(*args): return _micropolisengine.Micropolis_doPowerScan(*args)
    def testForConductive(*args): return _micropolisengine.Micropolis_testForConductive(*args)
    def pushPowerStack(*args): return _micropolisengine.Micropolis_pushPowerStack(*args)
    def pullPowerStack(*args): return _micropolisengine.Micropolis_pullPowerStack(*args)
    __swig_setmethods__["maxPower"] = _micropolisengine.Micropolis_maxPower_set
    __swig_getmethods__["maxPower"] = _micropolisengine.Micropolis_maxPower_get
    if _newclass:maxPower = _swig_property(_micropolisengine.Micropolis_maxPower_get, _micropolisengine.Micropolis_maxPower_set)
    __swig_setmethods__["numPower"] = _micropolisengine.Micropolis_numPower_set
    __swig_getmethods__["numPower"] = _micropolisengine.Micropolis_numPower_get
    if _newclass:numPower = _swig_property(_micropolisengine.Micropolis_numPower_get, _micropolisengine.Micropolis_numPower_set)
    def moveMapSim(*args): return _micropolisengine.Micropolis_moveMapSim(*args)
    __swig_setmethods__["nextRandom"] = _micropolisengine.Micropolis_nextRandom_set
    __swig_getmethods__["nextRandom"] = _micropolisengine.Micropolis_nextRandom_get
    if _newclass:nextRandom = _swig_property(_micropolisengine.Micropolis_nextRandom_get, _micropolisengine.Micropolis_nextRandom_set)
    def simRandom(*args): return _micropolisengine.Micropolis_simRandom(*args)
    def getRandom(*args): return _micropolisengine.Micropolis_getRandom(*args)
    def getRandom16(*args): return _micropolisengine.Micropolis_getRandom16(*args)
    def getRandom16Signed(*args): return _micropolisengine.Micropolis_getRandom16Signed(*args)
    def getERandom(*args): return _micropolisengine.Micropolis_getERandom(*args)
    def randomlySeedRandom(*args): return _micropolisengine.Micropolis_randomlySeedRandom(*args)
    def seedRandom(*args): return _micropolisengine.Micropolis_seedRandom(*args)
    __swig_setmethods__["homeDir"] = _micropolisengine.Micropolis_homeDir_set
    __swig_getmethods__["homeDir"] = _micropolisengine.Micropolis_homeDir_get
    if _newclass:homeDir = _swig_property(_micropolisengine.Micropolis_homeDir_get, _micropolisengine.Micropolis_homeDir_set)
    __swig_setmethods__["resourceDir"] = _micropolisengine.Micropolis_resourceDir_set
    __swig_getmethods__["resourceDir"] = _micropolisengine.Micropolis_resourceDir_get
    if _newclass:resourceDir = _swig_property(_micropolisengine.Micropolis_resourceDir_get, _micropolisengine.Micropolis_resourceDir_set)
    __swig_setmethods__["resources"] = _micropolisengine.Micropolis_resources_set
    __swig_getmethods__["resources"] = _micropolisengine.Micropolis_resources_get
    if _newclass:resources = _swig_property(_micropolisengine.Micropolis_resources_get, _micropolisengine.Micropolis_resources_set)
    __swig_setmethods__["stringTables"] = _micropolisengine.Micropolis_stringTables_set
    __swig_getmethods__["stringTables"] = _micropolisengine.Micropolis_stringTables_get
    if _newclass:stringTables = _swig_property(_micropolisengine.Micropolis_stringTables_get, _micropolisengine.Micropolis_stringTables_set)
    def getResource(*args): return _micropolisengine.Micropolis_getResource(*args)
    def getIndString(*args): return _micropolisengine.Micropolis_getIndString(*args)
    __swig_setmethods__["newMap"] = _micropolisengine.Micropolis_newMap_set
    __swig_getmethods__["newMap"] = _micropolisengine.Micropolis_newMap_get
    if _newclass:newMap = _swig_property(_micropolisengine.Micropolis_newMap_get, _micropolisengine.Micropolis_newMap_set)
    __swig_setmethods__["newMapFlags"] = _micropolisengine.Micropolis_newMapFlags_set
    __swig_getmethods__["newMapFlags"] = _micropolisengine.Micropolis_newMapFlags_get
    if _newclass:newMapFlags = _swig_property(_micropolisengine.Micropolis_newMapFlags_get, _micropolisengine.Micropolis_newMapFlags_set)
    __swig_setmethods__["cityCenterX"] = _micropolisengine.Micropolis_cityCenterX_set
    __swig_getmethods__["cityCenterX"] = _micropolisengine.Micropolis_cityCenterX_get
    if _newclass:cityCenterX = _swig_property(_micropolisengine.Micropolis_cityCenterX_get, _micropolisengine.Micropolis_cityCenterX_set)
    __swig_setmethods__["cityCenterY"] = _micropolisengine.Micropolis_cityCenterY_set
    __swig_getmethods__["cityCenterY"] = _micropolisengine.Micropolis_cityCenterY_get
    if _newclass:cityCenterY = _swig_property(_micropolisengine.Micropolis_cityCenterY_get, _micropolisengine.Micropolis_cityCenterY_set)
    __swig_setmethods__["cityCenterX2"] = _micropolisengine.Micropolis_cityCenterX2_set
    __swig_getmethods__["cityCenterX2"] = _micropolisengine.Micropolis_cityCenterX2_get
    if _newclass:cityCenterX2 = _swig_property(_micropolisengine.Micropolis_cityCenterX2_get, _micropolisengine.Micropolis_cityCenterX2_set)
    __swig_setmethods__["cityCenterY2"] = _micropolisengine.Micropolis_cityCenterY2_set
    __swig_getmethods__["cityCenterY2"] = _micropolisengine.Micropolis_cityCenterY2_get
    if _newclass:cityCenterY2 = _swig_property(_micropolisengine.Micropolis_cityCenterY2_get, _micropolisengine.Micropolis_cityCenterY2_set)
    __swig_setmethods__["pollutionMaxX"] = _micropolisengine.Micropolis_pollutionMaxX_set
    __swig_getmethods__["pollutionMaxX"] = _micropolisengine.Micropolis_pollutionMaxX_get
    if _newclass:pollutionMaxX = _swig_property(_micropolisengine.Micropolis_pollutionMaxX_get, _micropolisengine.Micropolis_pollutionMaxX_set)
    __swig_setmethods__["pollutionMaxY"] = _micropolisengine.Micropolis_pollutionMaxY_set
    __swig_getmethods__["pollutionMaxY"] = _micropolisengine.Micropolis_pollutionMaxY_get
    if _newclass:pollutionMaxY = _swig_property(_micropolisengine.Micropolis_pollutionMaxY_get, _micropolisengine.Micropolis_pollutionMaxY_set)
    __swig_setmethods__["crimeMaxX"] = _micropolisengine.Micropolis_crimeMaxX_set
    __swig_getmethods__["crimeMaxX"] = _micropolisengine.Micropolis_crimeMaxX_get
    if _newclass:crimeMaxX = _swig_property(_micropolisengine.Micropolis_crimeMaxX_get, _micropolisengine.Micropolis_crimeMaxX_set)
    __swig_setmethods__["crimeMaxY"] = _micropolisengine.Micropolis_crimeMaxY_set
    __swig_getmethods__["crimeMaxY"] = _micropolisengine.Micropolis_crimeMaxY_get
    if _newclass:crimeMaxY = _swig_property(_micropolisengine.Micropolis_crimeMaxY_get, _micropolisengine.Micropolis_crimeMaxY_set)
    __swig_setmethods__["donDither"] = _micropolisengine.Micropolis_donDither_set
    __swig_getmethods__["donDither"] = _micropolisengine.Micropolis_donDither_get
    if _newclass:donDither = _swig_property(_micropolisengine.Micropolis_donDither_get, _micropolisengine.Micropolis_donDither_set)
    def fireAnalysis(*args): return _micropolisengine.Micropolis_fireAnalysis(*args)
    def populationDensityScan(*args): return _micropolisengine.Micropolis_populationDensityScan(*args)
    def getPopulationDensity(*args): return _micropolisengine.Micropolis_getPopulationDensity(*args)
    def pollutionTerrainLandValueScan(*args): return _micropolisengine.Micropolis_pollutionTerrainLandValueScan(*args)
    def getPollutionValue(*args): return _micropolisengine.Micropolis_getPollutionValue(*args)
    def getCityCenterDistance(*args): return _micropolisengine.Micropolis_getCityCenterDistance(*args)
    def crimeScan(*args): return _micropolisengine.Micropolis_crimeScan(*args)
    def smoothTerrain(*args): return _micropolisengine.Micropolis_smoothTerrain(*args)
    def doSmooth1(*args): return _micropolisengine.Micropolis_doSmooth1(*args)
    def doSmooth2(*args): return _micropolisengine.Micropolis_doSmooth2(*args)
    def clearTempMap1(*args): return _micropolisengine.Micropolis_clearTempMap1(*args)
    def smoothFireStationMap(*args): return _micropolisengine.Micropolis_smoothFireStationMap(*args)
    def smoothPoliceStationMap(*args): return _micropolisengine.Micropolis_smoothPoliceStationMap(*args)
    def computeComRateMap(*args): return _micropolisengine.Micropolis_computeComRateMap(*args)
    __swig_setmethods__["valveFlag"] = _micropolisengine.Micropolis_valveFlag_set
    __swig_getmethods__["valveFlag"] = _micropolisengine.Micropolis_valveFlag_get
    if _newclass:valveFlag = _swig_property(_micropolisengine.Micropolis_valveFlag_get, _micropolisengine.Micropolis_valveFlag_set)
    __swig_setmethods__["crimeRamp"] = _micropolisengine.Micropolis_crimeRamp_set
    __swig_getmethods__["crimeRamp"] = _micropolisengine.Micropolis_crimeRamp_get
    if _newclass:crimeRamp = _swig_property(_micropolisengine.Micropolis_crimeRamp_get, _micropolisengine.Micropolis_crimeRamp_set)
    __swig_setmethods__["pollutionRamp"] = _micropolisengine.Micropolis_pollutionRamp_set
    __swig_getmethods__["pollutionRamp"] = _micropolisengine.Micropolis_pollutionRamp_get
    if _newclass:pollutionRamp = _swig_property(_micropolisengine.Micropolis_pollutionRamp_get, _micropolisengine.Micropolis_pollutionRamp_set)
    __swig_setmethods__["resValve"] = _micropolisengine.Micropolis_resValve_set
    __swig_getmethods__["resValve"] = _micropolisengine.Micropolis_resValve_get
    if _newclass:resValve = _swig_property(_micropolisengine.Micropolis_resValve_get, _micropolisengine.Micropolis_resValve_set)
    __swig_setmethods__["comValve"] = _micropolisengine.Micropolis_comValve_set
    __swig_getmethods__["comValve"] = _micropolisengine.Micropolis_comValve_get
    if _newclass:comValve = _swig_property(_micropolisengine.Micropolis_comValve_get, _micropolisengine.Micropolis_comValve_set)
    __swig_setmethods__["indValve"] = _micropolisengine.Micropolis_indValve_set
    __swig_getmethods__["indValve"] = _micropolisengine.Micropolis_indValve_get
    if _newclass:indValve = _swig_property(_micropolisengine.Micropolis_indValve_get, _micropolisengine.Micropolis_indValve_set)
    __swig_setmethods__["resCap"] = _micropolisengine.Micropolis_resCap_set
    __swig_getmethods__["resCap"] = _micropolisengine.Micropolis_resCap_get
    if _newclass:resCap = _swig_property(_micropolisengine.Micropolis_resCap_get, _micropolisengine.Micropolis_resCap_set)
    __swig_setmethods__["comCap"] = _micropolisengine.Micropolis_comCap_set
    __swig_getmethods__["comCap"] = _micropolisengine.Micropolis_comCap_get
    if _newclass:comCap = _swig_property(_micropolisengine.Micropolis_comCap_get, _micropolisengine.Micropolis_comCap_set)
    __swig_setmethods__["indCap"] = _micropolisengine.Micropolis_indCap_set
    __swig_getmethods__["indCap"] = _micropolisengine.Micropolis_indCap_get
    if _newclass:indCap = _swig_property(_micropolisengine.Micropolis_indCap_get, _micropolisengine.Micropolis_indCap_set)
    __swig_setmethods__["CashFlow"] = _micropolisengine.Micropolis_CashFlow_set
    __swig_getmethods__["CashFlow"] = _micropolisengine.Micropolis_CashFlow_get
    if _newclass:CashFlow = _swig_property(_micropolisengine.Micropolis_CashFlow_get, _micropolisengine.Micropolis_CashFlow_set)
    __swig_setmethods__["EMarket"] = _micropolisengine.Micropolis_EMarket_set
    __swig_getmethods__["EMarket"] = _micropolisengine.Micropolis_EMarket_get
    if _newclass:EMarket = _swig_property(_micropolisengine.Micropolis_EMarket_get, _micropolisengine.Micropolis_EMarket_set)
    __swig_setmethods__["DisasterEvent"] = _micropolisengine.Micropolis_DisasterEvent_set
    __swig_getmethods__["DisasterEvent"] = _micropolisengine.Micropolis_DisasterEvent_get
    if _newclass:DisasterEvent = _swig_property(_micropolisengine.Micropolis_DisasterEvent_get, _micropolisengine.Micropolis_DisasterEvent_set)
    __swig_setmethods__["DisasterWait"] = _micropolisengine.Micropolis_DisasterWait_set
    __swig_getmethods__["DisasterWait"] = _micropolisengine.Micropolis_DisasterWait_get
    if _newclass:DisasterWait = _swig_property(_micropolisengine.Micropolis_DisasterWait_get, _micropolisengine.Micropolis_DisasterWait_set)
    __swig_setmethods__["ScoreType"] = _micropolisengine.Micropolis_ScoreType_set
    __swig_getmethods__["ScoreType"] = _micropolisengine.Micropolis_ScoreType_get
    if _newclass:ScoreType = _swig_property(_micropolisengine.Micropolis_ScoreType_get, _micropolisengine.Micropolis_ScoreType_set)
    __swig_setmethods__["ScoreWait"] = _micropolisengine.Micropolis_ScoreWait_set
    __swig_getmethods__["ScoreWait"] = _micropolisengine.Micropolis_ScoreWait_get
    if _newclass:ScoreWait = _swig_property(_micropolisengine.Micropolis_ScoreWait_get, _micropolisengine.Micropolis_ScoreWait_set)
    __swig_setmethods__["PwrdZCnt"] = _micropolisengine.Micropolis_PwrdZCnt_set
    __swig_getmethods__["PwrdZCnt"] = _micropolisengine.Micropolis_PwrdZCnt_get
    if _newclass:PwrdZCnt = _swig_property(_micropolisengine.Micropolis_PwrdZCnt_get, _micropolisengine.Micropolis_PwrdZCnt_set)
    __swig_setmethods__["unPwrdZCnt"] = _micropolisengine.Micropolis_unPwrdZCnt_set
    __swig_getmethods__["unPwrdZCnt"] = _micropolisengine.Micropolis_unPwrdZCnt_get
    if _newclass:unPwrdZCnt = _swig_property(_micropolisengine.Micropolis_unPwrdZCnt_get, _micropolisengine.Micropolis_unPwrdZCnt_set)
    __swig_setmethods__["NewPower"] = _micropolisengine.Micropolis_NewPower_set
    __swig_getmethods__["NewPower"] = _micropolisengine.Micropolis_NewPower_get
    if _newclass:NewPower = _swig_property(_micropolisengine.Micropolis_NewPower_get, _micropolisengine.Micropolis_NewPower_set)
    __swig_setmethods__["cityTaxAverage"] = _micropolisengine.Micropolis_cityTaxAverage_set
    __swig_getmethods__["cityTaxAverage"] = _micropolisengine.Micropolis_cityTaxAverage_get
    if _newclass:cityTaxAverage = _swig_property(_micropolisengine.Micropolis_cityTaxAverage_get, _micropolisengine.Micropolis_cityTaxAverage_set)
    __swig_setmethods__["simCycle"] = _micropolisengine.Micropolis_simCycle_set
    __swig_getmethods__["simCycle"] = _micropolisengine.Micropolis_simCycle_get
    if _newclass:simCycle = _swig_property(_micropolisengine.Micropolis_simCycle_get, _micropolisengine.Micropolis_simCycle_set)
    __swig_setmethods__["phaseCycle"] = _micropolisengine.Micropolis_phaseCycle_set
    __swig_getmethods__["phaseCycle"] = _micropolisengine.Micropolis_phaseCycle_get
    if _newclass:phaseCycle = _swig_property(_micropolisengine.Micropolis_phaseCycle_get, _micropolisengine.Micropolis_phaseCycle_set)
    __swig_setmethods__["speedCycle"] = _micropolisengine.Micropolis_speedCycle_set
    __swig_getmethods__["speedCycle"] = _micropolisengine.Micropolis_speedCycle_get
    if _newclass:speedCycle = _swig_property(_micropolisengine.Micropolis_speedCycle_get, _micropolisengine.Micropolis_speedCycle_set)
    __swig_setmethods__["doInitialEval"] = _micropolisengine.Micropolis_doInitialEval_set
    __swig_getmethods__["doInitialEval"] = _micropolisengine.Micropolis_doInitialEval_get
    if _newclass:doInitialEval = _swig_property(_micropolisengine.Micropolis_doInitialEval_get, _micropolisengine.Micropolis_doInitialEval_set)
    def RandomFire(*args): return _micropolisengine.Micropolis_RandomFire(*args)
    def RandomRubble(*args): return _micropolisengine.Micropolis_RandomRubble(*args)
    def SimFrame(*args): return _micropolisengine.Micropolis_SimFrame(*args)
    def Simulate(*args): return _micropolisengine.Micropolis_Simulate(*args)
    def DoSimInit(*args): return _micropolisengine.Micropolis_DoSimInit(*args)
    def DoNilPower(*args): return _micropolisengine.Micropolis_DoNilPower(*args)
    def DecTrafficMem(*args): return _micropolisengine.Micropolis_DecTrafficMem(*args)
    def DecROGMem(*args): return _micropolisengine.Micropolis_DecROGMem(*args)
    def InitSimMemory(*args): return _micropolisengine.Micropolis_InitSimMemory(*args)
    def SimLoadInit(*args): return _micropolisengine.Micropolis_SimLoadInit(*args)
    def SetCommonInits(*args): return _micropolisengine.Micropolis_SetCommonInits(*args)
    def SetValves(*args): return _micropolisengine.Micropolis_SetValves(*args)
    def ClearCensus(*args): return _micropolisengine.Micropolis_ClearCensus(*args)
    def TakeCensus(*args): return _micropolisengine.Micropolis_TakeCensus(*args)
    def Take2Census(*args): return _micropolisengine.Micropolis_Take2Census(*args)
    def CollectTax(*args): return _micropolisengine.Micropolis_CollectTax(*args)
    def UpdateFundEffects(*args): return _micropolisengine.Micropolis_UpdateFundEffects(*args)
    def MapScan(*args): return _micropolisengine.Micropolis_MapScan(*args)
    def DoRail(*args): return _micropolisengine.Micropolis_DoRail(*args)
    def DoRadTile(*args): return _micropolisengine.Micropolis_DoRadTile(*args)
    def DoRoad(*args): return _micropolisengine.Micropolis_DoRoad(*args)
    def DoBridge(*args): return _micropolisengine.Micropolis_DoBridge(*args)
    def GetBoatDis(*args): return _micropolisengine.Micropolis_GetBoatDis(*args)
    def DoFire(*args): return _micropolisengine.Micropolis_DoFire(*args)
    def FireZone(*args): return _micropolisengine.Micropolis_FireZone(*args)
    __swig_setmethods__["spriteList"] = _micropolisengine.Micropolis_spriteList_set
    __swig_getmethods__["spriteList"] = _micropolisengine.Micropolis_spriteList_get
    if _newclass:spriteList = _swig_property(_micropolisengine.Micropolis_spriteList_get, _micropolisengine.Micropolis_spriteList_set)
    __swig_setmethods__["FreeSprites"] = _micropolisengine.Micropolis_FreeSprites_set
    __swig_getmethods__["FreeSprites"] = _micropolisengine.Micropolis_FreeSprites_get
    if _newclass:FreeSprites = _swig_property(_micropolisengine.Micropolis_FreeSprites_get, _micropolisengine.Micropolis_FreeSprites_set)
    __swig_setmethods__["GlobalSprites"] = _micropolisengine.Micropolis_GlobalSprites_set
    __swig_getmethods__["GlobalSprites"] = _micropolisengine.Micropolis_GlobalSprites_get
    if _newclass:GlobalSprites = _swig_property(_micropolisengine.Micropolis_GlobalSprites_get, _micropolisengine.Micropolis_GlobalSprites_set)
    __swig_setmethods__["CrashX"] = _micropolisengine.Micropolis_CrashX_set
    __swig_getmethods__["CrashX"] = _micropolisengine.Micropolis_CrashX_get
    if _newclass:CrashX = _swig_property(_micropolisengine.Micropolis_CrashX_get, _micropolisengine.Micropolis_CrashX_set)
    __swig_setmethods__["CrashY"] = _micropolisengine.Micropolis_CrashY_set
    __swig_getmethods__["CrashY"] = _micropolisengine.Micropolis_CrashY_get
    if _newclass:CrashY = _swig_property(_micropolisengine.Micropolis_CrashY_get, _micropolisengine.Micropolis_CrashY_set)
    __swig_setmethods__["absDist"] = _micropolisengine.Micropolis_absDist_set
    __swig_getmethods__["absDist"] = _micropolisengine.Micropolis_absDist_get
    if _newclass:absDist = _swig_property(_micropolisengine.Micropolis_absDist_get, _micropolisengine.Micropolis_absDist_set)
    __swig_setmethods__["Cycle"] = _micropolisengine.Micropolis_Cycle_set
    __swig_getmethods__["Cycle"] = _micropolisengine.Micropolis_Cycle_get
    if _newclass:Cycle = _swig_property(_micropolisengine.Micropolis_Cycle_get, _micropolisengine.Micropolis_Cycle_set)
    def NewSprite(*args): return _micropolisengine.Micropolis_NewSprite(*args)
    def InitSprite(*args): return _micropolisengine.Micropolis_InitSprite(*args)
    def DestroyAllSprites(*args): return _micropolisengine.Micropolis_DestroyAllSprites(*args)
    def DestroySprite(*args): return _micropolisengine.Micropolis_DestroySprite(*args)
    def GetSprite(*args): return _micropolisengine.Micropolis_GetSprite(*args)
    def MakeSprite(*args): return _micropolisengine.Micropolis_MakeSprite(*args)
    def DrawObjects(*args): return _micropolisengine.Micropolis_DrawObjects(*args)
    def DrawSprite(*args): return _micropolisengine.Micropolis_DrawSprite(*args)
    def GetChar(*args): return _micropolisengine.Micropolis_GetChar(*args)
    def TurnTo(*args): return _micropolisengine.Micropolis_TurnTo(*args)
    def TryOther(*args): return _micropolisengine.Micropolis_TryOther(*args)
    def SpriteNotInBounds(*args): return _micropolisengine.Micropolis_SpriteNotInBounds(*args)
    def GetDir(*args): return _micropolisengine.Micropolis_GetDir(*args)
    def GetDistance(*args): return _micropolisengine.Micropolis_GetDistance(*args)
    def CheckSpriteCollision(*args): return _micropolisengine.Micropolis_CheckSpriteCollision(*args)
    def MoveObjects(*args): return _micropolisengine.Micropolis_MoveObjects(*args)
    def DoTrainSprite(*args): return _micropolisengine.Micropolis_DoTrainSprite(*args)
    def DoCopterSprite(*args): return _micropolisengine.Micropolis_DoCopterSprite(*args)
    def DoAirplaneSprite(*args): return _micropolisengine.Micropolis_DoAirplaneSprite(*args)
    def DoShipSprite(*args): return _micropolisengine.Micropolis_DoShipSprite(*args)
    def DoMonsterSprite(*args): return _micropolisengine.Micropolis_DoMonsterSprite(*args)
    def DoTornadoSprite(*args): return _micropolisengine.Micropolis_DoTornadoSprite(*args)
    def DoExplosionSprite(*args): return _micropolisengine.Micropolis_DoExplosionSprite(*args)
    def DoBusSprite(*args): return _micropolisengine.Micropolis_DoBusSprite(*args)
    def CanDriveOn(*args): return _micropolisengine.Micropolis_CanDriveOn(*args)
    def ExplodeSprite(*args): return _micropolisengine.Micropolis_ExplodeSprite(*args)
    def checkWet(*args): return _micropolisengine.Micropolis_checkWet(*args)
    def Destroy(*args): return _micropolisengine.Micropolis_Destroy(*args)
    def OFireZone(*args): return _micropolisengine.Micropolis_OFireZone(*args)
    def StartFire(*args): return _micropolisengine.Micropolis_StartFire(*args)
    def GenerateTrain(*args): return _micropolisengine.Micropolis_GenerateTrain(*args)
    def GenerateBus(*args): return _micropolisengine.Micropolis_GenerateBus(*args)
    def GenerateShip(*args): return _micropolisengine.Micropolis_GenerateShip(*args)
    def MakeShipHere(*args): return _micropolisengine.Micropolis_MakeShipHere(*args)
    def makeMonster(*args): return _micropolisengine.Micropolis_makeMonster(*args)
    def MonsterHere(*args): return _micropolisengine.Micropolis_MonsterHere(*args)
    def GenerateCopter(*args): return _micropolisengine.Micropolis_GenerateCopter(*args)
    def GeneratePlane(*args): return _micropolisengine.Micropolis_GeneratePlane(*args)
    def makeTornado(*args): return _micropolisengine.Micropolis_makeTornado(*args)
    def MakeExplosion(*args): return _micropolisengine.Micropolis_MakeExplosion(*args)
    def MakeExplosionAt(*args): return _micropolisengine.Micropolis_MakeExplosionAt(*args)
    __swig_setmethods__["TotalFunds"] = _micropolisengine.Micropolis_TotalFunds_set
    __swig_getmethods__["TotalFunds"] = _micropolisengine.Micropolis_TotalFunds_get
    if _newclass:TotalFunds = _swig_property(_micropolisengine.Micropolis_TotalFunds_get, _micropolisengine.Micropolis_TotalFunds_set)
    __swig_setmethods__["autoBulldoze"] = _micropolisengine.Micropolis_autoBulldoze_set
    __swig_getmethods__["autoBulldoze"] = _micropolisengine.Micropolis_autoBulldoze_get
    if _newclass:autoBulldoze = _swig_property(_micropolisengine.Micropolis_autoBulldoze_get, _micropolisengine.Micropolis_autoBulldoze_set)
    __swig_setmethods__["autoBudget"] = _micropolisengine.Micropolis_autoBudget_set
    __swig_getmethods__["autoBudget"] = _micropolisengine.Micropolis_autoBudget_get
    if _newclass:autoBudget = _swig_property(_micropolisengine.Micropolis_autoBudget_get, _micropolisengine.Micropolis_autoBudget_set)
    __swig_setmethods__["LastMesTime"] = _micropolisengine.Micropolis_LastMesTime_set
    __swig_getmethods__["LastMesTime"] = _micropolisengine.Micropolis_LastMesTime_get
    if _newclass:LastMesTime = _swig_property(_micropolisengine.Micropolis_LastMesTime_get, _micropolisengine.Micropolis_LastMesTime_set)
    __swig_setmethods__["gameLevel"] = _micropolisengine.Micropolis_gameLevel_set
    __swig_getmethods__["gameLevel"] = _micropolisengine.Micropolis_gameLevel_get
    if _newclass:gameLevel = _swig_property(_micropolisengine.Micropolis_gameLevel_get, _micropolisengine.Micropolis_gameLevel_set)
    __swig_setmethods__["InitSimLoad"] = _micropolisengine.Micropolis_InitSimLoad_set
    __swig_getmethods__["InitSimLoad"] = _micropolisengine.Micropolis_InitSimLoad_get
    if _newclass:InitSimLoad = _swig_property(_micropolisengine.Micropolis_InitSimLoad_get, _micropolisengine.Micropolis_InitSimLoad_set)
    __swig_setmethods__["ScenarioID"] = _micropolisengine.Micropolis_ScenarioID_set
    __swig_getmethods__["ScenarioID"] = _micropolisengine.Micropolis_ScenarioID_get
    if _newclass:ScenarioID = _swig_property(_micropolisengine.Micropolis_ScenarioID_get, _micropolisengine.Micropolis_ScenarioID_set)
    __swig_setmethods__["SimSpeed"] = _micropolisengine.Micropolis_SimSpeed_set
    __swig_getmethods__["SimSpeed"] = _micropolisengine.Micropolis_SimSpeed_get
    if _newclass:SimSpeed = _swig_property(_micropolisengine.Micropolis_SimSpeed_get, _micropolisengine.Micropolis_SimSpeed_set)
    __swig_setmethods__["SimMetaSpeed"] = _micropolisengine.Micropolis_SimMetaSpeed_set
    __swig_getmethods__["SimMetaSpeed"] = _micropolisengine.Micropolis_SimMetaSpeed_get
    if _newclass:SimMetaSpeed = _swig_property(_micropolisengine.Micropolis_SimMetaSpeed_get, _micropolisengine.Micropolis_SimMetaSpeed_set)
    __swig_setmethods__["UserSoundOn"] = _micropolisengine.Micropolis_UserSoundOn_set
    __swig_getmethods__["UserSoundOn"] = _micropolisengine.Micropolis_UserSoundOn_get
    if _newclass:UserSoundOn = _swig_property(_micropolisengine.Micropolis_UserSoundOn_get, _micropolisengine.Micropolis_UserSoundOn_set)
    __swig_setmethods__["NoDisasters"] = _micropolisengine.Micropolis_NoDisasters_set
    __swig_getmethods__["NoDisasters"] = _micropolisengine.Micropolis_NoDisasters_get
    if _newclass:NoDisasters = _swig_property(_micropolisengine.Micropolis_NoDisasters_get, _micropolisengine.Micropolis_NoDisasters_set)
    __swig_setmethods__["MesNum"] = _micropolisengine.Micropolis_MesNum_set
    __swig_getmethods__["MesNum"] = _micropolisengine.Micropolis_MesNum_get
    if _newclass:MesNum = _swig_property(_micropolisengine.Micropolis_MesNum_get, _micropolisengine.Micropolis_MesNum_set)
    __swig_setmethods__["evalChanged"] = _micropolisengine.Micropolis_evalChanged_set
    __swig_getmethods__["evalChanged"] = _micropolisengine.Micropolis_evalChanged_get
    if _newclass:evalChanged = _swig_property(_micropolisengine.Micropolis_evalChanged_get, _micropolisengine.Micropolis_evalChanged_set)
    __swig_setmethods__["flagBlink"] = _micropolisengine.Micropolis_flagBlink_set
    __swig_getmethods__["flagBlink"] = _micropolisengine.Micropolis_flagBlink_get
    if _newclass:flagBlink = _swig_property(_micropolisengine.Micropolis_flagBlink_get, _micropolisengine.Micropolis_flagBlink_set)
    __swig_setmethods__["callbackHook"] = _micropolisengine.Micropolis_callbackHook_set
    __swig_getmethods__["callbackHook"] = _micropolisengine.Micropolis_callbackHook_get
    if _newclass:callbackHook = _swig_property(_micropolisengine.Micropolis_callbackHook_get, _micropolisengine.Micropolis_callbackHook_set)
    __swig_setmethods__["callbackData"] = _micropolisengine.Micropolis_callbackData_set
    __swig_getmethods__["callbackData"] = _micropolisengine.Micropolis_callbackData_get
    if _newclass:callbackData = _swig_property(_micropolisengine.Micropolis_callbackData_get, _micropolisengine.Micropolis_callbackData_set)
    __swig_setmethods__["userData"] = _micropolisengine.Micropolis_userData_set
    __swig_getmethods__["userData"] = _micropolisengine.Micropolis_userData_get
    if _newclass:userData = _swig_property(_micropolisengine.Micropolis_userData_get, _micropolisengine.Micropolis_userData_set)
    def Spend(*args): return _micropolisengine.Micropolis_Spend(*args)
    def SetFunds(*args): return _micropolisengine.Micropolis_SetFunds(*args)
    def TickCount(*args): return _micropolisengine.Micropolis_TickCount(*args)
    def NewPtr(*args): return _micropolisengine.Micropolis_NewPtr(*args)
    def FreePtr(*args): return _micropolisengine.Micropolis_FreePtr(*args)
    def DoPlayNewCity(*args): return _micropolisengine.Micropolis_DoPlayNewCity(*args)
    def DoReallyStartGame(*args): return _micropolisengine.Micropolis_DoReallyStartGame(*args)
    def DoStartLoad(*args): return _micropolisengine.Micropolis_DoStartLoad(*args)
    def DoStartScenario(*args): return _micropolisengine.Micropolis_DoStartScenario(*args)
    def dropFireBombs(*args): return _micropolisengine.Micropolis_dropFireBombs(*args)
    def InitGame(*args): return _micropolisengine.Micropolis_InitGame(*args)
    def Callback(*args): return _micropolisengine.Micropolis_Callback(*args)
    def DoEarthquake(*args): return _micropolisengine.Micropolis_DoEarthquake(*args)
    def InvalidateEditors(*args): return _micropolisengine.Micropolis_InvalidateEditors(*args)
    def InvalidateMaps(*args): return _micropolisengine.Micropolis_InvalidateMaps(*args)
    def InitializeSound(*args): return _micropolisengine.Micropolis_InitializeSound(*args)
    def MakeSound(*args): return _micropolisengine.Micropolis_MakeSound(*args)
    def getTile(*args): return _micropolisengine.Micropolis_getTile(*args)
    def getMapBuffer(*args): return _micropolisengine.Micropolis_getMapBuffer(*args)
    __swig_setmethods__["last_x"] = _micropolisengine.Micropolis_last_x_set
    __swig_getmethods__["last_x"] = _micropolisengine.Micropolis_last_x_get
    if _newclass:last_x = _swig_property(_micropolisengine.Micropolis_last_x_get, _micropolisengine.Micropolis_last_x_set)
    __swig_setmethods__["last_y"] = _micropolisengine.Micropolis_last_y_set
    __swig_getmethods__["last_y"] = _micropolisengine.Micropolis_last_y_get
    if _newclass:last_y = _swig_property(_micropolisengine.Micropolis_last_y_get, _micropolisengine.Micropolis_last_y_set)
    __swig_setmethods__["tool_x"] = _micropolisengine.Micropolis_tool_x_set
    __swig_getmethods__["tool_x"] = _micropolisengine.Micropolis_tool_x_get
    if _newclass:tool_x = _swig_property(_micropolisengine.Micropolis_tool_x_get, _micropolisengine.Micropolis_tool_x_set)
    __swig_setmethods__["tool_y"] = _micropolisengine.Micropolis_tool_y_set
    __swig_getmethods__["tool_y"] = _micropolisengine.Micropolis_tool_y_get
    if _newclass:tool_y = _swig_property(_micropolisengine.Micropolis_tool_y_get, _micropolisengine.Micropolis_tool_y_set)
    def putDownPark(*args): return _micropolisengine.Micropolis_putDownPark(*args)
    def putDownNetwork(*args): return _micropolisengine.Micropolis_putDownNetwork(*args)
    def checkBigZone(*args): return _micropolisengine.Micropolis_checkBigZone(*args)
    def check3x3(*args): return _micropolisengine.Micropolis_check3x3(*args)
    def check4x4(*args): return _micropolisengine.Micropolis_check4x4(*args)
    def check6x6(*args): return _micropolisengine.Micropolis_check6x6(*args)
    def getDensityStr(*args): return _micropolisengine.Micropolis_getDensityStr(*args)
    def doZoneStatus(*args): return _micropolisengine.Micropolis_doZoneStatus(*args)
    def doShowZoneStatus(*args): return _micropolisengine.Micropolis_doShowZoneStatus(*args)
    def didTool(*args): return _micropolisengine.Micropolis_didTool(*args)
    def queryTool(*args): return _micropolisengine.Micropolis_queryTool(*args)
    def bulldozerTool(*args): return _micropolisengine.Micropolis_bulldozerTool(*args)
    def roadTool(*args): return _micropolisengine.Micropolis_roadTool(*args)
    def railroadTool(*args): return _micropolisengine.Micropolis_railroadTool(*args)
    def wireTool(*args): return _micropolisengine.Micropolis_wireTool(*args)
    def parkTool(*args): return _micropolisengine.Micropolis_parkTool(*args)
    def residentialTool(*args): return _micropolisengine.Micropolis_residentialTool(*args)
    def commercialTool(*args): return _micropolisengine.Micropolis_commercialTool(*args)
    def industrialTool(*args): return _micropolisengine.Micropolis_industrialTool(*args)
    def policeStationTool(*args): return _micropolisengine.Micropolis_policeStationTool(*args)
    def fireStationTool(*args): return _micropolisengine.Micropolis_fireStationTool(*args)
    def stadiumTool(*args): return _micropolisengine.Micropolis_stadiumTool(*args)
    def coalPowerTool(*args): return _micropolisengine.Micropolis_coalPowerTool(*args)
    def nuclearPowerTool(*args): return _micropolisengine.Micropolis_nuclearPowerTool(*args)
    def seaportTool(*args): return _micropolisengine.Micropolis_seaportTool(*args)
    def airportTool(*args): return _micropolisengine.Micropolis_airportTool(*args)
    def networkTool(*args): return _micropolisengine.Micropolis_networkTool(*args)
    def doTool(*args): return _micropolisengine.Micropolis_doTool(*args)
    def toolDown(*args): return _micropolisengine.Micropolis_toolDown(*args)
    def toolUp(*args): return _micropolisengine.Micropolis_toolUp(*args)
    def toolDrag(*args): return _micropolisengine.Micropolis_toolDrag(*args)
    __swig_setmethods__["PosStackN"] = _micropolisengine.Micropolis_PosStackN_set
    __swig_getmethods__["PosStackN"] = _micropolisengine.Micropolis_PosStackN_get
    if _newclass:PosStackN = _swig_property(_micropolisengine.Micropolis_PosStackN_get, _micropolisengine.Micropolis_PosStackN_set)
    __swig_setmethods__["curMapXStack"] = _micropolisengine.Micropolis_curMapXStack_set
    __swig_getmethods__["curMapXStack"] = _micropolisengine.Micropolis_curMapXStack_get
    if _newclass:curMapXStack = _swig_property(_micropolisengine.Micropolis_curMapXStack_get, _micropolisengine.Micropolis_curMapXStack_set)
    __swig_setmethods__["curMapYStack"] = _micropolisengine.Micropolis_curMapYStack_set
    __swig_getmethods__["curMapYStack"] = _micropolisengine.Micropolis_curMapYStack_get
    if _newclass:curMapYStack = _swig_property(_micropolisengine.Micropolis_curMapYStack_get, _micropolisengine.Micropolis_curMapYStack_set)
    __swig_setmethods__["LDir"] = _micropolisengine.Micropolis_LDir_set
    __swig_getmethods__["LDir"] = _micropolisengine.Micropolis_LDir_get
    if _newclass:LDir = _swig_property(_micropolisengine.Micropolis_LDir_get, _micropolisengine.Micropolis_LDir_set)
    __swig_setmethods__["TrafMaxX"] = _micropolisengine.Micropolis_TrafMaxX_set
    __swig_getmethods__["TrafMaxX"] = _micropolisengine.Micropolis_TrafMaxX_get
    if _newclass:TrafMaxX = _swig_property(_micropolisengine.Micropolis_TrafMaxX_get, _micropolisengine.Micropolis_TrafMaxX_set)
    __swig_setmethods__["TrafMaxY"] = _micropolisengine.Micropolis_TrafMaxY_set
    __swig_getmethods__["TrafMaxY"] = _micropolisengine.Micropolis_TrafMaxY_get
    if _newclass:TrafMaxY = _swig_property(_micropolisengine.Micropolis_TrafMaxY_get, _micropolisengine.Micropolis_TrafMaxY_set)
    def MakeTraf(*args): return _micropolisengine.Micropolis_MakeTraf(*args)
    def SetTrafMem(*args): return _micropolisengine.Micropolis_SetTrafMem(*args)
    def PushPos(*args): return _micropolisengine.Micropolis_PushPos(*args)
    def PullPos(*args): return _micropolisengine.Micropolis_PullPos(*args)
    def FindPRoad(*args): return _micropolisengine.Micropolis_FindPRoad(*args)
    def FindPTele(*args): return _micropolisengine.Micropolis_FindPTele(*args)
    def TryDrive(*args): return _micropolisengine.Micropolis_TryDrive(*args)
    def tryGo(*args): return _micropolisengine.Micropolis_tryGo(*args)
    def GetFromMap(*args): return _micropolisengine.Micropolis_GetFromMap(*args)
    __swig_setmethods__["MustUpdateFunds"] = _micropolisengine.Micropolis_MustUpdateFunds_set
    __swig_getmethods__["MustUpdateFunds"] = _micropolisengine.Micropolis_MustUpdateFunds_get
    if _newclass:MustUpdateFunds = _swig_property(_micropolisengine.Micropolis_MustUpdateFunds_get, _micropolisengine.Micropolis_MustUpdateFunds_set)
    __swig_setmethods__["MustUpdateOptions"] = _micropolisengine.Micropolis_MustUpdateOptions_set
    __swig_getmethods__["MustUpdateOptions"] = _micropolisengine.Micropolis_MustUpdateOptions_get
    if _newclass:MustUpdateOptions = _swig_property(_micropolisengine.Micropolis_MustUpdateOptions_get, _micropolisengine.Micropolis_MustUpdateOptions_set)
    __swig_setmethods__["cityTimeLast"] = _micropolisengine.Micropolis_cityTimeLast_set
    __swig_getmethods__["cityTimeLast"] = _micropolisengine.Micropolis_cityTimeLast_get
    if _newclass:cityTimeLast = _swig_property(_micropolisengine.Micropolis_cityTimeLast_get, _micropolisengine.Micropolis_cityTimeLast_set)
    __swig_setmethods__["cityYearLast"] = _micropolisengine.Micropolis_cityYearLast_set
    __swig_getmethods__["cityYearLast"] = _micropolisengine.Micropolis_cityYearLast_get
    if _newclass:cityYearLast = _swig_property(_micropolisengine.Micropolis_cityYearLast_get, _micropolisengine.Micropolis_cityYearLast_set)
    __swig_setmethods__["cityMonthLast"] = _micropolisengine.Micropolis_cityMonthLast_set
    __swig_getmethods__["cityMonthLast"] = _micropolisengine.Micropolis_cityMonthLast_get
    if _newclass:cityMonthLast = _swig_property(_micropolisengine.Micropolis_cityMonthLast_get, _micropolisengine.Micropolis_cityMonthLast_set)
    __swig_setmethods__["LastFunds"] = _micropolisengine.Micropolis_LastFunds_set
    __swig_getmethods__["LastFunds"] = _micropolisengine.Micropolis_LastFunds_get
    if _newclass:LastFunds = _swig_property(_micropolisengine.Micropolis_LastFunds_get, _micropolisengine.Micropolis_LastFunds_set)
    __swig_setmethods__["LastR"] = _micropolisengine.Micropolis_LastR_set
    __swig_getmethods__["LastR"] = _micropolisengine.Micropolis_LastR_get
    if _newclass:LastR = _swig_property(_micropolisengine.Micropolis_LastR_get, _micropolisengine.Micropolis_LastR_set)
    __swig_setmethods__["LastC"] = _micropolisengine.Micropolis_LastC_set
    __swig_getmethods__["LastC"] = _micropolisengine.Micropolis_LastC_get
    if _newclass:LastC = _swig_property(_micropolisengine.Micropolis_LastC_get, _micropolisengine.Micropolis_LastC_set)
    __swig_setmethods__["LastI"] = _micropolisengine.Micropolis_LastI_set
    __swig_getmethods__["LastI"] = _micropolisengine.Micropolis_LastI_get
    if _newclass:LastI = _swig_property(_micropolisengine.Micropolis_LastI_get, _micropolisengine.Micropolis_LastI_set)
    def DoUpdateHeads(*args): return _micropolisengine.Micropolis_DoUpdateHeads(*args)
    def UpdateEditors(*args): return _micropolisengine.Micropolis_UpdateEditors(*args)
    def UpdateMaps(*args): return _micropolisengine.Micropolis_UpdateMaps(*args)
    def UpdateGraphs(*args): return _micropolisengine.Micropolis_UpdateGraphs(*args)
    def UpdateEvaluation(*args): return _micropolisengine.Micropolis_UpdateEvaluation(*args)
    def UpdateHeads(*args): return _micropolisengine.Micropolis_UpdateHeads(*args)
    def UpdateFunds(*args): return _micropolisengine.Micropolis_UpdateFunds(*args)
    def ReallyUpdateFunds(*args): return _micropolisengine.Micropolis_ReallyUpdateFunds(*args)
    def doTimeStuff(*args): return _micropolisengine.Micropolis_doTimeStuff(*args)
    def updateDate(*args): return _micropolisengine.Micropolis_updateDate(*args)
    def showValves(*args): return _micropolisengine.Micropolis_showValves(*args)
    def drawValve(*args): return _micropolisengine.Micropolis_drawValve(*args)
    def SetDemand(*args): return _micropolisengine.Micropolis_SetDemand(*args)
    def updateOptions(*args): return _micropolisengine.Micropolis_updateOptions(*args)
    def UpdateOptionsMenu(*args): return _micropolisengine.Micropolis_UpdateOptionsMenu(*args)
    def UpdateUserInterface(*args): return _micropolisengine.Micropolis_UpdateUserInterface(*args)
    def makeDollarDecimalStr(*args): return _micropolisengine.Micropolis_makeDollarDecimalStr(*args)
    def Pause(*args): return _micropolisengine.Micropolis_Pause(*args)
    def Resume(*args): return _micropolisengine.Micropolis_Resume(*args)
    def setSpeed(*args): return _micropolisengine.Micropolis_setSpeed(*args)
    def setSkips(*args): return _micropolisengine.Micropolis_setSkips(*args)
    def SetGameLevelFunds(*args): return _micropolisengine.Micropolis_SetGameLevelFunds(*args)
    def SetGameLevel(*args): return _micropolisengine.Micropolis_SetGameLevel(*args)
    def UpdateGameLevel(*args): return _micropolisengine.Micropolis_UpdateGameLevel(*args)
    def setCityName(*args): return _micropolisengine.Micropolis_setCityName(*args)
    def setCleanCityName(*args): return _micropolisengine.Micropolis_setCleanCityName(*args)
    def SetYear(*args): return _micropolisengine.Micropolis_SetYear(*args)
    def CurrentYear(*args): return _micropolisengine.Micropolis_CurrentYear(*args)
    def DoNewGame(*args): return _micropolisengine.Micropolis_DoNewGame(*args)
    def DoZone(*args): return _micropolisengine.Micropolis_DoZone(*args)
    def DoHospChur(*args): return _micropolisengine.Micropolis_DoHospChur(*args)
    def SetSmoke(*args): return _micropolisengine.Micropolis_SetSmoke(*args)
    def DoIndustrial(*args): return _micropolisengine.Micropolis_DoIndustrial(*args)
    def DoCommercial(*args): return _micropolisengine.Micropolis_DoCommercial(*args)
    def DoResidential(*args): return _micropolisengine.Micropolis_DoResidential(*args)
    def MakeHosp(*args): return _micropolisengine.Micropolis_MakeHosp(*args)
    def GetCRVal(*args): return _micropolisengine.Micropolis_GetCRVal(*args)
    def DoResIn(*args): return _micropolisengine.Micropolis_DoResIn(*args)
    def DoComIn(*args): return _micropolisengine.Micropolis_DoComIn(*args)
    def DoIndIn(*args): return _micropolisengine.Micropolis_DoIndIn(*args)
    def IncROG(*args): return _micropolisengine.Micropolis_IncROG(*args)
    def DoResOut(*args): return _micropolisengine.Micropolis_DoResOut(*args)
    def DoComOut(*args): return _micropolisengine.Micropolis_DoComOut(*args)
    def DoIndOut(*args): return _micropolisengine.Micropolis_DoIndOut(*args)
    def getResZonePop(*args): return _micropolisengine.Micropolis_getResZonePop(*args)
    def getComZonePop(*args): return _micropolisengine.Micropolis_getComZonePop(*args)
    def getIndZonePop(*args): return _micropolisengine.Micropolis_getIndZonePop(*args)
    def BuildHouse(*args): return _micropolisengine.Micropolis_BuildHouse(*args)
    def ResPlop(*args): return _micropolisengine.Micropolis_ResPlop(*args)
    def ComPlop(*args): return _micropolisengine.Micropolis_ComPlop(*args)
    def IndPlop(*args): return _micropolisengine.Micropolis_IndPlop(*args)
    def EvalLot(*args): return _micropolisengine.Micropolis_EvalLot(*args)
    def ZonePlop(*args): return _micropolisengine.Micropolis_ZonePlop(*args)
    def EvalRes(*args): return _micropolisengine.Micropolis_EvalRes(*args)
    def EvalCom(*args): return _micropolisengine.Micropolis_EvalCom(*args)
    def EvalInd(*args): return _micropolisengine.Micropolis_EvalInd(*args)
    def DoFreePop(*args): return _micropolisengine.Micropolis_DoFreePop(*args)
    def SetZPower(*args): return _micropolisengine.Micropolis_SetZPower(*args)
Micropolis_swigregister = _micropolisengine.Micropolis_swigregister
Micropolis_swigregister(Micropolis)



