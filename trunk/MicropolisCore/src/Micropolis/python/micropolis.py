# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.33
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _micropolis
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


GetPythonCallbackHook = _micropolis.GetPythonCallbackHook
GetPythonCallbackData = _micropolis.GetPythonCallbackData
MICROPOLIS_VERSION = _micropolis.MICROPOLIS_VERSION
IS_INTEL = _micropolis.IS_INTEL
TRUE = _micropolis.TRUE
FALSE = _micropolis.FALSE
SimWidth = _micropolis.SimWidth
SimHeight = _micropolis.SimHeight
WORLD_X = _micropolis.WORLD_X
WORLD_Y = _micropolis.WORLD_Y
HWLDX = _micropolis.HWLDX
HWLDY = _micropolis.HWLDY
QWX = _micropolis.QWX
QWY = _micropolis.QWY
SmX = _micropolis.SmX
SmY = _micropolis.SmY
EDITOR_W = _micropolis.EDITOR_W
EDITOR_H = _micropolis.EDITOR_H
MAP_W = _micropolis.MAP_W
MAP_H = _micropolis.MAP_H
NIL = _micropolis.NIL
HORIZ = _micropolis.HORIZ
VERT = _micropolis.VERT
PROBNUM = _micropolis.PROBNUM
HISTLEN = _micropolis.HISTLEN
MISCHISTLEN = _micropolis.MISCHISTLEN
HISTORY_COUNT = _micropolis.HISTORY_COUNT
HISTORY_TYPE_RES = _micropolis.HISTORY_TYPE_RES
HISTORY_TYPE_COM = _micropolis.HISTORY_TYPE_COM
HISTORY_TYPE_IND = _micropolis.HISTORY_TYPE_IND
HISTORY_TYPE_MONEY = _micropolis.HISTORY_TYPE_MONEY
HISTORY_TYPE_CRIME = _micropolis.HISTORY_TYPE_CRIME
HISTORY_TYPE_POLLUTION = _micropolis.HISTORY_TYPE_POLLUTION
HISTORY_TYPE_COUNT = _micropolis.HISTORY_TYPE_COUNT
HISTORY_SCALE_SHORT = _micropolis.HISTORY_SCALE_SHORT
HISTORY_SCALE_LONG = _micropolis.HISTORY_SCALE_LONG
HISTORY_SCALE_COUNT = _micropolis.HISTORY_SCALE_COUNT
POWERMAPROW = _micropolis.POWERMAPROW
POWERMAPLEN = _micropolis.POWERMAPLEN
PWRMAPSIZE = _micropolis.PWRMAPSIZE
PWRSTKSIZE = _micropolis.PWRSTKSIZE
POINT_BATCH = _micropolis.POINT_BATCH
ALMAP = _micropolis.ALMAP
REMAP = _micropolis.REMAP
COMAP = _micropolis.COMAP
INMAP = _micropolis.INMAP
PRMAP = _micropolis.PRMAP
RDMAP = _micropolis.RDMAP
PDMAP = _micropolis.PDMAP
RGMAP = _micropolis.RGMAP
TDMAP = _micropolis.TDMAP
PLMAP = _micropolis.PLMAP
CRMAP = _micropolis.CRMAP
LVMAP = _micropolis.LVMAP
FIMAP = _micropolis.FIMAP
POMAP = _micropolis.POMAP
DYMAP = _micropolis.DYMAP
NMAPS = _micropolis.NMAPS
VALVERATE = _micropolis.VALVERATE
CENSUSRATE = _micropolis.CENSUSRATE
TAXFREQ = _micropolis.TAXFREQ
COLOR_WHITE = _micropolis.COLOR_WHITE
COLOR_YELLOW = _micropolis.COLOR_YELLOW
COLOR_ORANGE = _micropolis.COLOR_ORANGE
COLOR_RED = _micropolis.COLOR_RED
COLOR_DARKRED = _micropolis.COLOR_DARKRED
COLOR_DARKBLUE = _micropolis.COLOR_DARKBLUE
COLOR_LIGHTBLUE = _micropolis.COLOR_LIGHTBLUE
COLOR_BROWN = _micropolis.COLOR_BROWN
COLOR_LIGHTGREEN = _micropolis.COLOR_LIGHTGREEN
COLOR_DARKGREEN = _micropolis.COLOR_DARKGREEN
COLOR_OLIVE = _micropolis.COLOR_OLIVE
COLOR_LIGHTBROWN = _micropolis.COLOR_LIGHTBROWN
COLOR_LIGHTGRAY = _micropolis.COLOR_LIGHTGRAY
COLOR_MEDIUMGRAY = _micropolis.COLOR_MEDIUMGRAY
COLOR_DARKGRAY = _micropolis.COLOR_DARKGRAY
COLOR_BLACK = _micropolis.COLOR_BLACK
PWRBIT = _micropolis.PWRBIT
CONDBIT = _micropolis.CONDBIT
BURNBIT = _micropolis.BURNBIT
BULLBIT = _micropolis.BULLBIT
ANIMBIT = _micropolis.ANIMBIT
ZONEBIT = _micropolis.ZONEBIT
ALLBITS = _micropolis.ALLBITS
LOMASK = _micropolis.LOMASK
BLBNBIT = _micropolis.BLBNBIT
BLBNCNBIT = _micropolis.BLBNCNBIT
BNCNBIT = _micropolis.BNCNBIT
TRA = _micropolis.TRA
COP = _micropolis.COP
AIR = _micropolis.AIR
SHI = _micropolis.SHI
GOD = _micropolis.GOD
TOR = _micropolis.TOR
EXP = _micropolis.EXP
BUS = _micropolis.BUS
OBJN = _micropolis.OBJN
RES_HIST = _micropolis.RES_HIST
COM_HIST = _micropolis.COM_HIST
IND_HIST = _micropolis.IND_HIST
MONEY_HIST = _micropolis.MONEY_HIST
CRIME_HIST = _micropolis.CRIME_HIST
POLLUTION_HIST = _micropolis.POLLUTION_HIST
HISTORIES = _micropolis.HISTORIES
ALL_HISTORIES = _micropolis.ALL_HISTORIES
DIRT = _micropolis.DIRT
RIVER = _micropolis.RIVER
WATER_LOW = _micropolis.WATER_LOW
REDGE = _micropolis.REDGE
CHANNEL = _micropolis.CHANNEL
FIRSTRIVEDGE = _micropolis.FIRSTRIVEDGE
LASTRIVEDGE = _micropolis.LASTRIVEDGE
WATER_HIGH = _micropolis.WATER_HIGH
TREEBASE = _micropolis.TREEBASE
WOODS_LOW = _micropolis.WOODS_LOW
LASTTREE = _micropolis.LASTTREE
WOODS = _micropolis.WOODS
UNUSED_TRASH1 = _micropolis.UNUSED_TRASH1
UNUSED_TRASH2 = _micropolis.UNUSED_TRASH2
WOODS_HIGH = _micropolis.WOODS_HIGH
WOODS2 = _micropolis.WOODS2
WOODS3 = _micropolis.WOODS3
WOODS4 = _micropolis.WOODS4
WOODS5 = _micropolis.WOODS5
RUBBLE = _micropolis.RUBBLE
LASTRUBBLE = _micropolis.LASTRUBBLE
FLOOD = _micropolis.FLOOD
LASTFLOOD = _micropolis.LASTFLOOD
RADTILE = _micropolis.RADTILE
UNUSED_TRASH3 = _micropolis.UNUSED_TRASH3
UNUSED_TRASH4 = _micropolis.UNUSED_TRASH4
UNUSED_TRASH5 = _micropolis.UNUSED_TRASH5
FIRE = _micropolis.FIRE
FIREBASE = _micropolis.FIREBASE
LASTFIRE = _micropolis.LASTFIRE
ROADBASE = _micropolis.ROADBASE
HBRIDGE = _micropolis.HBRIDGE
VBRIDGE = _micropolis.VBRIDGE
ROADS = _micropolis.ROADS
ROADS2 = _micropolis.ROADS2
ROADS3 = _micropolis.ROADS3
ROADS4 = _micropolis.ROADS4
ROADS5 = _micropolis.ROADS5
ROADS6 = _micropolis.ROADS6
ROADS7 = _micropolis.ROADS7
ROADS8 = _micropolis.ROADS8
ROADS9 = _micropolis.ROADS9
ROADS10 = _micropolis.ROADS10
INTERSECTION = _micropolis.INTERSECTION
HROADPOWER = _micropolis.HROADPOWER
VROADPOWER = _micropolis.VROADPOWER
BRWH = _micropolis.BRWH
LTRFBASE = _micropolis.LTRFBASE
BRWV = _micropolis.BRWV
BRWXXX1 = _micropolis.BRWXXX1
BRWXXX2 = _micropolis.BRWXXX2
BRWXXX3 = _micropolis.BRWXXX3
HTRFBASE = _micropolis.HTRFBASE
BRWXXX4 = _micropolis.BRWXXX4
BRWXXX5 = _micropolis.BRWXXX5
BRWXXX6 = _micropolis.BRWXXX6
LASTROAD = _micropolis.LASTROAD
BRWXXX7 = _micropolis.BRWXXX7
POWERBASE = _micropolis.POWERBASE
HPOWER = _micropolis.HPOWER
VPOWER = _micropolis.VPOWER
LHPOWER = _micropolis.LHPOWER
LVPOWER = _micropolis.LVPOWER
LVPOWER2 = _micropolis.LVPOWER2
LVPOWER3 = _micropolis.LVPOWER3
LVPOWER4 = _micropolis.LVPOWER4
LVPOWER5 = _micropolis.LVPOWER5
LVPOWER6 = _micropolis.LVPOWER6
LVPOWER7 = _micropolis.LVPOWER7
LVPOWER8 = _micropolis.LVPOWER8
LVPOWER9 = _micropolis.LVPOWER9
LVPOWER10 = _micropolis.LVPOWER10
RAILHPOWERV = _micropolis.RAILHPOWERV
RAILVPOWERH = _micropolis.RAILVPOWERH
LASTPOWER = _micropolis.LASTPOWER
UNUSED_TRASH6 = _micropolis.UNUSED_TRASH6
RAILBASE = _micropolis.RAILBASE
HRAIL = _micropolis.HRAIL
VRAIL = _micropolis.VRAIL
LHRAIL = _micropolis.LHRAIL
LVRAIL = _micropolis.LVRAIL
LVRAIL2 = _micropolis.LVRAIL2
LVRAIL3 = _micropolis.LVRAIL3
LVRAIL4 = _micropolis.LVRAIL4
LVRAIL5 = _micropolis.LVRAIL5
LVRAIL6 = _micropolis.LVRAIL6
LVRAIL7 = _micropolis.LVRAIL7
LVRAIL8 = _micropolis.LVRAIL8
LVRAIL9 = _micropolis.LVRAIL9
LVRAIL10 = _micropolis.LVRAIL10
HRAILROAD = _micropolis.HRAILROAD
VRAILROAD = _micropolis.VRAILROAD
LASTRAIL = _micropolis.LASTRAIL
ROADVPOWERH = _micropolis.ROADVPOWERH
RESBASE = _micropolis.RESBASE
FREEZ = _micropolis.FREEZ
HOUSE = _micropolis.HOUSE
LHTHR = _micropolis.LHTHR
HHTHR = _micropolis.HHTHR
RZB = _micropolis.RZB
HOSPITAL = _micropolis.HOSPITAL
CHURCH = _micropolis.CHURCH
COMBASE = _micropolis.COMBASE
COMCLR = _micropolis.COMCLR
CZB = _micropolis.CZB
COMLAST = _micropolis.COMLAST
INDBASE = _micropolis.INDBASE
INDCLR = _micropolis.INDCLR
LASTIND = _micropolis.LASTIND
IND1 = _micropolis.IND1
IZB = _micropolis.IZB
IND2 = _micropolis.IND2
IND3 = _micropolis.IND3
IND4 = _micropolis.IND4
IND5 = _micropolis.IND5
IND6 = _micropolis.IND6
IND7 = _micropolis.IND7
IND8 = _micropolis.IND8
IND9 = _micropolis.IND9
PORTBASE = _micropolis.PORTBASE
PORT = _micropolis.PORT
LASTPORT = _micropolis.LASTPORT
AIRPORTBASE = _micropolis.AIRPORTBASE
RADAR = _micropolis.RADAR
AIRPORT = _micropolis.AIRPORT
COALBASE = _micropolis.COALBASE
POWERPLANT = _micropolis.POWERPLANT
LASTPOWERPLANT = _micropolis.LASTPOWERPLANT
FIRESTBASE = _micropolis.FIRESTBASE
FIRESTATION = _micropolis.FIRESTATION
POLICESTBASE = _micropolis.POLICESTBASE
POLICESTATION = _micropolis.POLICESTATION
STADIUMBASE = _micropolis.STADIUMBASE
STADIUM = _micropolis.STADIUM
FULLSTADIUM = _micropolis.FULLSTADIUM
NUCLEARBASE = _micropolis.NUCLEARBASE
NUCLEAR = _micropolis.NUCLEAR
LASTZONE = _micropolis.LASTZONE
LIGHTNINGBOLT = _micropolis.LIGHTNINGBOLT
HBRDG0 = _micropolis.HBRDG0
HBRDG1 = _micropolis.HBRDG1
HBRDG2 = _micropolis.HBRDG2
HBRDG3 = _micropolis.HBRDG3
HBRDG_END = _micropolis.HBRDG_END
RADAR0 = _micropolis.RADAR0
RADAR1 = _micropolis.RADAR1
RADAR2 = _micropolis.RADAR2
RADAR3 = _micropolis.RADAR3
RADAR4 = _micropolis.RADAR4
RADAR5 = _micropolis.RADAR5
RADAR6 = _micropolis.RADAR6
RADAR7 = _micropolis.RADAR7
FOUNTAIN = _micropolis.FOUNTAIN
INDBASE2 = _micropolis.INDBASE2
TELEBASE = _micropolis.TELEBASE
TELELAST = _micropolis.TELELAST
SMOKEBASE = _micropolis.SMOKEBASE
TINYEXP = _micropolis.TINYEXP
SOMETINYEXP = _micropolis.SOMETINYEXP
LASTTINYEXP = _micropolis.LASTTINYEXP
TINYEXPLAST = _micropolis.TINYEXPLAST
COALSMOKE1 = _micropolis.COALSMOKE1
COALSMOKE2 = _micropolis.COALSMOKE2
COALSMOKE3 = _micropolis.COALSMOKE3
COALSMOKE4 = _micropolis.COALSMOKE4
FOOTBALLGAME1 = _micropolis.FOOTBALLGAME1
FOOTBALLGAME2 = _micropolis.FOOTBALLGAME2
VBRDG0 = _micropolis.VBRDG0
VBRDG1 = _micropolis.VBRDG1
VBRDG2 = _micropolis.VBRDG2
VBRDG3 = _micropolis.VBRDG3
TILE_COUNT = _micropolis.TILE_COUNT
residentialState = _micropolis.residentialState
commercialState = _micropolis.commercialState
industrialState = _micropolis.industrialState
fireState = _micropolis.fireState
queryState = _micropolis.queryState
policeState = _micropolis.policeState
wireState = _micropolis.wireState
dozeState = _micropolis.dozeState
rrState = _micropolis.rrState
roadState = _micropolis.roadState
chalkState = _micropolis.chalkState
eraserState = _micropolis.eraserState
stadiumState = _micropolis.stadiumState
parkState = _micropolis.parkState
seaportState = _micropolis.seaportState
powerState = _micropolis.powerState
nuclearState = _micropolis.nuclearState
airportState = _micropolis.airportState
networkState = _micropolis.networkState
firstState = _micropolis.firstState
lastState = _micropolis.lastState
STATE_CMD = _micropolis.STATE_CMD
STATE_TILES = _micropolis.STATE_TILES
STATE_OVERLAYS = _micropolis.STATE_OVERLAYS
STATE_GRAPHS = _micropolis.STATE_GRAPHS
ISLAND_RADIUS = _micropolis.ISLAND_RADIUS
MAX_TRAFFIC_DISTANCE = _micropolis.MAX_TRAFFIC_DISTANCE
class Resource(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Resource, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Resource, name)
    __repr__ = _swig_repr
    __swig_setmethods__["buf"] = _micropolis.Resource_buf_set
    __swig_getmethods__["buf"] = _micropolis.Resource_buf_get
    if _newclass:buf = _swig_property(_micropolis.Resource_buf_get, _micropolis.Resource_buf_set)
    __swig_setmethods__["size"] = _micropolis.Resource_size_set
    __swig_getmethods__["size"] = _micropolis.Resource_size_get
    if _newclass:size = _swig_property(_micropolis.Resource_size_get, _micropolis.Resource_size_set)
    __swig_setmethods__["name"] = _micropolis.Resource_name_set
    __swig_getmethods__["name"] = _micropolis.Resource_name_get
    if _newclass:name = _swig_property(_micropolis.Resource_name_get, _micropolis.Resource_name_set)
    __swig_setmethods__["id"] = _micropolis.Resource_id_set
    __swig_getmethods__["id"] = _micropolis.Resource_id_get
    if _newclass:id = _swig_property(_micropolis.Resource_id_get, _micropolis.Resource_id_set)
    __swig_setmethods__["next"] = _micropolis.Resource_next_set
    __swig_getmethods__["next"] = _micropolis.Resource_next_get
    if _newclass:next = _swig_property(_micropolis.Resource_next_get, _micropolis.Resource_next_set)
    def __init__(self, *args): 
        this = _micropolis.new_Resource(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _micropolis.delete_Resource
    __del__ = lambda self : None;
Resource_swigregister = _micropolis.Resource_swigregister
Resource_swigregister(Resource)

class StringTable(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StringTable, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StringTable, name)
    __repr__ = _swig_repr
    __swig_setmethods__["id"] = _micropolis.StringTable_id_set
    __swig_getmethods__["id"] = _micropolis.StringTable_id_get
    if _newclass:id = _swig_property(_micropolis.StringTable_id_get, _micropolis.StringTable_id_set)
    __swig_setmethods__["lines"] = _micropolis.StringTable_lines_set
    __swig_getmethods__["lines"] = _micropolis.StringTable_lines_get
    if _newclass:lines = _swig_property(_micropolis.StringTable_lines_get, _micropolis.StringTable_lines_set)
    __swig_setmethods__["strings"] = _micropolis.StringTable_strings_set
    __swig_getmethods__["strings"] = _micropolis.StringTable_strings_get
    if _newclass:strings = _swig_property(_micropolis.StringTable_strings_get, _micropolis.StringTable_strings_set)
    __swig_setmethods__["next"] = _micropolis.StringTable_next_set
    __swig_getmethods__["next"] = _micropolis.StringTable_next_get
    if _newclass:next = _swig_property(_micropolis.StringTable_next_get, _micropolis.StringTable_next_set)
    def __init__(self, *args): 
        this = _micropolis.new_StringTable(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _micropolis.delete_StringTable
    __del__ = lambda self : None;
StringTable_swigregister = _micropolis.StringTable_swigregister
StringTable_swigregister(StringTable)

class SimSprite(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SimSprite, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SimSprite, name)
    __repr__ = _swig_repr
    __swig_setmethods__["next"] = _micropolis.SimSprite_next_set
    __swig_getmethods__["next"] = _micropolis.SimSprite_next_get
    if _newclass:next = _swig_property(_micropolis.SimSprite_next_get, _micropolis.SimSprite_next_set)
    __swig_setmethods__["name"] = _micropolis.SimSprite_name_set
    __swig_getmethods__["name"] = _micropolis.SimSprite_name_get
    if _newclass:name = _swig_property(_micropolis.SimSprite_name_get, _micropolis.SimSprite_name_set)
    __swig_setmethods__["type"] = _micropolis.SimSprite_type_set
    __swig_getmethods__["type"] = _micropolis.SimSprite_type_get
    if _newclass:type = _swig_property(_micropolis.SimSprite_type_get, _micropolis.SimSprite_type_set)
    __swig_setmethods__["frame"] = _micropolis.SimSprite_frame_set
    __swig_getmethods__["frame"] = _micropolis.SimSprite_frame_get
    if _newclass:frame = _swig_property(_micropolis.SimSprite_frame_get, _micropolis.SimSprite_frame_set)
    __swig_setmethods__["x"] = _micropolis.SimSprite_x_set
    __swig_getmethods__["x"] = _micropolis.SimSprite_x_get
    if _newclass:x = _swig_property(_micropolis.SimSprite_x_get, _micropolis.SimSprite_x_set)
    __swig_setmethods__["y"] = _micropolis.SimSprite_y_set
    __swig_getmethods__["y"] = _micropolis.SimSprite_y_get
    if _newclass:y = _swig_property(_micropolis.SimSprite_y_get, _micropolis.SimSprite_y_set)
    __swig_setmethods__["width"] = _micropolis.SimSprite_width_set
    __swig_getmethods__["width"] = _micropolis.SimSprite_width_get
    if _newclass:width = _swig_property(_micropolis.SimSprite_width_get, _micropolis.SimSprite_width_set)
    __swig_setmethods__["height"] = _micropolis.SimSprite_height_set
    __swig_getmethods__["height"] = _micropolis.SimSprite_height_get
    if _newclass:height = _swig_property(_micropolis.SimSprite_height_get, _micropolis.SimSprite_height_set)
    __swig_setmethods__["x_offset"] = _micropolis.SimSprite_x_offset_set
    __swig_getmethods__["x_offset"] = _micropolis.SimSprite_x_offset_get
    if _newclass:x_offset = _swig_property(_micropolis.SimSprite_x_offset_get, _micropolis.SimSprite_x_offset_set)
    __swig_setmethods__["y_offset"] = _micropolis.SimSprite_y_offset_set
    __swig_getmethods__["y_offset"] = _micropolis.SimSprite_y_offset_get
    if _newclass:y_offset = _swig_property(_micropolis.SimSprite_y_offset_get, _micropolis.SimSprite_y_offset_set)
    __swig_setmethods__["x_hot"] = _micropolis.SimSprite_x_hot_set
    __swig_getmethods__["x_hot"] = _micropolis.SimSprite_x_hot_get
    if _newclass:x_hot = _swig_property(_micropolis.SimSprite_x_hot_get, _micropolis.SimSprite_x_hot_set)
    __swig_setmethods__["y_hot"] = _micropolis.SimSprite_y_hot_set
    __swig_getmethods__["y_hot"] = _micropolis.SimSprite_y_hot_get
    if _newclass:y_hot = _swig_property(_micropolis.SimSprite_y_hot_get, _micropolis.SimSprite_y_hot_set)
    __swig_setmethods__["orig_x"] = _micropolis.SimSprite_orig_x_set
    __swig_getmethods__["orig_x"] = _micropolis.SimSprite_orig_x_get
    if _newclass:orig_x = _swig_property(_micropolis.SimSprite_orig_x_get, _micropolis.SimSprite_orig_x_set)
    __swig_setmethods__["orig_y"] = _micropolis.SimSprite_orig_y_set
    __swig_getmethods__["orig_y"] = _micropolis.SimSprite_orig_y_get
    if _newclass:orig_y = _swig_property(_micropolis.SimSprite_orig_y_get, _micropolis.SimSprite_orig_y_set)
    __swig_setmethods__["dest_x"] = _micropolis.SimSprite_dest_x_set
    __swig_getmethods__["dest_x"] = _micropolis.SimSprite_dest_x_get
    if _newclass:dest_x = _swig_property(_micropolis.SimSprite_dest_x_get, _micropolis.SimSprite_dest_x_set)
    __swig_setmethods__["dest_y"] = _micropolis.SimSprite_dest_y_set
    __swig_getmethods__["dest_y"] = _micropolis.SimSprite_dest_y_get
    if _newclass:dest_y = _swig_property(_micropolis.SimSprite_dest_y_get, _micropolis.SimSprite_dest_y_set)
    __swig_setmethods__["count"] = _micropolis.SimSprite_count_set
    __swig_getmethods__["count"] = _micropolis.SimSprite_count_get
    if _newclass:count = _swig_property(_micropolis.SimSprite_count_get, _micropolis.SimSprite_count_set)
    __swig_setmethods__["sound_count"] = _micropolis.SimSprite_sound_count_set
    __swig_getmethods__["sound_count"] = _micropolis.SimSprite_sound_count_get
    if _newclass:sound_count = _swig_property(_micropolis.SimSprite_sound_count_get, _micropolis.SimSprite_sound_count_set)
    __swig_setmethods__["dir"] = _micropolis.SimSprite_dir_set
    __swig_getmethods__["dir"] = _micropolis.SimSprite_dir_get
    if _newclass:dir = _swig_property(_micropolis.SimSprite_dir_get, _micropolis.SimSprite_dir_set)
    __swig_setmethods__["new_dir"] = _micropolis.SimSprite_new_dir_set
    __swig_getmethods__["new_dir"] = _micropolis.SimSprite_new_dir_get
    if _newclass:new_dir = _swig_property(_micropolis.SimSprite_new_dir_get, _micropolis.SimSprite_new_dir_set)
    __swig_setmethods__["step"] = _micropolis.SimSprite_step_set
    __swig_getmethods__["step"] = _micropolis.SimSprite_step_get
    if _newclass:step = _swig_property(_micropolis.SimSprite_step_get, _micropolis.SimSprite_step_set)
    __swig_setmethods__["flag"] = _micropolis.SimSprite_flag_set
    __swig_getmethods__["flag"] = _micropolis.SimSprite_flag_get
    if _newclass:flag = _swig_property(_micropolis.SimSprite_flag_get, _micropolis.SimSprite_flag_set)
    __swig_setmethods__["control"] = _micropolis.SimSprite_control_set
    __swig_getmethods__["control"] = _micropolis.SimSprite_control_get
    if _newclass:control = _swig_property(_micropolis.SimSprite_control_get, _micropolis.SimSprite_control_set)
    __swig_setmethods__["turn"] = _micropolis.SimSprite_turn_set
    __swig_getmethods__["turn"] = _micropolis.SimSprite_turn_get
    if _newclass:turn = _swig_property(_micropolis.SimSprite_turn_get, _micropolis.SimSprite_turn_set)
    __swig_setmethods__["accel"] = _micropolis.SimSprite_accel_set
    __swig_getmethods__["accel"] = _micropolis.SimSprite_accel_get
    if _newclass:accel = _swig_property(_micropolis.SimSprite_accel_get, _micropolis.SimSprite_accel_set)
    __swig_setmethods__["speed"] = _micropolis.SimSprite_speed_set
    __swig_getmethods__["speed"] = _micropolis.SimSprite_speed_get
    if _newclass:speed = _swig_property(_micropolis.SimSprite_speed_get, _micropolis.SimSprite_speed_set)
    def __init__(self, *args): 
        this = _micropolis.new_SimSprite(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _micropolis.delete_SimSprite
    __del__ = lambda self : None;
SimSprite_swigregister = _micropolis.SimSprite_swigregister
SimSprite_swigregister(SimSprite)

class InkPoint(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, InkPoint, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, InkPoint, name)
    __repr__ = _swig_repr
    __swig_setmethods__["x"] = _micropolis.InkPoint_x_set
    __swig_getmethods__["x"] = _micropolis.InkPoint_x_get
    if _newclass:x = _swig_property(_micropolis.InkPoint_x_get, _micropolis.InkPoint_x_set)
    __swig_setmethods__["y"] = _micropolis.InkPoint_y_set
    __swig_getmethods__["y"] = _micropolis.InkPoint_y_get
    if _newclass:y = _swig_property(_micropolis.InkPoint_y_get, _micropolis.InkPoint_y_set)
    def __init__(self, *args): 
        this = _micropolis.new_InkPoint(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _micropolis.delete_InkPoint
    __del__ = lambda self : None;
InkPoint_swigregister = _micropolis.InkPoint_swigregister
InkPoint_swigregister(InkPoint)

class Ink(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Ink, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Ink, name)
    __repr__ = _swig_repr
    __swig_setmethods__["next"] = _micropolis.Ink_next_set
    __swig_getmethods__["next"] = _micropolis.Ink_next_get
    if _newclass:next = _swig_property(_micropolis.Ink_next_get, _micropolis.Ink_next_set)
    __swig_setmethods__["x"] = _micropolis.Ink_x_set
    __swig_getmethods__["x"] = _micropolis.Ink_x_get
    if _newclass:x = _swig_property(_micropolis.Ink_x_get, _micropolis.Ink_x_set)
    __swig_setmethods__["y"] = _micropolis.Ink_y_set
    __swig_getmethods__["y"] = _micropolis.Ink_y_get
    if _newclass:y = _swig_property(_micropolis.Ink_y_get, _micropolis.Ink_y_set)
    __swig_setmethods__["color"] = _micropolis.Ink_color_set
    __swig_getmethods__["color"] = _micropolis.Ink_color_get
    if _newclass:color = _swig_property(_micropolis.Ink_color_get, _micropolis.Ink_color_set)
    __swig_setmethods__["length"] = _micropolis.Ink_length_set
    __swig_getmethods__["length"] = _micropolis.Ink_length_get
    if _newclass:length = _swig_property(_micropolis.Ink_length_get, _micropolis.Ink_length_set)
    __swig_setmethods__["maxlength"] = _micropolis.Ink_maxlength_set
    __swig_getmethods__["maxlength"] = _micropolis.Ink_maxlength_get
    if _newclass:maxlength = _swig_property(_micropolis.Ink_maxlength_get, _micropolis.Ink_maxlength_set)
    __swig_setmethods__["points"] = _micropolis.Ink_points_set
    __swig_getmethods__["points"] = _micropolis.Ink_points_get
    if _newclass:points = _swig_property(_micropolis.Ink_points_get, _micropolis.Ink_points_set)
    __swig_setmethods__["left"] = _micropolis.Ink_left_set
    __swig_getmethods__["left"] = _micropolis.Ink_left_get
    if _newclass:left = _swig_property(_micropolis.Ink_left_get, _micropolis.Ink_left_set)
    __swig_setmethods__["top"] = _micropolis.Ink_top_set
    __swig_getmethods__["top"] = _micropolis.Ink_top_get
    if _newclass:top = _swig_property(_micropolis.Ink_top_get, _micropolis.Ink_top_set)
    __swig_setmethods__["right"] = _micropolis.Ink_right_set
    __swig_getmethods__["right"] = _micropolis.Ink_right_get
    if _newclass:right = _swig_property(_micropolis.Ink_right_get, _micropolis.Ink_right_set)
    __swig_setmethods__["bottom"] = _micropolis.Ink_bottom_set
    __swig_getmethods__["bottom"] = _micropolis.Ink_bottom_get
    if _newclass:bottom = _swig_property(_micropolis.Ink_bottom_get, _micropolis.Ink_bottom_set)
    __swig_setmethods__["last_x"] = _micropolis.Ink_last_x_set
    __swig_getmethods__["last_x"] = _micropolis.Ink_last_x_get
    if _newclass:last_x = _swig_property(_micropolis.Ink_last_x_get, _micropolis.Ink_last_x_set)
    __swig_setmethods__["last_y"] = _micropolis.Ink_last_y_set
    __swig_getmethods__["last_y"] = _micropolis.Ink_last_y_get
    if _newclass:last_y = _swig_property(_micropolis.Ink_last_y_get, _micropolis.Ink_last_y_set)
    def __init__(self, *args): 
        this = _micropolis.new_Ink(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _micropolis.delete_Ink
    __del__ = lambda self : None;
Ink_swigregister = _micropolis.Ink_swigregister
Ink_swigregister(Ink)

class Micropolis(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Micropolis, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Micropolis, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _micropolis.new_Micropolis(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _micropolis.delete_Micropolis
    __del__ = lambda self : None;
    def init(*args): return _micropolis.Micropolis_init(*args)
    def destroy(*args): return _micropolis.Micropolis_destroy(*args)
    __swig_setmethods__["SMapX"] = _micropolis.Micropolis_SMapX_set
    __swig_getmethods__["SMapX"] = _micropolis.Micropolis_SMapX_get
    if _newclass:SMapX = _swig_property(_micropolis.Micropolis_SMapX_get, _micropolis.Micropolis_SMapX_set)
    __swig_setmethods__["SMapY"] = _micropolis.Micropolis_SMapY_set
    __swig_getmethods__["SMapY"] = _micropolis.Micropolis_SMapY_get
    if _newclass:SMapY = _swig_property(_micropolis.Micropolis_SMapY_get, _micropolis.Micropolis_SMapY_set)
    __swig_setmethods__["CChr"] = _micropolis.Micropolis_CChr_set
    __swig_getmethods__["CChr"] = _micropolis.Micropolis_CChr_get
    if _newclass:CChr = _swig_property(_micropolis.Micropolis_CChr_get, _micropolis.Micropolis_CChr_set)
    __swig_setmethods__["CChr9"] = _micropolis.Micropolis_CChr9_set
    __swig_getmethods__["CChr9"] = _micropolis.Micropolis_CChr9_get
    if _newclass:CChr9 = _swig_property(_micropolis.Micropolis_CChr9_get, _micropolis.Micropolis_CChr9_set)
    __swig_setmethods__["RoadTotal"] = _micropolis.Micropolis_RoadTotal_set
    __swig_getmethods__["RoadTotal"] = _micropolis.Micropolis_RoadTotal_get
    if _newclass:RoadTotal = _swig_property(_micropolis.Micropolis_RoadTotal_get, _micropolis.Micropolis_RoadTotal_set)
    __swig_setmethods__["RailTotal"] = _micropolis.Micropolis_RailTotal_set
    __swig_getmethods__["RailTotal"] = _micropolis.Micropolis_RailTotal_get
    if _newclass:RailTotal = _swig_property(_micropolis.Micropolis_RailTotal_get, _micropolis.Micropolis_RailTotal_set)
    __swig_setmethods__["FirePop"] = _micropolis.Micropolis_FirePop_set
    __swig_getmethods__["FirePop"] = _micropolis.Micropolis_FirePop_get
    if _newclass:FirePop = _swig_property(_micropolis.Micropolis_FirePop_get, _micropolis.Micropolis_FirePop_set)
    __swig_setmethods__["ResPop"] = _micropolis.Micropolis_ResPop_set
    __swig_getmethods__["ResPop"] = _micropolis.Micropolis_ResPop_get
    if _newclass:ResPop = _swig_property(_micropolis.Micropolis_ResPop_get, _micropolis.Micropolis_ResPop_set)
    __swig_setmethods__["ComPop"] = _micropolis.Micropolis_ComPop_set
    __swig_getmethods__["ComPop"] = _micropolis.Micropolis_ComPop_get
    if _newclass:ComPop = _swig_property(_micropolis.Micropolis_ComPop_get, _micropolis.Micropolis_ComPop_set)
    __swig_setmethods__["IndPop"] = _micropolis.Micropolis_IndPop_set
    __swig_getmethods__["IndPop"] = _micropolis.Micropolis_IndPop_get
    if _newclass:IndPop = _swig_property(_micropolis.Micropolis_IndPop_get, _micropolis.Micropolis_IndPop_set)
    __swig_setmethods__["TotalPop"] = _micropolis.Micropolis_TotalPop_set
    __swig_getmethods__["TotalPop"] = _micropolis.Micropolis_TotalPop_get
    if _newclass:TotalPop = _swig_property(_micropolis.Micropolis_TotalPop_get, _micropolis.Micropolis_TotalPop_set)
    __swig_setmethods__["LastTotalPop"] = _micropolis.Micropolis_LastTotalPop_set
    __swig_getmethods__["LastTotalPop"] = _micropolis.Micropolis_LastTotalPop_get
    if _newclass:LastTotalPop = _swig_property(_micropolis.Micropolis_LastTotalPop_get, _micropolis.Micropolis_LastTotalPop_set)
    __swig_setmethods__["ResZPop"] = _micropolis.Micropolis_ResZPop_set
    __swig_getmethods__["ResZPop"] = _micropolis.Micropolis_ResZPop_get
    if _newclass:ResZPop = _swig_property(_micropolis.Micropolis_ResZPop_get, _micropolis.Micropolis_ResZPop_set)
    __swig_setmethods__["ComZPop"] = _micropolis.Micropolis_ComZPop_set
    __swig_getmethods__["ComZPop"] = _micropolis.Micropolis_ComZPop_get
    if _newclass:ComZPop = _swig_property(_micropolis.Micropolis_ComZPop_get, _micropolis.Micropolis_ComZPop_set)
    __swig_setmethods__["IndZPop"] = _micropolis.Micropolis_IndZPop_set
    __swig_getmethods__["IndZPop"] = _micropolis.Micropolis_IndZPop_get
    if _newclass:IndZPop = _swig_property(_micropolis.Micropolis_IndZPop_get, _micropolis.Micropolis_IndZPop_set)
    __swig_setmethods__["TotalZPop"] = _micropolis.Micropolis_TotalZPop_set
    __swig_getmethods__["TotalZPop"] = _micropolis.Micropolis_TotalZPop_get
    if _newclass:TotalZPop = _swig_property(_micropolis.Micropolis_TotalZPop_get, _micropolis.Micropolis_TotalZPop_set)
    __swig_setmethods__["HospPop"] = _micropolis.Micropolis_HospPop_set
    __swig_getmethods__["HospPop"] = _micropolis.Micropolis_HospPop_get
    if _newclass:HospPop = _swig_property(_micropolis.Micropolis_HospPop_get, _micropolis.Micropolis_HospPop_set)
    __swig_setmethods__["ChurchPop"] = _micropolis.Micropolis_ChurchPop_set
    __swig_getmethods__["ChurchPop"] = _micropolis.Micropolis_ChurchPop_get
    if _newclass:ChurchPop = _swig_property(_micropolis.Micropolis_ChurchPop_get, _micropolis.Micropolis_ChurchPop_set)
    __swig_setmethods__["StadiumPop"] = _micropolis.Micropolis_StadiumPop_set
    __swig_getmethods__["StadiumPop"] = _micropolis.Micropolis_StadiumPop_get
    if _newclass:StadiumPop = _swig_property(_micropolis.Micropolis_StadiumPop_get, _micropolis.Micropolis_StadiumPop_set)
    __swig_setmethods__["PolicePop"] = _micropolis.Micropolis_PolicePop_set
    __swig_getmethods__["PolicePop"] = _micropolis.Micropolis_PolicePop_get
    if _newclass:PolicePop = _swig_property(_micropolis.Micropolis_PolicePop_get, _micropolis.Micropolis_PolicePop_set)
    __swig_setmethods__["FireStPop"] = _micropolis.Micropolis_FireStPop_set
    __swig_getmethods__["FireStPop"] = _micropolis.Micropolis_FireStPop_get
    if _newclass:FireStPop = _swig_property(_micropolis.Micropolis_FireStPop_get, _micropolis.Micropolis_FireStPop_set)
    __swig_setmethods__["CoalPop"] = _micropolis.Micropolis_CoalPop_set
    __swig_getmethods__["CoalPop"] = _micropolis.Micropolis_CoalPop_get
    if _newclass:CoalPop = _swig_property(_micropolis.Micropolis_CoalPop_get, _micropolis.Micropolis_CoalPop_set)
    __swig_setmethods__["NuclearPop"] = _micropolis.Micropolis_NuclearPop_set
    __swig_getmethods__["NuclearPop"] = _micropolis.Micropolis_NuclearPop_get
    if _newclass:NuclearPop = _swig_property(_micropolis.Micropolis_NuclearPop_get, _micropolis.Micropolis_NuclearPop_set)
    __swig_setmethods__["PortPop"] = _micropolis.Micropolis_PortPop_set
    __swig_getmethods__["PortPop"] = _micropolis.Micropolis_PortPop_get
    if _newclass:PortPop = _swig_property(_micropolis.Micropolis_PortPop_get, _micropolis.Micropolis_PortPop_set)
    __swig_setmethods__["APortPop"] = _micropolis.Micropolis_APortPop_set
    __swig_getmethods__["APortPop"] = _micropolis.Micropolis_APortPop_get
    if _newclass:APortPop = _swig_property(_micropolis.Micropolis_APortPop_get, _micropolis.Micropolis_APortPop_set)
    __swig_setmethods__["NeedHosp"] = _micropolis.Micropolis_NeedHosp_set
    __swig_getmethods__["NeedHosp"] = _micropolis.Micropolis_NeedHosp_get
    if _newclass:NeedHosp = _swig_property(_micropolis.Micropolis_NeedHosp_get, _micropolis.Micropolis_NeedHosp_set)
    __swig_setmethods__["NeedChurch"] = _micropolis.Micropolis_NeedChurch_set
    __swig_getmethods__["NeedChurch"] = _micropolis.Micropolis_NeedChurch_get
    if _newclass:NeedChurch = _swig_property(_micropolis.Micropolis_NeedChurch_get, _micropolis.Micropolis_NeedChurch_set)
    __swig_setmethods__["CrimeAverage"] = _micropolis.Micropolis_CrimeAverage_set
    __swig_getmethods__["CrimeAverage"] = _micropolis.Micropolis_CrimeAverage_get
    if _newclass:CrimeAverage = _swig_property(_micropolis.Micropolis_CrimeAverage_get, _micropolis.Micropolis_CrimeAverage_set)
    __swig_setmethods__["PolluteAverage"] = _micropolis.Micropolis_PolluteAverage_set
    __swig_getmethods__["PolluteAverage"] = _micropolis.Micropolis_PolluteAverage_get
    if _newclass:PolluteAverage = _swig_property(_micropolis.Micropolis_PolluteAverage_get, _micropolis.Micropolis_PolluteAverage_set)
    __swig_setmethods__["LVAverage"] = _micropolis.Micropolis_LVAverage_set
    __swig_getmethods__["LVAverage"] = _micropolis.Micropolis_LVAverage_get
    if _newclass:LVAverage = _swig_property(_micropolis.Micropolis_LVAverage_get, _micropolis.Micropolis_LVAverage_set)
    __swig_setmethods__["CityTime"] = _micropolis.Micropolis_CityTime_set
    __swig_getmethods__["CityTime"] = _micropolis.Micropolis_CityTime_get
    if _newclass:CityTime = _swig_property(_micropolis.Micropolis_CityTime_get, _micropolis.Micropolis_CityTime_set)
    __swig_setmethods__["StartingYear"] = _micropolis.Micropolis_StartingYear_set
    __swig_getmethods__["StartingYear"] = _micropolis.Micropolis_StartingYear_get
    if _newclass:StartingYear = _swig_property(_micropolis.Micropolis_StartingYear_get, _micropolis.Micropolis_StartingYear_set)
    __swig_setmethods__["Map"] = _micropolis.Micropolis_Map_set
    __swig_getmethods__["Map"] = _micropolis.Micropolis_Map_get
    if _newclass:Map = _swig_property(_micropolis.Micropolis_Map_get, _micropolis.Micropolis_Map_set)
    __swig_setmethods__["ResHisMax"] = _micropolis.Micropolis_ResHisMax_set
    __swig_getmethods__["ResHisMax"] = _micropolis.Micropolis_ResHisMax_get
    if _newclass:ResHisMax = _swig_property(_micropolis.Micropolis_ResHisMax_get, _micropolis.Micropolis_ResHisMax_set)
    __swig_setmethods__["Res2HisMax"] = _micropolis.Micropolis_Res2HisMax_set
    __swig_getmethods__["Res2HisMax"] = _micropolis.Micropolis_Res2HisMax_get
    if _newclass:Res2HisMax = _swig_property(_micropolis.Micropolis_Res2HisMax_get, _micropolis.Micropolis_Res2HisMax_set)
    __swig_setmethods__["ComHisMax"] = _micropolis.Micropolis_ComHisMax_set
    __swig_getmethods__["ComHisMax"] = _micropolis.Micropolis_ComHisMax_get
    if _newclass:ComHisMax = _swig_property(_micropolis.Micropolis_ComHisMax_get, _micropolis.Micropolis_ComHisMax_set)
    __swig_setmethods__["Com2HisMax"] = _micropolis.Micropolis_Com2HisMax_set
    __swig_getmethods__["Com2HisMax"] = _micropolis.Micropolis_Com2HisMax_get
    if _newclass:Com2HisMax = _swig_property(_micropolis.Micropolis_Com2HisMax_get, _micropolis.Micropolis_Com2HisMax_set)
    __swig_setmethods__["IndHisMax"] = _micropolis.Micropolis_IndHisMax_set
    __swig_getmethods__["IndHisMax"] = _micropolis.Micropolis_IndHisMax_get
    if _newclass:IndHisMax = _swig_property(_micropolis.Micropolis_IndHisMax_get, _micropolis.Micropolis_IndHisMax_set)
    __swig_setmethods__["Ind2HisMax"] = _micropolis.Micropolis_Ind2HisMax_set
    __swig_getmethods__["Ind2HisMax"] = _micropolis.Micropolis_Ind2HisMax_get
    if _newclass:Ind2HisMax = _swig_property(_micropolis.Micropolis_Ind2HisMax_get, _micropolis.Micropolis_Ind2HisMax_set)
    __swig_setmethods__["CensusChanged"] = _micropolis.Micropolis_CensusChanged_set
    __swig_getmethods__["CensusChanged"] = _micropolis.Micropolis_CensusChanged_get
    if _newclass:CensusChanged = _swig_property(_micropolis.Micropolis_CensusChanged_get, _micropolis.Micropolis_CensusChanged_set)
    __swig_setmethods__["MessagePort"] = _micropolis.Micropolis_MessagePort_set
    __swig_getmethods__["MessagePort"] = _micropolis.Micropolis_MessagePort_get
    if _newclass:MessagePort = _swig_property(_micropolis.Micropolis_MessagePort_get, _micropolis.Micropolis_MessagePort_set)
    __swig_setmethods__["MesX"] = _micropolis.Micropolis_MesX_set
    __swig_getmethods__["MesX"] = _micropolis.Micropolis_MesX_get
    if _newclass:MesX = _swig_property(_micropolis.Micropolis_MesX_get, _micropolis.Micropolis_MesX_set)
    __swig_setmethods__["MesY"] = _micropolis.Micropolis_MesY_set
    __swig_getmethods__["MesY"] = _micropolis.Micropolis_MesY_get
    if _newclass:MesY = _swig_property(_micropolis.Micropolis_MesY_get, _micropolis.Micropolis_MesY_set)
    __swig_setmethods__["RoadSpend"] = _micropolis.Micropolis_RoadSpend_set
    __swig_getmethods__["RoadSpend"] = _micropolis.Micropolis_RoadSpend_get
    if _newclass:RoadSpend = _swig_property(_micropolis.Micropolis_RoadSpend_get, _micropolis.Micropolis_RoadSpend_set)
    __swig_setmethods__["PoliceSpend"] = _micropolis.Micropolis_PoliceSpend_set
    __swig_getmethods__["PoliceSpend"] = _micropolis.Micropolis_PoliceSpend_get
    if _newclass:PoliceSpend = _swig_property(_micropolis.Micropolis_PoliceSpend_get, _micropolis.Micropolis_PoliceSpend_set)
    __swig_setmethods__["FireSpend"] = _micropolis.Micropolis_FireSpend_set
    __swig_getmethods__["FireSpend"] = _micropolis.Micropolis_FireSpend_get
    if _newclass:FireSpend = _swig_property(_micropolis.Micropolis_FireSpend_get, _micropolis.Micropolis_FireSpend_set)
    __swig_setmethods__["RoadFund"] = _micropolis.Micropolis_RoadFund_set
    __swig_getmethods__["RoadFund"] = _micropolis.Micropolis_RoadFund_get
    if _newclass:RoadFund = _swig_property(_micropolis.Micropolis_RoadFund_get, _micropolis.Micropolis_RoadFund_set)
    __swig_setmethods__["PoliceFund"] = _micropolis.Micropolis_PoliceFund_set
    __swig_getmethods__["PoliceFund"] = _micropolis.Micropolis_PoliceFund_get
    if _newclass:PoliceFund = _swig_property(_micropolis.Micropolis_PoliceFund_get, _micropolis.Micropolis_PoliceFund_set)
    __swig_setmethods__["FireFund"] = _micropolis.Micropolis_FireFund_set
    __swig_getmethods__["FireFund"] = _micropolis.Micropolis_FireFund_get
    if _newclass:FireFund = _swig_property(_micropolis.Micropolis_FireFund_get, _micropolis.Micropolis_FireFund_set)
    __swig_setmethods__["RoadEffect"] = _micropolis.Micropolis_RoadEffect_set
    __swig_getmethods__["RoadEffect"] = _micropolis.Micropolis_RoadEffect_get
    if _newclass:RoadEffect = _swig_property(_micropolis.Micropolis_RoadEffect_get, _micropolis.Micropolis_RoadEffect_set)
    __swig_setmethods__["PoliceEffect"] = _micropolis.Micropolis_PoliceEffect_set
    __swig_getmethods__["PoliceEffect"] = _micropolis.Micropolis_PoliceEffect_get
    if _newclass:PoliceEffect = _swig_property(_micropolis.Micropolis_PoliceEffect_get, _micropolis.Micropolis_PoliceEffect_set)
    __swig_setmethods__["FireEffect"] = _micropolis.Micropolis_FireEffect_set
    __swig_getmethods__["FireEffect"] = _micropolis.Micropolis_FireEffect_get
    if _newclass:FireEffect = _swig_property(_micropolis.Micropolis_FireEffect_get, _micropolis.Micropolis_FireEffect_set)
    __swig_setmethods__["TaxFund"] = _micropolis.Micropolis_TaxFund_set
    __swig_getmethods__["TaxFund"] = _micropolis.Micropolis_TaxFund_get
    if _newclass:TaxFund = _swig_property(_micropolis.Micropolis_TaxFund_get, _micropolis.Micropolis_TaxFund_set)
    __swig_setmethods__["CityTax"] = _micropolis.Micropolis_CityTax_set
    __swig_getmethods__["CityTax"] = _micropolis.Micropolis_CityTax_get
    if _newclass:CityTax = _swig_property(_micropolis.Micropolis_CityTax_get, _micropolis.Micropolis_CityTax_set)
    __swig_setmethods__["TaxFlag"] = _micropolis.Micropolis_TaxFlag_set
    __swig_getmethods__["TaxFlag"] = _micropolis.Micropolis_TaxFlag_get
    if _newclass:TaxFlag = _swig_property(_micropolis.Micropolis_TaxFlag_get, _micropolis.Micropolis_TaxFlag_set)
    __swig_setmethods__["PopDensity"] = _micropolis.Micropolis_PopDensity_set
    __swig_getmethods__["PopDensity"] = _micropolis.Micropolis_PopDensity_get
    if _newclass:PopDensity = _swig_property(_micropolis.Micropolis_PopDensity_get, _micropolis.Micropolis_PopDensity_set)
    __swig_setmethods__["TrfDensity"] = _micropolis.Micropolis_TrfDensity_set
    __swig_getmethods__["TrfDensity"] = _micropolis.Micropolis_TrfDensity_get
    if _newclass:TrfDensity = _swig_property(_micropolis.Micropolis_TrfDensity_get, _micropolis.Micropolis_TrfDensity_set)
    __swig_setmethods__["PollutionMem"] = _micropolis.Micropolis_PollutionMem_set
    __swig_getmethods__["PollutionMem"] = _micropolis.Micropolis_PollutionMem_get
    if _newclass:PollutionMem = _swig_property(_micropolis.Micropolis_PollutionMem_get, _micropolis.Micropolis_PollutionMem_set)
    __swig_setmethods__["LandValueMem"] = _micropolis.Micropolis_LandValueMem_set
    __swig_getmethods__["LandValueMem"] = _micropolis.Micropolis_LandValueMem_get
    if _newclass:LandValueMem = _swig_property(_micropolis.Micropolis_LandValueMem_get, _micropolis.Micropolis_LandValueMem_set)
    __swig_setmethods__["CrimeMem"] = _micropolis.Micropolis_CrimeMem_set
    __swig_getmethods__["CrimeMem"] = _micropolis.Micropolis_CrimeMem_get
    if _newclass:CrimeMem = _swig_property(_micropolis.Micropolis_CrimeMem_get, _micropolis.Micropolis_CrimeMem_set)
    __swig_setmethods__["tem"] = _micropolis.Micropolis_tem_set
    __swig_getmethods__["tem"] = _micropolis.Micropolis_tem_get
    if _newclass:tem = _swig_property(_micropolis.Micropolis_tem_get, _micropolis.Micropolis_tem_set)
    __swig_setmethods__["tem2"] = _micropolis.Micropolis_tem2_set
    __swig_getmethods__["tem2"] = _micropolis.Micropolis_tem2_get
    if _newclass:tem2 = _swig_property(_micropolis.Micropolis_tem2_get, _micropolis.Micropolis_tem2_set)
    __swig_setmethods__["TerrainMem"] = _micropolis.Micropolis_TerrainMem_set
    __swig_getmethods__["TerrainMem"] = _micropolis.Micropolis_TerrainMem_get
    if _newclass:TerrainMem = _swig_property(_micropolis.Micropolis_TerrainMem_get, _micropolis.Micropolis_TerrainMem_set)
    __swig_setmethods__["Qtem"] = _micropolis.Micropolis_Qtem_set
    __swig_getmethods__["Qtem"] = _micropolis.Micropolis_Qtem_get
    if _newclass:Qtem = _swig_property(_micropolis.Micropolis_Qtem_get, _micropolis.Micropolis_Qtem_set)
    __swig_setmethods__["RateOGMem"] = _micropolis.Micropolis_RateOGMem_set
    __swig_getmethods__["RateOGMem"] = _micropolis.Micropolis_RateOGMem_get
    if _newclass:RateOGMem = _swig_property(_micropolis.Micropolis_RateOGMem_get, _micropolis.Micropolis_RateOGMem_set)
    __swig_setmethods__["FireStMap"] = _micropolis.Micropolis_FireStMap_set
    __swig_getmethods__["FireStMap"] = _micropolis.Micropolis_FireStMap_get
    if _newclass:FireStMap = _swig_property(_micropolis.Micropolis_FireStMap_get, _micropolis.Micropolis_FireStMap_set)
    __swig_setmethods__["PoliceMap"] = _micropolis.Micropolis_PoliceMap_set
    __swig_getmethods__["PoliceMap"] = _micropolis.Micropolis_PoliceMap_get
    if _newclass:PoliceMap = _swig_property(_micropolis.Micropolis_PoliceMap_get, _micropolis.Micropolis_PoliceMap_set)
    __swig_setmethods__["PoliceMapEffect"] = _micropolis.Micropolis_PoliceMapEffect_set
    __swig_getmethods__["PoliceMapEffect"] = _micropolis.Micropolis_PoliceMapEffect_get
    if _newclass:PoliceMapEffect = _swig_property(_micropolis.Micropolis_PoliceMapEffect_get, _micropolis.Micropolis_PoliceMapEffect_set)
    __swig_setmethods__["FireRate"] = _micropolis.Micropolis_FireRate_set
    __swig_getmethods__["FireRate"] = _micropolis.Micropolis_FireRate_get
    if _newclass:FireRate = _swig_property(_micropolis.Micropolis_FireRate_get, _micropolis.Micropolis_FireRate_set)
    __swig_setmethods__["ComRate"] = _micropolis.Micropolis_ComRate_set
    __swig_getmethods__["ComRate"] = _micropolis.Micropolis_ComRate_get
    if _newclass:ComRate = _swig_property(_micropolis.Micropolis_ComRate_get, _micropolis.Micropolis_ComRate_set)
    __swig_setmethods__["STem"] = _micropolis.Micropolis_STem_set
    __swig_getmethods__["STem"] = _micropolis.Micropolis_STem_get
    if _newclass:STem = _swig_property(_micropolis.Micropolis_STem_get, _micropolis.Micropolis_STem_set)
    __swig_setmethods__["terrainBase"] = _micropolis.Micropolis_terrainBase_set
    __swig_getmethods__["terrainBase"] = _micropolis.Micropolis_terrainBase_get
    if _newclass:terrainBase = _swig_property(_micropolis.Micropolis_terrainBase_get, _micropolis.Micropolis_terrainBase_set)
    __swig_setmethods__["qTemBase"] = _micropolis.Micropolis_qTemBase_set
    __swig_getmethods__["qTemBase"] = _micropolis.Micropolis_qTemBase_get
    if _newclass:qTemBase = _swig_property(_micropolis.Micropolis_qTemBase_get, _micropolis.Micropolis_qTemBase_set)
    __swig_setmethods__["tem1Base"] = _micropolis.Micropolis_tem1Base_set
    __swig_getmethods__["tem1Base"] = _micropolis.Micropolis_tem1Base_get
    if _newclass:tem1Base = _swig_property(_micropolis.Micropolis_tem1Base_get, _micropolis.Micropolis_tem1Base_set)
    __swig_setmethods__["tem2Base"] = _micropolis.Micropolis_tem2Base_set
    __swig_getmethods__["tem2Base"] = _micropolis.Micropolis_tem2Base_get
    if _newclass:tem2Base = _swig_property(_micropolis.Micropolis_tem2Base_get, _micropolis.Micropolis_tem2Base_set)
    __swig_setmethods__["popPtr"] = _micropolis.Micropolis_popPtr_set
    __swig_getmethods__["popPtr"] = _micropolis.Micropolis_popPtr_get
    if _newclass:popPtr = _swig_property(_micropolis.Micropolis_popPtr_get, _micropolis.Micropolis_popPtr_set)
    __swig_setmethods__["trfPtr"] = _micropolis.Micropolis_trfPtr_set
    __swig_getmethods__["trfPtr"] = _micropolis.Micropolis_trfPtr_get
    if _newclass:trfPtr = _swig_property(_micropolis.Micropolis_trfPtr_get, _micropolis.Micropolis_trfPtr_set)
    __swig_setmethods__["polPtr"] = _micropolis.Micropolis_polPtr_set
    __swig_getmethods__["polPtr"] = _micropolis.Micropolis_polPtr_get
    if _newclass:polPtr = _swig_property(_micropolis.Micropolis_polPtr_get, _micropolis.Micropolis_polPtr_set)
    __swig_setmethods__["landPtr"] = _micropolis.Micropolis_landPtr_set
    __swig_getmethods__["landPtr"] = _micropolis.Micropolis_landPtr_get
    if _newclass:landPtr = _swig_property(_micropolis.Micropolis_landPtr_get, _micropolis.Micropolis_landPtr_set)
    __swig_setmethods__["crimePtr"] = _micropolis.Micropolis_crimePtr_set
    __swig_getmethods__["crimePtr"] = _micropolis.Micropolis_crimePtr_get
    if _newclass:crimePtr = _swig_property(_micropolis.Micropolis_crimePtr_get, _micropolis.Micropolis_crimePtr_set)
    __swig_setmethods__["auxPopPtr"] = _micropolis.Micropolis_auxPopPtr_set
    __swig_getmethods__["auxPopPtr"] = _micropolis.Micropolis_auxPopPtr_get
    if _newclass:auxPopPtr = _swig_property(_micropolis.Micropolis_auxPopPtr_get, _micropolis.Micropolis_auxPopPtr_set)
    __swig_setmethods__["auxTrfPtr"] = _micropolis.Micropolis_auxTrfPtr_set
    __swig_getmethods__["auxTrfPtr"] = _micropolis.Micropolis_auxTrfPtr_get
    if _newclass:auxTrfPtr = _swig_property(_micropolis.Micropolis_auxTrfPtr_get, _micropolis.Micropolis_auxTrfPtr_set)
    __swig_setmethods__["auxPolPtr"] = _micropolis.Micropolis_auxPolPtr_set
    __swig_getmethods__["auxPolPtr"] = _micropolis.Micropolis_auxPolPtr_get
    if _newclass:auxPolPtr = _swig_property(_micropolis.Micropolis_auxPolPtr_get, _micropolis.Micropolis_auxPolPtr_set)
    __swig_setmethods__["auxLandPtr"] = _micropolis.Micropolis_auxLandPtr_set
    __swig_getmethods__["auxLandPtr"] = _micropolis.Micropolis_auxLandPtr_get
    if _newclass:auxLandPtr = _swig_property(_micropolis.Micropolis_auxLandPtr_get, _micropolis.Micropolis_auxLandPtr_set)
    __swig_setmethods__["auxCrimePtr"] = _micropolis.Micropolis_auxCrimePtr_set
    __swig_getmethods__["auxCrimePtr"] = _micropolis.Micropolis_auxCrimePtr_get
    if _newclass:auxCrimePtr = _swig_property(_micropolis.Micropolis_auxCrimePtr_get, _micropolis.Micropolis_auxCrimePtr_set)
    __swig_setmethods__["brettPtr"] = _micropolis.Micropolis_brettPtr_set
    __swig_getmethods__["brettPtr"] = _micropolis.Micropolis_brettPtr_get
    if _newclass:brettPtr = _swig_property(_micropolis.Micropolis_brettPtr_get, _micropolis.Micropolis_brettPtr_set)
    __swig_setmethods__["mapPtr"] = _micropolis.Micropolis_mapPtr_set
    __swig_getmethods__["mapPtr"] = _micropolis.Micropolis_mapPtr_get
    if _newclass:mapPtr = _swig_property(_micropolis.Micropolis_mapPtr_get, _micropolis.Micropolis_mapPtr_set)
    __swig_setmethods__["ResHis"] = _micropolis.Micropolis_ResHis_set
    __swig_getmethods__["ResHis"] = _micropolis.Micropolis_ResHis_get
    if _newclass:ResHis = _swig_property(_micropolis.Micropolis_ResHis_get, _micropolis.Micropolis_ResHis_set)
    __swig_setmethods__["ComHis"] = _micropolis.Micropolis_ComHis_set
    __swig_getmethods__["ComHis"] = _micropolis.Micropolis_ComHis_get
    if _newclass:ComHis = _swig_property(_micropolis.Micropolis_ComHis_get, _micropolis.Micropolis_ComHis_set)
    __swig_setmethods__["IndHis"] = _micropolis.Micropolis_IndHis_set
    __swig_getmethods__["IndHis"] = _micropolis.Micropolis_IndHis_get
    if _newclass:IndHis = _swig_property(_micropolis.Micropolis_IndHis_get, _micropolis.Micropolis_IndHis_set)
    __swig_setmethods__["MoneyHis"] = _micropolis.Micropolis_MoneyHis_set
    __swig_getmethods__["MoneyHis"] = _micropolis.Micropolis_MoneyHis_get
    if _newclass:MoneyHis = _swig_property(_micropolis.Micropolis_MoneyHis_get, _micropolis.Micropolis_MoneyHis_set)
    __swig_setmethods__["PollutionHis"] = _micropolis.Micropolis_PollutionHis_set
    __swig_getmethods__["PollutionHis"] = _micropolis.Micropolis_PollutionHis_get
    if _newclass:PollutionHis = _swig_property(_micropolis.Micropolis_PollutionHis_get, _micropolis.Micropolis_PollutionHis_set)
    __swig_setmethods__["CrimeHis"] = _micropolis.Micropolis_CrimeHis_set
    __swig_getmethods__["CrimeHis"] = _micropolis.Micropolis_CrimeHis_get
    if _newclass:CrimeHis = _swig_property(_micropolis.Micropolis_CrimeHis_get, _micropolis.Micropolis_CrimeHis_set)
    __swig_setmethods__["MiscHis"] = _micropolis.Micropolis_MiscHis_set
    __swig_getmethods__["MiscHis"] = _micropolis.Micropolis_MiscHis_get
    if _newclass:MiscHis = _swig_property(_micropolis.Micropolis_MiscHis_get, _micropolis.Micropolis_MiscHis_set)
    __swig_setmethods__["PowerMap"] = _micropolis.Micropolis_PowerMap_set
    __swig_getmethods__["PowerMap"] = _micropolis.Micropolis_PowerMap_get
    if _newclass:PowerMap = _swig_property(_micropolis.Micropolis_PowerMap_get, _micropolis.Micropolis_PowerMap_set)
    def initMapArrays(*args): return _micropolis.Micropolis_initMapArrays(*args)
    def destroyMapArrays(*args): return _micropolis.Micropolis_destroyMapArrays(*args)
    def GetHistoryRange(*args): return _micropolis.Micropolis_GetHistoryRange(*args)
    def GetHistory(*args): return _micropolis.Micropolis_GetHistory(*args)
    def animateTiles(*args): return _micropolis.Micropolis_animateTiles(*args)
    __swig_setmethods__["roadPercent"] = _micropolis.Micropolis_roadPercent_set
    __swig_getmethods__["roadPercent"] = _micropolis.Micropolis_roadPercent_get
    if _newclass:roadPercent = _swig_property(_micropolis.Micropolis_roadPercent_get, _micropolis.Micropolis_roadPercent_set)
    __swig_setmethods__["policePercent"] = _micropolis.Micropolis_policePercent_set
    __swig_getmethods__["policePercent"] = _micropolis.Micropolis_policePercent_get
    if _newclass:policePercent = _swig_property(_micropolis.Micropolis_policePercent_get, _micropolis.Micropolis_policePercent_set)
    __swig_setmethods__["firePercent"] = _micropolis.Micropolis_firePercent_set
    __swig_getmethods__["firePercent"] = _micropolis.Micropolis_firePercent_get
    if _newclass:firePercent = _swig_property(_micropolis.Micropolis_firePercent_get, _micropolis.Micropolis_firePercent_set)
    __swig_setmethods__["roadValue"] = _micropolis.Micropolis_roadValue_set
    __swig_getmethods__["roadValue"] = _micropolis.Micropolis_roadValue_get
    if _newclass:roadValue = _swig_property(_micropolis.Micropolis_roadValue_get, _micropolis.Micropolis_roadValue_set)
    __swig_setmethods__["policeValue"] = _micropolis.Micropolis_policeValue_set
    __swig_getmethods__["policeValue"] = _micropolis.Micropolis_policeValue_get
    if _newclass:policeValue = _swig_property(_micropolis.Micropolis_policeValue_get, _micropolis.Micropolis_policeValue_set)
    __swig_setmethods__["fireValue"] = _micropolis.Micropolis_fireValue_set
    __swig_getmethods__["fireValue"] = _micropolis.Micropolis_fireValue_get
    if _newclass:fireValue = _swig_property(_micropolis.Micropolis_fireValue_get, _micropolis.Micropolis_fireValue_set)
    __swig_setmethods__["roadMaxValue"] = _micropolis.Micropolis_roadMaxValue_set
    __swig_getmethods__["roadMaxValue"] = _micropolis.Micropolis_roadMaxValue_get
    if _newclass:roadMaxValue = _swig_property(_micropolis.Micropolis_roadMaxValue_get, _micropolis.Micropolis_roadMaxValue_set)
    __swig_setmethods__["policeMaxValue"] = _micropolis.Micropolis_policeMaxValue_set
    __swig_getmethods__["policeMaxValue"] = _micropolis.Micropolis_policeMaxValue_get
    if _newclass:policeMaxValue = _swig_property(_micropolis.Micropolis_policeMaxValue_get, _micropolis.Micropolis_policeMaxValue_set)
    __swig_setmethods__["fireMaxValue"] = _micropolis.Micropolis_fireMaxValue_set
    __swig_getmethods__["fireMaxValue"] = _micropolis.Micropolis_fireMaxValue_get
    if _newclass:fireMaxValue = _swig_property(_micropolis.Micropolis_fireMaxValue_get, _micropolis.Micropolis_fireMaxValue_set)
    __swig_setmethods__["MustDrawCurrPercents"] = _micropolis.Micropolis_MustDrawCurrPercents_set
    __swig_getmethods__["MustDrawCurrPercents"] = _micropolis.Micropolis_MustDrawCurrPercents_get
    if _newclass:MustDrawCurrPercents = _swig_property(_micropolis.Micropolis_MustDrawCurrPercents_get, _micropolis.Micropolis_MustDrawCurrPercents_set)
    __swig_setmethods__["MustDrawBudgetWindow"] = _micropolis.Micropolis_MustDrawBudgetWindow_set
    __swig_getmethods__["MustDrawBudgetWindow"] = _micropolis.Micropolis_MustDrawBudgetWindow_get
    if _newclass:MustDrawBudgetWindow = _swig_property(_micropolis.Micropolis_MustDrawBudgetWindow_get, _micropolis.Micropolis_MustDrawBudgetWindow_set)
    def InitFundingLevel(*args): return _micropolis.Micropolis_InitFundingLevel(*args)
    def DoBudget(*args): return _micropolis.Micropolis_DoBudget(*args)
    def DoBudgetFromMenu(*args): return _micropolis.Micropolis_DoBudgetFromMenu(*args)
    def DoBudgetNow(*args): return _micropolis.Micropolis_DoBudgetNow(*args)
    def drawBudgetWindow(*args): return _micropolis.Micropolis_drawBudgetWindow(*args)
    def ReallyDrawBudgetWindow(*args): return _micropolis.Micropolis_ReallyDrawBudgetWindow(*args)
    def drawCurrPercents(*args): return _micropolis.Micropolis_drawCurrPercents(*args)
    def ReallyDrawCurrPercents(*args): return _micropolis.Micropolis_ReallyDrawCurrPercents(*args)
    def UpdateBudgetWindow(*args): return _micropolis.Micropolis_UpdateBudgetWindow(*args)
    def UpdateBudget(*args): return _micropolis.Micropolis_UpdateBudget(*args)
    def ShowBudgetWindowAndStartWaiting(*args): return _micropolis.Micropolis_ShowBudgetWindowAndStartWaiting(*args)
    def SetBudget(*args): return _micropolis.Micropolis_SetBudget(*args)
    def SetBudgetValues(*args): return _micropolis.Micropolis_SetBudgetValues(*args)
    def ConnecTile(*args): return _micropolis.Micropolis_ConnecTile(*args)
    def LayDoze(*args): return _micropolis.Micropolis_LayDoze(*args)
    def LayRoad(*args): return _micropolis.Micropolis_LayRoad(*args)
    def LayRail(*args): return _micropolis.Micropolis_LayRail(*args)
    def LayWire(*args): return _micropolis.Micropolis_LayWire(*args)
    def FixZone(*args): return _micropolis.Micropolis_FixZone(*args)
    def FixSingle(*args): return _micropolis.Micropolis_FixSingle(*args)
    __swig_setmethods__["ShakeNow"] = _micropolis.Micropolis_ShakeNow_set
    __swig_getmethods__["ShakeNow"] = _micropolis.Micropolis_ShakeNow_get
    if _newclass:ShakeNow = _swig_property(_micropolis.Micropolis_ShakeNow_get, _micropolis.Micropolis_ShakeNow_set)
    __swig_setmethods__["FloodCnt"] = _micropolis.Micropolis_FloodCnt_set
    __swig_getmethods__["FloodCnt"] = _micropolis.Micropolis_FloodCnt_get
    if _newclass:FloodCnt = _swig_property(_micropolis.Micropolis_FloodCnt_get, _micropolis.Micropolis_FloodCnt_set)
    __swig_setmethods__["FloodX"] = _micropolis.Micropolis_FloodX_set
    __swig_getmethods__["FloodX"] = _micropolis.Micropolis_FloodX_get
    if _newclass:FloodX = _swig_property(_micropolis.Micropolis_FloodX_get, _micropolis.Micropolis_FloodX_set)
    __swig_setmethods__["FloodY"] = _micropolis.Micropolis_FloodY_set
    __swig_getmethods__["FloodY"] = _micropolis.Micropolis_FloodY_get
    if _newclass:FloodY = _swig_property(_micropolis.Micropolis_FloodY_get, _micropolis.Micropolis_FloodY_set)
    def DoDisasters(*args): return _micropolis.Micropolis_DoDisasters(*args)
    def ScenarioDisaster(*args): return _micropolis.Micropolis_ScenarioDisaster(*args)
    def MakeMeltdown(*args): return _micropolis.Micropolis_MakeMeltdown(*args)
    def FireBomb(*args): return _micropolis.Micropolis_FireBomb(*args)
    def MakeEarthquake(*args): return _micropolis.Micropolis_MakeEarthquake(*args)
    def SetFire(*args): return _micropolis.Micropolis_SetFire(*args)
    def MakeFire(*args): return _micropolis.Micropolis_MakeFire(*args)
    def Vulnerable(*args): return _micropolis.Micropolis_Vulnerable(*args)
    def MakeFlood(*args): return _micropolis.Micropolis_MakeFlood(*args)
    def DoFlood(*args): return _micropolis.Micropolis_DoFlood(*args)
    __swig_setmethods__["EvalValid"] = _micropolis.Micropolis_EvalValid_set
    __swig_getmethods__["EvalValid"] = _micropolis.Micropolis_EvalValid_get
    if _newclass:EvalValid = _swig_property(_micropolis.Micropolis_EvalValid_get, _micropolis.Micropolis_EvalValid_set)
    __swig_setmethods__["CityYes"] = _micropolis.Micropolis_CityYes_set
    __swig_getmethods__["CityYes"] = _micropolis.Micropolis_CityYes_get
    if _newclass:CityYes = _swig_property(_micropolis.Micropolis_CityYes_get, _micropolis.Micropolis_CityYes_set)
    __swig_setmethods__["CityNo"] = _micropolis.Micropolis_CityNo_set
    __swig_getmethods__["CityNo"] = _micropolis.Micropolis_CityNo_get
    if _newclass:CityNo = _swig_property(_micropolis.Micropolis_CityNo_get, _micropolis.Micropolis_CityNo_set)
    __swig_setmethods__["ProblemTable"] = _micropolis.Micropolis_ProblemTable_set
    __swig_getmethods__["ProblemTable"] = _micropolis.Micropolis_ProblemTable_get
    if _newclass:ProblemTable = _swig_property(_micropolis.Micropolis_ProblemTable_get, _micropolis.Micropolis_ProblemTable_set)
    __swig_setmethods__["ProblemTaken"] = _micropolis.Micropolis_ProblemTaken_set
    __swig_getmethods__["ProblemTaken"] = _micropolis.Micropolis_ProblemTaken_get
    if _newclass:ProblemTaken = _swig_property(_micropolis.Micropolis_ProblemTaken_get, _micropolis.Micropolis_ProblemTaken_set)
    __swig_setmethods__["ProblemVotes"] = _micropolis.Micropolis_ProblemVotes_set
    __swig_getmethods__["ProblemVotes"] = _micropolis.Micropolis_ProblemVotes_get
    if _newclass:ProblemVotes = _swig_property(_micropolis.Micropolis_ProblemVotes_get, _micropolis.Micropolis_ProblemVotes_set)
    __swig_setmethods__["ProblemOrder"] = _micropolis.Micropolis_ProblemOrder_set
    __swig_getmethods__["ProblemOrder"] = _micropolis.Micropolis_ProblemOrder_get
    if _newclass:ProblemOrder = _swig_property(_micropolis.Micropolis_ProblemOrder_get, _micropolis.Micropolis_ProblemOrder_set)
    __swig_setmethods__["CityPop"] = _micropolis.Micropolis_CityPop_set
    __swig_getmethods__["CityPop"] = _micropolis.Micropolis_CityPop_get
    if _newclass:CityPop = _swig_property(_micropolis.Micropolis_CityPop_get, _micropolis.Micropolis_CityPop_set)
    __swig_setmethods__["deltaCityPop"] = _micropolis.Micropolis_deltaCityPop_set
    __swig_getmethods__["deltaCityPop"] = _micropolis.Micropolis_deltaCityPop_get
    if _newclass:deltaCityPop = _swig_property(_micropolis.Micropolis_deltaCityPop_get, _micropolis.Micropolis_deltaCityPop_set)
    __swig_setmethods__["CityAssValue"] = _micropolis.Micropolis_CityAssValue_set
    __swig_getmethods__["CityAssValue"] = _micropolis.Micropolis_CityAssValue_get
    if _newclass:CityAssValue = _swig_property(_micropolis.Micropolis_CityAssValue_get, _micropolis.Micropolis_CityAssValue_set)
    __swig_setmethods__["CityClass"] = _micropolis.Micropolis_CityClass_set
    __swig_getmethods__["CityClass"] = _micropolis.Micropolis_CityClass_get
    if _newclass:CityClass = _swig_property(_micropolis.Micropolis_CityClass_get, _micropolis.Micropolis_CityClass_set)
    __swig_setmethods__["CityScore"] = _micropolis.Micropolis_CityScore_set
    __swig_getmethods__["CityScore"] = _micropolis.Micropolis_CityScore_get
    if _newclass:CityScore = _swig_property(_micropolis.Micropolis_CityScore_get, _micropolis.Micropolis_CityScore_set)
    __swig_setmethods__["deltaCityScore"] = _micropolis.Micropolis_deltaCityScore_set
    __swig_getmethods__["deltaCityScore"] = _micropolis.Micropolis_deltaCityScore_get
    if _newclass:deltaCityScore = _swig_property(_micropolis.Micropolis_deltaCityScore_get, _micropolis.Micropolis_deltaCityScore_set)
    __swig_setmethods__["AverageCityScore"] = _micropolis.Micropolis_AverageCityScore_set
    __swig_getmethods__["AverageCityScore"] = _micropolis.Micropolis_AverageCityScore_get
    if _newclass:AverageCityScore = _swig_property(_micropolis.Micropolis_AverageCityScore_get, _micropolis.Micropolis_AverageCityScore_set)
    __swig_setmethods__["TrafficAverage"] = _micropolis.Micropolis_TrafficAverage_set
    __swig_getmethods__["TrafficAverage"] = _micropolis.Micropolis_TrafficAverage_get
    if _newclass:TrafficAverage = _swig_property(_micropolis.Micropolis_TrafficAverage_get, _micropolis.Micropolis_TrafficAverage_set)
    __swig_setmethods__["cityClassStr"] = _micropolis.Micropolis_cityClassStr_set
    __swig_getmethods__["cityClassStr"] = _micropolis.Micropolis_cityClassStr_get
    if _newclass:cityClassStr = _swig_property(_micropolis.Micropolis_cityClassStr_get, _micropolis.Micropolis_cityClassStr_set)
    __swig_setmethods__["cityLevelStr"] = _micropolis.Micropolis_cityLevelStr_set
    __swig_getmethods__["cityLevelStr"] = _micropolis.Micropolis_cityLevelStr_get
    if _newclass:cityLevelStr = _swig_property(_micropolis.Micropolis_cityLevelStr_get, _micropolis.Micropolis_cityLevelStr_set)
    __swig_setmethods__["probStr"] = _micropolis.Micropolis_probStr_set
    __swig_getmethods__["probStr"] = _micropolis.Micropolis_probStr_get
    if _newclass:probStr = _swig_property(_micropolis.Micropolis_probStr_get, _micropolis.Micropolis_probStr_set)
    __swig_setmethods__["evalChanged"] = _micropolis.Micropolis_evalChanged_set
    __swig_getmethods__["evalChanged"] = _micropolis.Micropolis_evalChanged_get
    if _newclass:evalChanged = _swig_property(_micropolis.Micropolis_evalChanged_get, _micropolis.Micropolis_evalChanged_set)
    __swig_setmethods__["evalScore"] = _micropolis.Micropolis_evalScore_set
    __swig_getmethods__["evalScore"] = _micropolis.Micropolis_evalScore_get
    if _newclass:evalScore = _swig_property(_micropolis.Micropolis_evalScore_get, _micropolis.Micropolis_evalScore_set)
    __swig_setmethods__["evalPs0"] = _micropolis.Micropolis_evalPs0_set
    __swig_getmethods__["evalPs0"] = _micropolis.Micropolis_evalPs0_get
    if _newclass:evalPs0 = _swig_property(_micropolis.Micropolis_evalPs0_get, _micropolis.Micropolis_evalPs0_set)
    __swig_setmethods__["evalPs1"] = _micropolis.Micropolis_evalPs1_set
    __swig_getmethods__["evalPs1"] = _micropolis.Micropolis_evalPs1_get
    if _newclass:evalPs1 = _swig_property(_micropolis.Micropolis_evalPs1_get, _micropolis.Micropolis_evalPs1_set)
    __swig_setmethods__["evalPs2"] = _micropolis.Micropolis_evalPs2_set
    __swig_getmethods__["evalPs2"] = _micropolis.Micropolis_evalPs2_get
    if _newclass:evalPs2 = _swig_property(_micropolis.Micropolis_evalPs2_get, _micropolis.Micropolis_evalPs2_set)
    __swig_setmethods__["evalPs3"] = _micropolis.Micropolis_evalPs3_set
    __swig_getmethods__["evalPs3"] = _micropolis.Micropolis_evalPs3_get
    if _newclass:evalPs3 = _swig_property(_micropolis.Micropolis_evalPs3_get, _micropolis.Micropolis_evalPs3_set)
    __swig_setmethods__["evalPv0"] = _micropolis.Micropolis_evalPv0_set
    __swig_getmethods__["evalPv0"] = _micropolis.Micropolis_evalPv0_get
    if _newclass:evalPv0 = _swig_property(_micropolis.Micropolis_evalPv0_get, _micropolis.Micropolis_evalPv0_set)
    __swig_setmethods__["evalPv1"] = _micropolis.Micropolis_evalPv1_set
    __swig_getmethods__["evalPv1"] = _micropolis.Micropolis_evalPv1_get
    if _newclass:evalPv1 = _swig_property(_micropolis.Micropolis_evalPv1_get, _micropolis.Micropolis_evalPv1_set)
    __swig_setmethods__["evalPv2"] = _micropolis.Micropolis_evalPv2_set
    __swig_getmethods__["evalPv2"] = _micropolis.Micropolis_evalPv2_get
    if _newclass:evalPv2 = _swig_property(_micropolis.Micropolis_evalPv2_get, _micropolis.Micropolis_evalPv2_set)
    __swig_setmethods__["evalPv3"] = _micropolis.Micropolis_evalPv3_set
    __swig_getmethods__["evalPv3"] = _micropolis.Micropolis_evalPv3_get
    if _newclass:evalPv3 = _swig_property(_micropolis.Micropolis_evalPv3_get, _micropolis.Micropolis_evalPv3_set)
    __swig_setmethods__["evalPop"] = _micropolis.Micropolis_evalPop_set
    __swig_getmethods__["evalPop"] = _micropolis.Micropolis_evalPop_get
    if _newclass:evalPop = _swig_property(_micropolis.Micropolis_evalPop_get, _micropolis.Micropolis_evalPop_set)
    __swig_setmethods__["evalDelta"] = _micropolis.Micropolis_evalDelta_set
    __swig_getmethods__["evalDelta"] = _micropolis.Micropolis_evalDelta_get
    if _newclass:evalDelta = _swig_property(_micropolis.Micropolis_evalDelta_get, _micropolis.Micropolis_evalDelta_set)
    __swig_setmethods__["evalAssessedDollars"] = _micropolis.Micropolis_evalAssessedDollars_set
    __swig_getmethods__["evalAssessedDollars"] = _micropolis.Micropolis_evalAssessedDollars_get
    if _newclass:evalAssessedDollars = _swig_property(_micropolis.Micropolis_evalAssessedDollars_get, _micropolis.Micropolis_evalAssessedDollars_set)
    __swig_setmethods__["evalCityClass"] = _micropolis.Micropolis_evalCityClass_set
    __swig_getmethods__["evalCityClass"] = _micropolis.Micropolis_evalCityClass_get
    if _newclass:evalCityClass = _swig_property(_micropolis.Micropolis_evalCityClass_get, _micropolis.Micropolis_evalCityClass_set)
    __swig_setmethods__["evalCityLevel"] = _micropolis.Micropolis_evalCityLevel_set
    __swig_getmethods__["evalCityLevel"] = _micropolis.Micropolis_evalCityLevel_get
    if _newclass:evalCityLevel = _swig_property(_micropolis.Micropolis_evalCityLevel_get, _micropolis.Micropolis_evalCityLevel_set)
    __swig_setmethods__["evalGoodYes"] = _micropolis.Micropolis_evalGoodYes_set
    __swig_getmethods__["evalGoodYes"] = _micropolis.Micropolis_evalGoodYes_get
    if _newclass:evalGoodYes = _swig_property(_micropolis.Micropolis_evalGoodYes_get, _micropolis.Micropolis_evalGoodYes_set)
    __swig_setmethods__["evalGoodNo"] = _micropolis.Micropolis_evalGoodNo_set
    __swig_getmethods__["evalGoodNo"] = _micropolis.Micropolis_evalGoodNo_get
    if _newclass:evalGoodNo = _swig_property(_micropolis.Micropolis_evalGoodNo_get, _micropolis.Micropolis_evalGoodNo_set)
    __swig_setmethods__["evalTitle"] = _micropolis.Micropolis_evalTitle_set
    __swig_getmethods__["evalTitle"] = _micropolis.Micropolis_evalTitle_get
    if _newclass:evalTitle = _swig_property(_micropolis.Micropolis_evalTitle_get, _micropolis.Micropolis_evalTitle_set)
    def CityEvaluation(*args): return _micropolis.Micropolis_CityEvaluation(*args)
    def EvalInit(*args): return _micropolis.Micropolis_EvalInit(*args)
    def GetAssValue(*args): return _micropolis.Micropolis_GetAssValue(*args)
    def DoPopNum(*args): return _micropolis.Micropolis_DoPopNum(*args)
    def DoProblems(*args): return _micropolis.Micropolis_DoProblems(*args)
    def VoteProblems(*args): return _micropolis.Micropolis_VoteProblems(*args)
    def AverageTrf(*args): return _micropolis.Micropolis_AverageTrf(*args)
    def GetUnemployment(*args): return _micropolis.Micropolis_GetUnemployment(*args)
    def GetFire(*args): return _micropolis.Micropolis_GetFire(*args)
    def GetScore(*args): return _micropolis.Micropolis_GetScore(*args)
    def DoVotes(*args): return _micropolis.Micropolis_DoVotes(*args)
    def doScoreCard(*args): return _micropolis.Micropolis_doScoreCard(*args)
    def ChangeEval(*args): return _micropolis.Micropolis_ChangeEval(*args)
    def scoreDoer(*args): return _micropolis.Micropolis_scoreDoer(*args)
    def SetEvaluation(*args): return _micropolis.Micropolis_SetEvaluation(*args)
    def load_file(*args): return _micropolis.Micropolis_load_file(*args)
    def loadFile(*args): return _micropolis.Micropolis_loadFile(*args)
    def saveFile(*args): return _micropolis.Micropolis_saveFile(*args)
    def LoadScenario(*args): return _micropolis.Micropolis_LoadScenario(*args)
    def DidLoadScenario(*args): return _micropolis.Micropolis_DidLoadScenario(*args)
    def LoadCity(*args): return _micropolis.Micropolis_LoadCity(*args)
    def DidLoadCity(*args): return _micropolis.Micropolis_DidLoadCity(*args)
    def DidntLoadCity(*args): return _micropolis.Micropolis_DidntLoadCity(*args)
    def SaveCity(*args): return _micropolis.Micropolis_SaveCity(*args)
    def DoSaveCityAs(*args): return _micropolis.Micropolis_DoSaveCityAs(*args)
    def DidSaveCity(*args): return _micropolis.Micropolis_DidSaveCity(*args)
    def DidntSaveCity(*args): return _micropolis.Micropolis_DidntSaveCity(*args)
    def SaveCityAs(*args): return _micropolis.Micropolis_SaveCityAs(*args)
    __swig_setmethods__["XStart"] = _micropolis.Micropolis_XStart_set
    __swig_getmethods__["XStart"] = _micropolis.Micropolis_XStart_get
    if _newclass:XStart = _swig_property(_micropolis.Micropolis_XStart_get, _micropolis.Micropolis_XStart_set)
    __swig_setmethods__["YStart"] = _micropolis.Micropolis_YStart_set
    __swig_getmethods__["YStart"] = _micropolis.Micropolis_YStart_get
    if _newclass:YStart = _swig_property(_micropolis.Micropolis_YStart_get, _micropolis.Micropolis_YStart_set)
    __swig_setmethods__["MapX"] = _micropolis.Micropolis_MapX_set
    __swig_getmethods__["MapX"] = _micropolis.Micropolis_MapX_get
    if _newclass:MapX = _swig_property(_micropolis.Micropolis_MapX_get, _micropolis.Micropolis_MapX_set)
    __swig_setmethods__["MapY"] = _micropolis.Micropolis_MapY_set
    __swig_getmethods__["MapY"] = _micropolis.Micropolis_MapY_get
    if _newclass:MapY = _swig_property(_micropolis.Micropolis_MapY_get, _micropolis.Micropolis_MapY_set)
    __swig_setmethods__["Dir"] = _micropolis.Micropolis_Dir_set
    __swig_getmethods__["Dir"] = _micropolis.Micropolis_Dir_get
    if _newclass:Dir = _swig_property(_micropolis.Micropolis_Dir_get, _micropolis.Micropolis_Dir_set)
    __swig_setmethods__["LastDir"] = _micropolis.Micropolis_LastDir_set
    __swig_getmethods__["LastDir"] = _micropolis.Micropolis_LastDir_get
    if _newclass:LastDir = _swig_property(_micropolis.Micropolis_LastDir_get, _micropolis.Micropolis_LastDir_set)
    __swig_setmethods__["TreeLevel"] = _micropolis.Micropolis_TreeLevel_set
    __swig_getmethods__["TreeLevel"] = _micropolis.Micropolis_TreeLevel_get
    if _newclass:TreeLevel = _swig_property(_micropolis.Micropolis_TreeLevel_get, _micropolis.Micropolis_TreeLevel_set)
    __swig_setmethods__["LakeLevel"] = _micropolis.Micropolis_LakeLevel_set
    __swig_getmethods__["LakeLevel"] = _micropolis.Micropolis_LakeLevel_get
    if _newclass:LakeLevel = _swig_property(_micropolis.Micropolis_LakeLevel_get, _micropolis.Micropolis_LakeLevel_set)
    __swig_setmethods__["CurveLevel"] = _micropolis.Micropolis_CurveLevel_set
    __swig_getmethods__["CurveLevel"] = _micropolis.Micropolis_CurveLevel_get
    if _newclass:CurveLevel = _swig_property(_micropolis.Micropolis_CurveLevel_get, _micropolis.Micropolis_CurveLevel_set)
    __swig_setmethods__["CreateIsland"] = _micropolis.Micropolis_CreateIsland_set
    __swig_getmethods__["CreateIsland"] = _micropolis.Micropolis_CreateIsland_get
    if _newclass:CreateIsland = _swig_property(_micropolis.Micropolis_CreateIsland_get, _micropolis.Micropolis_CreateIsland_set)
    def GenerateNewCity(*args): return _micropolis.Micropolis_GenerateNewCity(*args)
    def GenerateSomeCity(*args): return _micropolis.Micropolis_GenerateSomeCity(*args)
    def ERand(*args): return _micropolis.Micropolis_ERand(*args)
    def GenerateMap(*args): return _micropolis.Micropolis_GenerateMap(*args)
    def ClearMap(*args): return _micropolis.Micropolis_ClearMap(*args)
    def ClearUnnatural(*args): return _micropolis.Micropolis_ClearUnnatural(*args)
    def MakeNakedIsland(*args): return _micropolis.Micropolis_MakeNakedIsland(*args)
    def MakeIsland(*args): return _micropolis.Micropolis_MakeIsland(*args)
    def MakeLakes(*args): return _micropolis.Micropolis_MakeLakes(*args)
    def GetRandStart(*args): return _micropolis.Micropolis_GetRandStart(*args)
    def MoveMap(*args): return _micropolis.Micropolis_MoveMap(*args)
    def TreeSplash(*args): return _micropolis.Micropolis_TreeSplash(*args)
    def DoTrees(*args): return _micropolis.Micropolis_DoTrees(*args)
    def SmoothRiver(*args): return _micropolis.Micropolis_SmoothRiver(*args)
    def IsTree(*args): return _micropolis.Micropolis_IsTree(*args)
    def SmoothTrees(*args): return _micropolis.Micropolis_SmoothTrees(*args)
    def DoRivers(*args): return _micropolis.Micropolis_DoRivers(*args)
    def DoBRiv(*args): return _micropolis.Micropolis_DoBRiv(*args)
    def DoSRiv(*args): return _micropolis.Micropolis_DoSRiv(*args)
    def PutOnMap(*args): return _micropolis.Micropolis_PutOnMap(*args)
    def BRivPlop(*args): return _micropolis.Micropolis_BRivPlop(*args)
    def SRivPlop(*args): return _micropolis.Micropolis_SRivPlop(*args)
    def SmoothWater(*args): return _micropolis.Micropolis_SmoothWater(*args)
    __swig_setmethods__["NewGraph"] = _micropolis.Micropolis_NewGraph_set
    __swig_getmethods__["NewGraph"] = _micropolis.Micropolis_NewGraph_get
    if _newclass:NewGraph = _swig_property(_micropolis.Micropolis_NewGraph_get, _micropolis.Micropolis_NewGraph_set)
    __swig_setmethods__["AllMax"] = _micropolis.Micropolis_AllMax_set
    __swig_getmethods__["AllMax"] = _micropolis.Micropolis_AllMax_get
    if _newclass:AllMax = _swig_property(_micropolis.Micropolis_AllMax_get, _micropolis.Micropolis_AllMax_set)
    __swig_setmethods__["History10"] = _micropolis.Micropolis_History10_set
    __swig_getmethods__["History10"] = _micropolis.Micropolis_History10_get
    if _newclass:History10 = _swig_property(_micropolis.Micropolis_History10_get, _micropolis.Micropolis_History10_set)
    __swig_setmethods__["History120"] = _micropolis.Micropolis_History120_set
    __swig_getmethods__["History120"] = _micropolis.Micropolis_History120_get
    if _newclass:History120 = _swig_property(_micropolis.Micropolis_History120_get, _micropolis.Micropolis_History120_set)
    __swig_setmethods__["HistoryInitialized"] = _micropolis.Micropolis_HistoryInitialized_set
    __swig_getmethods__["HistoryInitialized"] = _micropolis.Micropolis_HistoryInitialized_get
    if _newclass:HistoryInitialized = _swig_property(_micropolis.Micropolis_HistoryInitialized_get, _micropolis.Micropolis_HistoryInitialized_set)
    __swig_setmethods__["Graph10Max"] = _micropolis.Micropolis_Graph10Max_set
    __swig_getmethods__["Graph10Max"] = _micropolis.Micropolis_Graph10Max_get
    if _newclass:Graph10Max = _swig_property(_micropolis.Micropolis_Graph10Max_get, _micropolis.Micropolis_Graph10Max_set)
    __swig_setmethods__["Graph120Max"] = _micropolis.Micropolis_Graph120Max_set
    __swig_getmethods__["Graph120Max"] = _micropolis.Micropolis_Graph120Max_get
    if _newclass:Graph120Max = _swig_property(_micropolis.Micropolis_Graph120Max_get, _micropolis.Micropolis_Graph120Max_set)
    __swig_setmethods__["GraphUpdateTime"] = _micropolis.Micropolis_GraphUpdateTime_set
    __swig_getmethods__["GraphUpdateTime"] = _micropolis.Micropolis_GraphUpdateTime_get
    if _newclass:GraphUpdateTime = _swig_property(_micropolis.Micropolis_GraphUpdateTime_get, _micropolis.Micropolis_GraphUpdateTime_set)
    __swig_setmethods__["HistName"] = _micropolis.Micropolis_HistName_set
    __swig_getmethods__["HistName"] = _micropolis.Micropolis_HistName_get
    if _newclass:HistName = _swig_property(_micropolis.Micropolis_HistName_get, _micropolis.Micropolis_HistName_set)
    __swig_setmethods__["HistColor"] = _micropolis.Micropolis_HistColor_set
    __swig_getmethods__["HistColor"] = _micropolis.Micropolis_HistColor_get
    if _newclass:HistColor = _swig_property(_micropolis.Micropolis_HistColor_get, _micropolis.Micropolis_HistColor_set)
    def drawMonth(*args): return _micropolis.Micropolis_drawMonth(*args)
    def doAllGraphs(*args): return _micropolis.Micropolis_doAllGraphs(*args)
    def ChangeCensus(*args): return _micropolis.Micropolis_ChangeCensus(*args)
    def graphDoer(*args): return _micropolis.Micropolis_graphDoer(*args)
    def initGraphs(*args): return _micropolis.Micropolis_initGraphs(*args)
    def InitGraphMax(*args): return _micropolis.Micropolis_InitGraphMax(*args)
    def InitWillStuff(*args): return _micropolis.Micropolis_InitWillStuff(*args)
    def ResetMapState(*args): return _micropolis.Micropolis_ResetMapState(*args)
    def ResetEditorState(*args): return _micropolis.Micropolis_ResetEditorState(*args)
    __swig_setmethods__["MicropolisVersion"] = _micropolis.Micropolis_MicropolisVersion_set
    __swig_getmethods__["MicropolisVersion"] = _micropolis.Micropolis_MicropolisVersion_get
    if _newclass:MicropolisVersion = _swig_property(_micropolis.Micropolis_MicropolisVersion_get, _micropolis.Micropolis_MicropolisVersion_set)
    __swig_setmethods__["sim_loops"] = _micropolis.Micropolis_sim_loops_set
    __swig_getmethods__["sim_loops"] = _micropolis.Micropolis_sim_loops_get
    if _newclass:sim_loops = _swig_property(_micropolis.Micropolis_sim_loops_get, _micropolis.Micropolis_sim_loops_set)
    __swig_setmethods__["sim_delay"] = _micropolis.Micropolis_sim_delay_set
    __swig_getmethods__["sim_delay"] = _micropolis.Micropolis_sim_delay_get
    if _newclass:sim_delay = _swig_property(_micropolis.Micropolis_sim_delay_get, _micropolis.Micropolis_sim_delay_set)
    __swig_setmethods__["sim_skips"] = _micropolis.Micropolis_sim_skips_set
    __swig_getmethods__["sim_skips"] = _micropolis.Micropolis_sim_skips_get
    if _newclass:sim_skips = _swig_property(_micropolis.Micropolis_sim_skips_get, _micropolis.Micropolis_sim_skips_set)
    __swig_setmethods__["sim_skip"] = _micropolis.Micropolis_sim_skip_set
    __swig_getmethods__["sim_skip"] = _micropolis.Micropolis_sim_skip_get
    if _newclass:sim_skip = _swig_property(_micropolis.Micropolis_sim_skip_get, _micropolis.Micropolis_sim_skip_set)
    __swig_setmethods__["sim_paused"] = _micropolis.Micropolis_sim_paused_set
    __swig_getmethods__["sim_paused"] = _micropolis.Micropolis_sim_paused_get
    if _newclass:sim_paused = _swig_property(_micropolis.Micropolis_sim_paused_get, _micropolis.Micropolis_sim_paused_set)
    __swig_setmethods__["sim_paused_speed"] = _micropolis.Micropolis_sim_paused_speed_set
    __swig_getmethods__["sim_paused_speed"] = _micropolis.Micropolis_sim_paused_speed_get
    if _newclass:sim_paused_speed = _swig_property(_micropolis.Micropolis_sim_paused_speed_get, _micropolis.Micropolis_sim_paused_speed_set)
    __swig_setmethods__["sim_tty"] = _micropolis.Micropolis_sim_tty_set
    __swig_getmethods__["sim_tty"] = _micropolis.Micropolis_sim_tty_get
    if _newclass:sim_tty = _swig_property(_micropolis.Micropolis_sim_tty_get, _micropolis.Micropolis_sim_tty_set)
    __swig_setmethods__["heat_steps"] = _micropolis.Micropolis_heat_steps_set
    __swig_getmethods__["heat_steps"] = _micropolis.Micropolis_heat_steps_get
    if _newclass:heat_steps = _swig_property(_micropolis.Micropolis_heat_steps_get, _micropolis.Micropolis_heat_steps_set)
    __swig_setmethods__["heat_flow"] = _micropolis.Micropolis_heat_flow_set
    __swig_getmethods__["heat_flow"] = _micropolis.Micropolis_heat_flow_get
    if _newclass:heat_flow = _swig_property(_micropolis.Micropolis_heat_flow_get, _micropolis.Micropolis_heat_flow_set)
    __swig_setmethods__["heat_rule"] = _micropolis.Micropolis_heat_rule_set
    __swig_getmethods__["heat_rule"] = _micropolis.Micropolis_heat_rule_get
    if _newclass:heat_rule = _swig_property(_micropolis.Micropolis_heat_rule_get, _micropolis.Micropolis_heat_rule_set)
    __swig_setmethods__["heat_wrap"] = _micropolis.Micropolis_heat_wrap_set
    __swig_getmethods__["heat_wrap"] = _micropolis.Micropolis_heat_wrap_get
    if _newclass:heat_wrap = _swig_property(_micropolis.Micropolis_heat_wrap_get, _micropolis.Micropolis_heat_wrap_set)
    __swig_setmethods__["start_time"] = _micropolis.Micropolis_start_time_set
    __swig_getmethods__["start_time"] = _micropolis.Micropolis_start_time_get
    if _newclass:start_time = _swig_property(_micropolis.Micropolis_start_time_get, _micropolis.Micropolis_start_time_set)
    __swig_setmethods__["now_time"] = _micropolis.Micropolis_now_time_set
    __swig_getmethods__["now_time"] = _micropolis.Micropolis_now_time_get
    if _newclass:now_time = _swig_property(_micropolis.Micropolis_now_time_get, _micropolis.Micropolis_now_time_set)
    __swig_setmethods__["beat_time"] = _micropolis.Micropolis_beat_time_set
    __swig_getmethods__["beat_time"] = _micropolis.Micropolis_beat_time_get
    if _newclass:beat_time = _swig_property(_micropolis.Micropolis_beat_time_get, _micropolis.Micropolis_beat_time_set)
    __swig_setmethods__["last_now_time"] = _micropolis.Micropolis_last_now_time_set
    __swig_getmethods__["last_now_time"] = _micropolis.Micropolis_last_now_time_get
    if _newclass:last_now_time = _swig_property(_micropolis.Micropolis_last_now_time_get, _micropolis.Micropolis_last_now_time_set)
    __swig_setmethods__["CityFileName"] = _micropolis.Micropolis_CityFileName_set
    __swig_getmethods__["CityFileName"] = _micropolis.Micropolis_CityFileName_get
    if _newclass:CityFileName = _swig_property(_micropolis.Micropolis_CityFileName_get, _micropolis.Micropolis_CityFileName_set)
    __swig_setmethods__["Startup"] = _micropolis.Micropolis_Startup_set
    __swig_getmethods__["Startup"] = _micropolis.Micropolis_Startup_get
    if _newclass:Startup = _swig_property(_micropolis.Micropolis_Startup_get, _micropolis.Micropolis_Startup_set)
    __swig_setmethods__["StartupGameLevel"] = _micropolis.Micropolis_StartupGameLevel_set
    __swig_getmethods__["StartupGameLevel"] = _micropolis.Micropolis_StartupGameLevel_get
    if _newclass:StartupGameLevel = _swig_property(_micropolis.Micropolis_StartupGameLevel_get, _micropolis.Micropolis_StartupGameLevel_set)
    __swig_setmethods__["StartupName"] = _micropolis.Micropolis_StartupName_set
    __swig_getmethods__["StartupName"] = _micropolis.Micropolis_StartupName_get
    if _newclass:StartupName = _swig_property(_micropolis.Micropolis_StartupName_get, _micropolis.Micropolis_StartupName_set)
    __swig_setmethods__["WireMode"] = _micropolis.Micropolis_WireMode_set
    __swig_getmethods__["WireMode"] = _micropolis.Micropolis_WireMode_get
    if _newclass:WireMode = _swig_property(_micropolis.Micropolis_WireMode_get, _micropolis.Micropolis_WireMode_set)
    __swig_setmethods__["MultiPlayerMode"] = _micropolis.Micropolis_MultiPlayerMode_set
    __swig_getmethods__["MultiPlayerMode"] = _micropolis.Micropolis_MultiPlayerMode_get
    if _newclass:MultiPlayerMode = _swig_property(_micropolis.Micropolis_MultiPlayerMode_get, _micropolis.Micropolis_MultiPlayerMode_set)
    __swig_setmethods__["SugarMode"] = _micropolis.Micropolis_SugarMode_set
    __swig_getmethods__["SugarMode"] = _micropolis.Micropolis_SugarMode_get
    if _newclass:SugarMode = _swig_property(_micropolis.Micropolis_SugarMode_get, _micropolis.Micropolis_SugarMode_set)
    __swig_setmethods__["TilesAnimated"] = _micropolis.Micropolis_TilesAnimated_set
    __swig_getmethods__["TilesAnimated"] = _micropolis.Micropolis_TilesAnimated_get
    if _newclass:TilesAnimated = _swig_property(_micropolis.Micropolis_TilesAnimated_get, _micropolis.Micropolis_TilesAnimated_set)
    __swig_setmethods__["DoAnimation"] = _micropolis.Micropolis_DoAnimation_set
    __swig_getmethods__["DoAnimation"] = _micropolis.Micropolis_DoAnimation_get
    if _newclass:DoAnimation = _swig_property(_micropolis.Micropolis_DoAnimation_get, _micropolis.Micropolis_DoAnimation_set)
    __swig_setmethods__["DoMessages"] = _micropolis.Micropolis_DoMessages_set
    __swig_getmethods__["DoMessages"] = _micropolis.Micropolis_DoMessages_get
    if _newclass:DoMessages = _swig_property(_micropolis.Micropolis_DoMessages_get, _micropolis.Micropolis_DoMessages_set)
    __swig_setmethods__["DoNotices"] = _micropolis.Micropolis_DoNotices_set
    __swig_getmethods__["DoNotices"] = _micropolis.Micropolis_DoNotices_get
    if _newclass:DoNotices = _swig_property(_micropolis.Micropolis_DoNotices_get, _micropolis.Micropolis_DoNotices_set)
    __swig_setmethods__["Displays"] = _micropolis.Micropolis_Displays_set
    __swig_getmethods__["Displays"] = _micropolis.Micropolis_Displays_get
    if _newclass:Displays = _swig_property(_micropolis.Micropolis_Displays_get, _micropolis.Micropolis_Displays_set)
    __swig_setmethods__["FirstDisplay"] = _micropolis.Micropolis_FirstDisplay_set
    __swig_getmethods__["FirstDisplay"] = _micropolis.Micropolis_FirstDisplay_get
    if _newclass:FirstDisplay = _swig_property(_micropolis.Micropolis_FirstDisplay_get, _micropolis.Micropolis_FirstDisplay_set)
    __swig_setmethods__["ExitReturn"] = _micropolis.Micropolis_ExitReturn_set
    __swig_getmethods__["ExitReturn"] = _micropolis.Micropolis_ExitReturn_get
    if _newclass:ExitReturn = _swig_property(_micropolis.Micropolis_ExitReturn_get, _micropolis.Micropolis_ExitReturn_set)
    __swig_setmethods__["triedToBailOnce"] = _micropolis.Micropolis_triedToBailOnce_set
    __swig_getmethods__["triedToBailOnce"] = _micropolis.Micropolis_triedToBailOnce_get
    if _newclass:triedToBailOnce = _swig_property(_micropolis.Micropolis_triedToBailOnce_get, _micropolis.Micropolis_triedToBailOnce_set)
    __swig_setmethods__["CellSrc"] = _micropolis.Micropolis_CellSrc_set
    __swig_getmethods__["CellSrc"] = _micropolis.Micropolis_CellSrc_get
    if _newclass:CellSrc = _swig_property(_micropolis.Micropolis_CellSrc_get, _micropolis.Micropolis_CellSrc_set)
    __swig_setmethods__["CellDst"] = _micropolis.Micropolis_CellDst_set
    __swig_getmethods__["CellDst"] = _micropolis.Micropolis_CellDst_get
    if _newclass:CellDst = _swig_property(_micropolis.Micropolis_CellDst_get, _micropolis.Micropolis_CellDst_set)
    __swig_setmethods__["UpdateDelayed"] = _micropolis.Micropolis_UpdateDelayed_set
    __swig_getmethods__["UpdateDelayed"] = _micropolis.Micropolis_UpdateDelayed_get
    if _newclass:UpdateDelayed = _swig_property(_micropolis.Micropolis_UpdateDelayed_get, _micropolis.Micropolis_UpdateDelayed_set)
    __swig_setmethods__["tkMustExit"] = _micropolis.Micropolis_tkMustExit_set
    __swig_getmethods__["tkMustExit"] = _micropolis.Micropolis_tkMustExit_get
    if _newclass:tkMustExit = _swig_property(_micropolis.Micropolis_tkMustExit_get, _micropolis.Micropolis_tkMustExit_set)
    def env_init(*args): return _micropolis.Micropolis_env_init(*args)
    def sim_init(*args): return _micropolis.Micropolis_sim_init(*args)
    def sim_update(*args): return _micropolis.Micropolis_sim_update(*args)
    def sim_heat(*args): return _micropolis.Micropolis_sim_heat(*args)
    def sim_loop(*args): return _micropolis.Micropolis_sim_loop(*args)
    def sim_tick(*args): return _micropolis.Micropolis_sim_tick(*args)
    __swig_setmethods__["LastCityPop"] = _micropolis.Micropolis_LastCityPop_set
    __swig_getmethods__["LastCityPop"] = _micropolis.Micropolis_LastCityPop_get
    if _newclass:LastCityPop = _swig_property(_micropolis.Micropolis_LastCityPop_get, _micropolis.Micropolis_LastCityPop_set)
    __swig_setmethods__["LastCategory"] = _micropolis.Micropolis_LastCategory_set
    __swig_getmethods__["LastCategory"] = _micropolis.Micropolis_LastCategory_get
    if _newclass:LastCategory = _swig_property(_micropolis.Micropolis_LastCategory_get, _micropolis.Micropolis_LastCategory_set)
    __swig_setmethods__["LastPicNum"] = _micropolis.Micropolis_LastPicNum_set
    __swig_getmethods__["LastPicNum"] = _micropolis.Micropolis_LastPicNum_get
    if _newclass:LastPicNum = _swig_property(_micropolis.Micropolis_LastPicNum_get, _micropolis.Micropolis_LastPicNum_set)
    __swig_setmethods__["autoGo"] = _micropolis.Micropolis_autoGo_set
    __swig_getmethods__["autoGo"] = _micropolis.Micropolis_autoGo_get
    if _newclass:autoGo = _swig_property(_micropolis.Micropolis_autoGo_get, _micropolis.Micropolis_autoGo_set)
    __swig_setmethods__["HaveLastMessage"] = _micropolis.Micropolis_HaveLastMessage_set
    __swig_getmethods__["HaveLastMessage"] = _micropolis.Micropolis_HaveLastMessage_get
    if _newclass:HaveLastMessage = _swig_property(_micropolis.Micropolis_HaveLastMessage_get, _micropolis.Micropolis_HaveLastMessage_set)
    __swig_setmethods__["LastMessage"] = _micropolis.Micropolis_LastMessage_set
    __swig_getmethods__["LastMessage"] = _micropolis.Micropolis_LastMessage_get
    if _newclass:LastMessage = _swig_property(_micropolis.Micropolis_LastMessage_get, _micropolis.Micropolis_LastMessage_set)
    def SendMessages(*args): return _micropolis.Micropolis_SendMessages(*args)
    def CheckGrowth(*args): return _micropolis.Micropolis_CheckGrowth(*args)
    def DoScenarioScore(*args): return _micropolis.Micropolis_DoScenarioScore(*args)
    def ClearMes(*args): return _micropolis.Micropolis_ClearMes(*args)
    def SendMes(*args): return _micropolis.Micropolis_SendMes(*args)
    def SendMesAt(*args): return _micropolis.Micropolis_SendMesAt(*args)
    def doMessage(*args): return _micropolis.Micropolis_doMessage(*args)
    def DoAutoGoto(*args): return _micropolis.Micropolis_DoAutoGoto(*args)
    def SetMessageField(*args): return _micropolis.Micropolis_SetMessageField(*args)
    def DoShowPicture(*args): return _micropolis.Micropolis_DoShowPicture(*args)
    def DoLoseGame(*args): return _micropolis.Micropolis_DoLoseGame(*args)
    def DoWinGame(*args): return _micropolis.Micropolis_DoWinGame(*args)
    __swig_setmethods__["PowerStackNum"] = _micropolis.Micropolis_PowerStackNum_set
    __swig_getmethods__["PowerStackNum"] = _micropolis.Micropolis_PowerStackNum_get
    if _newclass:PowerStackNum = _swig_property(_micropolis.Micropolis_PowerStackNum_get, _micropolis.Micropolis_PowerStackNum_set)
    __swig_setmethods__["PowerStackX"] = _micropolis.Micropolis_PowerStackX_set
    __swig_getmethods__["PowerStackX"] = _micropolis.Micropolis_PowerStackX_get
    if _newclass:PowerStackX = _swig_property(_micropolis.Micropolis_PowerStackX_get, _micropolis.Micropolis_PowerStackX_set)
    __swig_setmethods__["PowerStackY"] = _micropolis.Micropolis_PowerStackY_set
    __swig_getmethods__["PowerStackY"] = _micropolis.Micropolis_PowerStackY_get
    if _newclass:PowerStackY = _swig_property(_micropolis.Micropolis_PowerStackY_get, _micropolis.Micropolis_PowerStackY_set)
    __swig_setmethods__["MaxPower"] = _micropolis.Micropolis_MaxPower_set
    __swig_getmethods__["MaxPower"] = _micropolis.Micropolis_MaxPower_get
    if _newclass:MaxPower = _swig_property(_micropolis.Micropolis_MaxPower_get, _micropolis.Micropolis_MaxPower_set)
    __swig_setmethods__["NumPower"] = _micropolis.Micropolis_NumPower_set
    __swig_getmethods__["NumPower"] = _micropolis.Micropolis_NumPower_get
    if _newclass:NumPower = _swig_property(_micropolis.Micropolis_NumPower_get, _micropolis.Micropolis_NumPower_set)
    def MoveMapSim(*args): return _micropolis.Micropolis_MoveMapSim(*args)
    def TestForCond(*args): return _micropolis.Micropolis_TestForCond(*args)
    def DoPowerScan(*args): return _micropolis.Micropolis_DoPowerScan(*args)
    def PushPowerStack(*args): return _micropolis.Micropolis_PushPowerStack(*args)
    def PullPowerStack(*args): return _micropolis.Micropolis_PullPowerStack(*args)
    __swig_setmethods__["nextRandom"] = _micropolis.Micropolis_nextRandom_set
    __swig_getmethods__["nextRandom"] = _micropolis.Micropolis_nextRandom_get
    if _newclass:nextRandom = _swig_property(_micropolis.Micropolis_nextRandom_get, _micropolis.Micropolis_nextRandom_set)
    def sim_rand(*args): return _micropolis.Micropolis_sim_rand(*args)
    def sim_srand(*args): return _micropolis.Micropolis_sim_srand(*args)
    __swig_setmethods__["HomeDir"] = _micropolis.Micropolis_HomeDir_set
    __swig_getmethods__["HomeDir"] = _micropolis.Micropolis_HomeDir_get
    if _newclass:HomeDir = _swig_property(_micropolis.Micropolis_HomeDir_get, _micropolis.Micropolis_HomeDir_set)
    __swig_setmethods__["ResourceDir"] = _micropolis.Micropolis_ResourceDir_set
    __swig_getmethods__["ResourceDir"] = _micropolis.Micropolis_ResourceDir_get
    if _newclass:ResourceDir = _swig_property(_micropolis.Micropolis_ResourceDir_get, _micropolis.Micropolis_ResourceDir_set)
    __swig_setmethods__["KeyDir"] = _micropolis.Micropolis_KeyDir_set
    __swig_getmethods__["KeyDir"] = _micropolis.Micropolis_KeyDir_get
    if _newclass:KeyDir = _swig_property(_micropolis.Micropolis_KeyDir_get, _micropolis.Micropolis_KeyDir_set)
    __swig_setmethods__["HostName"] = _micropolis.Micropolis_HostName_set
    __swig_getmethods__["HostName"] = _micropolis.Micropolis_HostName_get
    if _newclass:HostName = _swig_property(_micropolis.Micropolis_HostName_get, _micropolis.Micropolis_HostName_set)
    __swig_setmethods__["Resources"] = _micropolis.Micropolis_Resources_set
    __swig_getmethods__["Resources"] = _micropolis.Micropolis_Resources_get
    if _newclass:Resources = _swig_property(_micropolis.Micropolis_Resources_get, _micropolis.Micropolis_Resources_set)
    __swig_setmethods__["StringTables"] = _micropolis.Micropolis_StringTables_set
    __swig_getmethods__["StringTables"] = _micropolis.Micropolis_StringTables_get
    if _newclass:StringTables = _swig_property(_micropolis.Micropolis_StringTables_get, _micropolis.Micropolis_StringTables_set)
    def GetResource(*args): return _micropolis.Micropolis_GetResource(*args)
    def ReleaseResource(*args): return _micropolis.Micropolis_ReleaseResource(*args)
    def ResourceSize(*args): return _micropolis.Micropolis_ResourceSize(*args)
    def ResourceName(*args): return _micropolis.Micropolis_ResourceName(*args)
    def ResourceID(*args): return _micropolis.Micropolis_ResourceID(*args)
    def GetIndString(*args): return _micropolis.Micropolis_GetIndString(*args)
    __swig_setmethods__["NewMap"] = _micropolis.Micropolis_NewMap_set
    __swig_getmethods__["NewMap"] = _micropolis.Micropolis_NewMap_get
    if _newclass:NewMap = _swig_property(_micropolis.Micropolis_NewMap_get, _micropolis.Micropolis_NewMap_set)
    __swig_setmethods__["NewMapFlags"] = _micropolis.Micropolis_NewMapFlags_set
    __swig_getmethods__["NewMapFlags"] = _micropolis.Micropolis_NewMapFlags_get
    if _newclass:NewMapFlags = _swig_property(_micropolis.Micropolis_NewMapFlags_get, _micropolis.Micropolis_NewMapFlags_set)
    __swig_setmethods__["CCx"] = _micropolis.Micropolis_CCx_set
    __swig_getmethods__["CCx"] = _micropolis.Micropolis_CCx_get
    if _newclass:CCx = _swig_property(_micropolis.Micropolis_CCx_get, _micropolis.Micropolis_CCx_set)
    __swig_setmethods__["CCy"] = _micropolis.Micropolis_CCy_set
    __swig_getmethods__["CCy"] = _micropolis.Micropolis_CCy_get
    if _newclass:CCy = _swig_property(_micropolis.Micropolis_CCy_get, _micropolis.Micropolis_CCy_set)
    __swig_setmethods__["CCx2"] = _micropolis.Micropolis_CCx2_set
    __swig_getmethods__["CCx2"] = _micropolis.Micropolis_CCx2_get
    if _newclass:CCx2 = _swig_property(_micropolis.Micropolis_CCx2_get, _micropolis.Micropolis_CCx2_set)
    __swig_setmethods__["CCy2"] = _micropolis.Micropolis_CCy2_set
    __swig_getmethods__["CCy2"] = _micropolis.Micropolis_CCy2_get
    if _newclass:CCy2 = _swig_property(_micropolis.Micropolis_CCy2_get, _micropolis.Micropolis_CCy2_set)
    __swig_setmethods__["PolMaxX"] = _micropolis.Micropolis_PolMaxX_set
    __swig_getmethods__["PolMaxX"] = _micropolis.Micropolis_PolMaxX_get
    if _newclass:PolMaxX = _swig_property(_micropolis.Micropolis_PolMaxX_get, _micropolis.Micropolis_PolMaxX_set)
    __swig_setmethods__["PolMaxY"] = _micropolis.Micropolis_PolMaxY_set
    __swig_getmethods__["PolMaxY"] = _micropolis.Micropolis_PolMaxY_get
    if _newclass:PolMaxY = _swig_property(_micropolis.Micropolis_PolMaxY_get, _micropolis.Micropolis_PolMaxY_set)
    __swig_setmethods__["CrimeMaxX"] = _micropolis.Micropolis_CrimeMaxX_set
    __swig_getmethods__["CrimeMaxX"] = _micropolis.Micropolis_CrimeMaxX_get
    if _newclass:CrimeMaxX = _swig_property(_micropolis.Micropolis_CrimeMaxX_get, _micropolis.Micropolis_CrimeMaxX_set)
    __swig_setmethods__["CrimeMaxY"] = _micropolis.Micropolis_CrimeMaxY_set
    __swig_getmethods__["CrimeMaxY"] = _micropolis.Micropolis_CrimeMaxY_get
    if _newclass:CrimeMaxY = _swig_property(_micropolis.Micropolis_CrimeMaxY_get, _micropolis.Micropolis_CrimeMaxY_set)
    __swig_setmethods__["DonDither"] = _micropolis.Micropolis_DonDither_set
    __swig_getmethods__["DonDither"] = _micropolis.Micropolis_DonDither_get
    if _newclass:DonDither = _swig_property(_micropolis.Micropolis_DonDither_get, _micropolis.Micropolis_DonDither_set)
    def FireAnalysis(*args): return _micropolis.Micropolis_FireAnalysis(*args)
    def PopDenScan(*args): return _micropolis.Micropolis_PopDenScan(*args)
    def GetPDen(*args): return _micropolis.Micropolis_GetPDen(*args)
    def PTLScan(*args): return _micropolis.Micropolis_PTLScan(*args)
    def GetPValue(*args): return _micropolis.Micropolis_GetPValue(*args)
    def GetDisCC(*args): return _micropolis.Micropolis_GetDisCC(*args)
    def CrimeScan(*args): return _micropolis.Micropolis_CrimeScan(*args)
    def SmoothTerrain(*args): return _micropolis.Micropolis_SmoothTerrain(*args)
    def DoSmooth(*args): return _micropolis.Micropolis_DoSmooth(*args)
    def DoSmooth2(*args): return _micropolis.Micropolis_DoSmooth2(*args)
    def ClrTemArray(*args): return _micropolis.Micropolis_ClrTemArray(*args)
    def SmoothFSMap(*args): return _micropolis.Micropolis_SmoothFSMap(*args)
    def SmoothPSMap(*args): return _micropolis.Micropolis_SmoothPSMap(*args)
    def DistIntMarket(*args): return _micropolis.Micropolis_DistIntMarket(*args)
    __swig_setmethods__["ValveFlag"] = _micropolis.Micropolis_ValveFlag_set
    __swig_getmethods__["ValveFlag"] = _micropolis.Micropolis_ValveFlag_get
    if _newclass:ValveFlag = _swig_property(_micropolis.Micropolis_ValveFlag_get, _micropolis.Micropolis_ValveFlag_set)
    __swig_setmethods__["CrimeRamp"] = _micropolis.Micropolis_CrimeRamp_set
    __swig_getmethods__["CrimeRamp"] = _micropolis.Micropolis_CrimeRamp_get
    if _newclass:CrimeRamp = _swig_property(_micropolis.Micropolis_CrimeRamp_get, _micropolis.Micropolis_CrimeRamp_set)
    __swig_setmethods__["PolluteRamp"] = _micropolis.Micropolis_PolluteRamp_set
    __swig_getmethods__["PolluteRamp"] = _micropolis.Micropolis_PolluteRamp_get
    if _newclass:PolluteRamp = _swig_property(_micropolis.Micropolis_PolluteRamp_get, _micropolis.Micropolis_PolluteRamp_set)
    __swig_setmethods__["RValve"] = _micropolis.Micropolis_RValve_set
    __swig_getmethods__["RValve"] = _micropolis.Micropolis_RValve_get
    if _newclass:RValve = _swig_property(_micropolis.Micropolis_RValve_get, _micropolis.Micropolis_RValve_set)
    __swig_setmethods__["CValve"] = _micropolis.Micropolis_CValve_set
    __swig_getmethods__["CValve"] = _micropolis.Micropolis_CValve_get
    if _newclass:CValve = _swig_property(_micropolis.Micropolis_CValve_get, _micropolis.Micropolis_CValve_set)
    __swig_setmethods__["IValve"] = _micropolis.Micropolis_IValve_set
    __swig_getmethods__["IValve"] = _micropolis.Micropolis_IValve_get
    if _newclass:IValve = _swig_property(_micropolis.Micropolis_IValve_get, _micropolis.Micropolis_IValve_set)
    __swig_setmethods__["ResCap"] = _micropolis.Micropolis_ResCap_set
    __swig_getmethods__["ResCap"] = _micropolis.Micropolis_ResCap_get
    if _newclass:ResCap = _swig_property(_micropolis.Micropolis_ResCap_get, _micropolis.Micropolis_ResCap_set)
    __swig_setmethods__["ComCap"] = _micropolis.Micropolis_ComCap_set
    __swig_getmethods__["ComCap"] = _micropolis.Micropolis_ComCap_get
    if _newclass:ComCap = _swig_property(_micropolis.Micropolis_ComCap_get, _micropolis.Micropolis_ComCap_set)
    __swig_setmethods__["IndCap"] = _micropolis.Micropolis_IndCap_set
    __swig_getmethods__["IndCap"] = _micropolis.Micropolis_IndCap_get
    if _newclass:IndCap = _swig_property(_micropolis.Micropolis_IndCap_get, _micropolis.Micropolis_IndCap_set)
    __swig_setmethods__["CashFlow"] = _micropolis.Micropolis_CashFlow_set
    __swig_getmethods__["CashFlow"] = _micropolis.Micropolis_CashFlow_get
    if _newclass:CashFlow = _swig_property(_micropolis.Micropolis_CashFlow_get, _micropolis.Micropolis_CashFlow_set)
    __swig_setmethods__["EMarket"] = _micropolis.Micropolis_EMarket_set
    __swig_getmethods__["EMarket"] = _micropolis.Micropolis_EMarket_get
    if _newclass:EMarket = _swig_property(_micropolis.Micropolis_EMarket_get, _micropolis.Micropolis_EMarket_set)
    __swig_setmethods__["DisasterEvent"] = _micropolis.Micropolis_DisasterEvent_set
    __swig_getmethods__["DisasterEvent"] = _micropolis.Micropolis_DisasterEvent_get
    if _newclass:DisasterEvent = _swig_property(_micropolis.Micropolis_DisasterEvent_get, _micropolis.Micropolis_DisasterEvent_set)
    __swig_setmethods__["DisasterWait"] = _micropolis.Micropolis_DisasterWait_set
    __swig_getmethods__["DisasterWait"] = _micropolis.Micropolis_DisasterWait_get
    if _newclass:DisasterWait = _swig_property(_micropolis.Micropolis_DisasterWait_get, _micropolis.Micropolis_DisasterWait_set)
    __swig_setmethods__["ScoreType"] = _micropolis.Micropolis_ScoreType_set
    __swig_getmethods__["ScoreType"] = _micropolis.Micropolis_ScoreType_get
    if _newclass:ScoreType = _swig_property(_micropolis.Micropolis_ScoreType_get, _micropolis.Micropolis_ScoreType_set)
    __swig_setmethods__["ScoreWait"] = _micropolis.Micropolis_ScoreWait_set
    __swig_getmethods__["ScoreWait"] = _micropolis.Micropolis_ScoreWait_get
    if _newclass:ScoreWait = _swig_property(_micropolis.Micropolis_ScoreWait_get, _micropolis.Micropolis_ScoreWait_set)
    __swig_setmethods__["PwrdZCnt"] = _micropolis.Micropolis_PwrdZCnt_set
    __swig_getmethods__["PwrdZCnt"] = _micropolis.Micropolis_PwrdZCnt_get
    if _newclass:PwrdZCnt = _swig_property(_micropolis.Micropolis_PwrdZCnt_get, _micropolis.Micropolis_PwrdZCnt_set)
    __swig_setmethods__["unPwrdZCnt"] = _micropolis.Micropolis_unPwrdZCnt_set
    __swig_getmethods__["unPwrdZCnt"] = _micropolis.Micropolis_unPwrdZCnt_get
    if _newclass:unPwrdZCnt = _swig_property(_micropolis.Micropolis_unPwrdZCnt_get, _micropolis.Micropolis_unPwrdZCnt_set)
    __swig_setmethods__["NewPower"] = _micropolis.Micropolis_NewPower_set
    __swig_getmethods__["NewPower"] = _micropolis.Micropolis_NewPower_get
    if _newclass:NewPower = _swig_property(_micropolis.Micropolis_NewPower_get, _micropolis.Micropolis_NewPower_set)
    __swig_setmethods__["AvCityTax"] = _micropolis.Micropolis_AvCityTax_set
    __swig_getmethods__["AvCityTax"] = _micropolis.Micropolis_AvCityTax_get
    if _newclass:AvCityTax = _swig_property(_micropolis.Micropolis_AvCityTax_get, _micropolis.Micropolis_AvCityTax_set)
    __swig_setmethods__["Scycle"] = _micropolis.Micropolis_Scycle_set
    __swig_getmethods__["Scycle"] = _micropolis.Micropolis_Scycle_get
    if _newclass:Scycle = _swig_property(_micropolis.Micropolis_Scycle_get, _micropolis.Micropolis_Scycle_set)
    __swig_setmethods__["Fcycle"] = _micropolis.Micropolis_Fcycle_set
    __swig_getmethods__["Fcycle"] = _micropolis.Micropolis_Fcycle_get
    if _newclass:Fcycle = _swig_property(_micropolis.Micropolis_Fcycle_get, _micropolis.Micropolis_Fcycle_set)
    __swig_setmethods__["Spdcycle"] = _micropolis.Micropolis_Spdcycle_set
    __swig_getmethods__["Spdcycle"] = _micropolis.Micropolis_Spdcycle_get
    if _newclass:Spdcycle = _swig_property(_micropolis.Micropolis_Spdcycle_get, _micropolis.Micropolis_Spdcycle_set)
    __swig_setmethods__["DoInitialEval"] = _micropolis.Micropolis_DoInitialEval_set
    __swig_getmethods__["DoInitialEval"] = _micropolis.Micropolis_DoInitialEval_get
    if _newclass:DoInitialEval = _swig_property(_micropolis.Micropolis_DoInitialEval_get, _micropolis.Micropolis_DoInitialEval_set)
    __swig_setmethods__["MeltX"] = _micropolis.Micropolis_MeltX_set
    __swig_getmethods__["MeltX"] = _micropolis.Micropolis_MeltX_get
    if _newclass:MeltX = _swig_property(_micropolis.Micropolis_MeltX_get, _micropolis.Micropolis_MeltX_set)
    __swig_setmethods__["MeltY"] = _micropolis.Micropolis_MeltY_set
    __swig_getmethods__["MeltY"] = _micropolis.Micropolis_MeltY_get
    if _newclass:MeltY = _swig_property(_micropolis.Micropolis_MeltY_get, _micropolis.Micropolis_MeltY_set)
    def SimFrame(*args): return _micropolis.Micropolis_SimFrame(*args)
    def Simulate(*args): return _micropolis.Micropolis_Simulate(*args)
    def DoSimInit(*args): return _micropolis.Micropolis_DoSimInit(*args)
    def DoNilPower(*args): return _micropolis.Micropolis_DoNilPower(*args)
    def DecTrafficMem(*args): return _micropolis.Micropolis_DecTrafficMem(*args)
    def DecROGMem(*args): return _micropolis.Micropolis_DecROGMem(*args)
    def InitSimMemory(*args): return _micropolis.Micropolis_InitSimMemory(*args)
    def SimLoadInit(*args): return _micropolis.Micropolis_SimLoadInit(*args)
    def SetCommonInits(*args): return _micropolis.Micropolis_SetCommonInits(*args)
    def SetValves(*args): return _micropolis.Micropolis_SetValves(*args)
    def ClearCensus(*args): return _micropolis.Micropolis_ClearCensus(*args)
    def TakeCensus(*args): return _micropolis.Micropolis_TakeCensus(*args)
    def Take2Census(*args): return _micropolis.Micropolis_Take2Census(*args)
    def CollectTax(*args): return _micropolis.Micropolis_CollectTax(*args)
    def UpdateFundEffects(*args): return _micropolis.Micropolis_UpdateFundEffects(*args)
    def MapScan(*args): return _micropolis.Micropolis_MapScan(*args)
    def DoRail(*args): return _micropolis.Micropolis_DoRail(*args)
    def DoRadTile(*args): return _micropolis.Micropolis_DoRadTile(*args)
    def DoRoad(*args): return _micropolis.Micropolis_DoRoad(*args)
    def DoBridge(*args): return _micropolis.Micropolis_DoBridge(*args)
    def GetBoatDis(*args): return _micropolis.Micropolis_GetBoatDis(*args)
    def DoFire(*args): return _micropolis.Micropolis_DoFire(*args)
    def FireZone(*args): return _micropolis.Micropolis_FireZone(*args)
    def RepairZone(*args): return _micropolis.Micropolis_RepairZone(*args)
    def DoSPZone(*args): return _micropolis.Micropolis_DoSPZone(*args)
    def DrawStadium(*args): return _micropolis.Micropolis_DrawStadium(*args)
    def DoAirport(*args): return _micropolis.Micropolis_DoAirport(*args)
    def CoalSmoke(*args): return _micropolis.Micropolis_CoalSmoke(*args)
    def DoMeltdown(*args): return _micropolis.Micropolis_DoMeltdown(*args)
    def Rand(*args): return _micropolis.Micropolis_Rand(*args)
    def Rand16(*args): return _micropolis.Micropolis_Rand16(*args)
    def Rand16Signed(*args): return _micropolis.Micropolis_Rand16Signed(*args)
    def RandomlySeedRand(*args): return _micropolis.Micropolis_RandomlySeedRand(*args)
    def SeedRand(*args): return _micropolis.Micropolis_SeedRand(*args)
    __swig_setmethods__["spriteList"] = _micropolis.Micropolis_spriteList_set
    __swig_getmethods__["spriteList"] = _micropolis.Micropolis_spriteList_get
    if _newclass:spriteList = _swig_property(_micropolis.Micropolis_spriteList_get, _micropolis.Micropolis_spriteList_set)
    __swig_setmethods__["spriteCount"] = _micropolis.Micropolis_spriteCount_set
    __swig_getmethods__["spriteCount"] = _micropolis.Micropolis_spriteCount_get
    if _newclass:spriteCount = _swig_property(_micropolis.Micropolis_spriteCount_get, _micropolis.Micropolis_spriteCount_set)
    __swig_setmethods__["FreeSprites"] = _micropolis.Micropolis_FreeSprites_set
    __swig_getmethods__["FreeSprites"] = _micropolis.Micropolis_FreeSprites_get
    if _newclass:FreeSprites = _swig_property(_micropolis.Micropolis_FreeSprites_get, _micropolis.Micropolis_FreeSprites_set)
    __swig_setmethods__["GlobalSprites"] = _micropolis.Micropolis_GlobalSprites_set
    __swig_getmethods__["GlobalSprites"] = _micropolis.Micropolis_GlobalSprites_get
    if _newclass:GlobalSprites = _swig_property(_micropolis.Micropolis_GlobalSprites_get, _micropolis.Micropolis_GlobalSprites_set)
    __swig_setmethods__["CrashX"] = _micropolis.Micropolis_CrashX_set
    __swig_getmethods__["CrashX"] = _micropolis.Micropolis_CrashX_get
    if _newclass:CrashX = _swig_property(_micropolis.Micropolis_CrashX_get, _micropolis.Micropolis_CrashX_set)
    __swig_setmethods__["CrashY"] = _micropolis.Micropolis_CrashY_set
    __swig_getmethods__["CrashY"] = _micropolis.Micropolis_CrashY_get
    if _newclass:CrashY = _swig_property(_micropolis.Micropolis_CrashY_get, _micropolis.Micropolis_CrashY_set)
    __swig_setmethods__["absDist"] = _micropolis.Micropolis_absDist_set
    __swig_getmethods__["absDist"] = _micropolis.Micropolis_absDist_get
    if _newclass:absDist = _swig_property(_micropolis.Micropolis_absDist_get, _micropolis.Micropolis_absDist_set)
    __swig_setmethods__["Cycle"] = _micropolis.Micropolis_Cycle_set
    __swig_getmethods__["Cycle"] = _micropolis.Micropolis_Cycle_get
    if _newclass:Cycle = _swig_property(_micropolis.Micropolis_Cycle_get, _micropolis.Micropolis_Cycle_set)
    def NewSprite(*args): return _micropolis.Micropolis_NewSprite(*args)
    def InitSprite(*args): return _micropolis.Micropolis_InitSprite(*args)
    def DestroyAllSprites(*args): return _micropolis.Micropolis_DestroyAllSprites(*args)
    def DestroySprite(*args): return _micropolis.Micropolis_DestroySprite(*args)
    def GetSprite(*args): return _micropolis.Micropolis_GetSprite(*args)
    def MakeSprite(*args): return _micropolis.Micropolis_MakeSprite(*args)
    def MakeNewSprite(*args): return _micropolis.Micropolis_MakeNewSprite(*args)
    def DrawObjects(*args): return _micropolis.Micropolis_DrawObjects(*args)
    def DrawSprite(*args): return _micropolis.Micropolis_DrawSprite(*args)
    def GetChar(*args): return _micropolis.Micropolis_GetChar(*args)
    def TurnTo(*args): return _micropolis.Micropolis_TurnTo(*args)
    def TryOther(*args): return _micropolis.Micropolis_TryOther(*args)
    def SpriteNotInBounds(*args): return _micropolis.Micropolis_SpriteNotInBounds(*args)
    def GetDir(*args): return _micropolis.Micropolis_GetDir(*args)
    def GetDis(*args): return _micropolis.Micropolis_GetDis(*args)
    def CheckSpriteCollision(*args): return _micropolis.Micropolis_CheckSpriteCollision(*args)
    def MoveObjects(*args): return _micropolis.Micropolis_MoveObjects(*args)
    def DoTrainSprite(*args): return _micropolis.Micropolis_DoTrainSprite(*args)
    def DoCopterSprite(*args): return _micropolis.Micropolis_DoCopterSprite(*args)
    def DoAirplaneSprite(*args): return _micropolis.Micropolis_DoAirplaneSprite(*args)
    def DoShipSprite(*args): return _micropolis.Micropolis_DoShipSprite(*args)
    def DoMonsterSprite(*args): return _micropolis.Micropolis_DoMonsterSprite(*args)
    def DoTornadoSprite(*args): return _micropolis.Micropolis_DoTornadoSprite(*args)
    def DoExplosionSprite(*args): return _micropolis.Micropolis_DoExplosionSprite(*args)
    def DoBusSprite(*args): return _micropolis.Micropolis_DoBusSprite(*args)
    def CanDriveOn(*args): return _micropolis.Micropolis_CanDriveOn(*args)
    def ExplodeSprite(*args): return _micropolis.Micropolis_ExplodeSprite(*args)
    def checkWet(*args): return _micropolis.Micropolis_checkWet(*args)
    def Destroy(*args): return _micropolis.Micropolis_Destroy(*args)
    def OFireZone(*args): return _micropolis.Micropolis_OFireZone(*args)
    def StartFire(*args): return _micropolis.Micropolis_StartFire(*args)
    def GenerateTrain(*args): return _micropolis.Micropolis_GenerateTrain(*args)
    def GenerateBus(*args): return _micropolis.Micropolis_GenerateBus(*args)
    def GenerateShip(*args): return _micropolis.Micropolis_GenerateShip(*args)
    def MakeShipHere(*args): return _micropolis.Micropolis_MakeShipHere(*args)
    def MakeMonster(*args): return _micropolis.Micropolis_MakeMonster(*args)
    def MonsterHere(*args): return _micropolis.Micropolis_MonsterHere(*args)
    def GenerateCopter(*args): return _micropolis.Micropolis_GenerateCopter(*args)
    def GeneratePlane(*args): return _micropolis.Micropolis_GeneratePlane(*args)
    def MakeTornado(*args): return _micropolis.Micropolis_MakeTornado(*args)
    def MakeExplosion(*args): return _micropolis.Micropolis_MakeExplosion(*args)
    def MakeExplosionAt(*args): return _micropolis.Micropolis_MakeExplosionAt(*args)
    __swig_setmethods__["TotalFunds"] = _micropolis.Micropolis_TotalFunds_set
    __swig_getmethods__["TotalFunds"] = _micropolis.Micropolis_TotalFunds_get
    if _newclass:TotalFunds = _swig_property(_micropolis.Micropolis_TotalFunds_get, _micropolis.Micropolis_TotalFunds_set)
    __swig_setmethods__["PunishCnt"] = _micropolis.Micropolis_PunishCnt_set
    __swig_getmethods__["PunishCnt"] = _micropolis.Micropolis_PunishCnt_get
    if _newclass:PunishCnt = _swig_property(_micropolis.Micropolis_PunishCnt_get, _micropolis.Micropolis_PunishCnt_set)
    __swig_setmethods__["autoBulldoze"] = _micropolis.Micropolis_autoBulldoze_set
    __swig_getmethods__["autoBulldoze"] = _micropolis.Micropolis_autoBulldoze_get
    if _newclass:autoBulldoze = _swig_property(_micropolis.Micropolis_autoBulldoze_get, _micropolis.Micropolis_autoBulldoze_set)
    __swig_setmethods__["autoBudget"] = _micropolis.Micropolis_autoBudget_set
    __swig_getmethods__["autoBudget"] = _micropolis.Micropolis_autoBudget_get
    if _newclass:autoBudget = _swig_property(_micropolis.Micropolis_autoBudget_get, _micropolis.Micropolis_autoBudget_set)
    __swig_setmethods__["LastMesTime"] = _micropolis.Micropolis_LastMesTime_set
    __swig_getmethods__["LastMesTime"] = _micropolis.Micropolis_LastMesTime_get
    if _newclass:LastMesTime = _swig_property(_micropolis.Micropolis_LastMesTime_get, _micropolis.Micropolis_LastMesTime_set)
    __swig_setmethods__["GameLevel"] = _micropolis.Micropolis_GameLevel_set
    __swig_getmethods__["GameLevel"] = _micropolis.Micropolis_GameLevel_get
    if _newclass:GameLevel = _swig_property(_micropolis.Micropolis_GameLevel_get, _micropolis.Micropolis_GameLevel_set)
    __swig_setmethods__["InitSimLoad"] = _micropolis.Micropolis_InitSimLoad_set
    __swig_getmethods__["InitSimLoad"] = _micropolis.Micropolis_InitSimLoad_get
    if _newclass:InitSimLoad = _swig_property(_micropolis.Micropolis_InitSimLoad_get, _micropolis.Micropolis_InitSimLoad_set)
    __swig_setmethods__["ScenarioID"] = _micropolis.Micropolis_ScenarioID_set
    __swig_getmethods__["ScenarioID"] = _micropolis.Micropolis_ScenarioID_get
    if _newclass:ScenarioID = _swig_property(_micropolis.Micropolis_ScenarioID_get, _micropolis.Micropolis_ScenarioID_set)
    __swig_setmethods__["SimSpeed"] = _micropolis.Micropolis_SimSpeed_set
    __swig_getmethods__["SimSpeed"] = _micropolis.Micropolis_SimSpeed_get
    if _newclass:SimSpeed = _swig_property(_micropolis.Micropolis_SimSpeed_get, _micropolis.Micropolis_SimSpeed_set)
    __swig_setmethods__["SimMetaSpeed"] = _micropolis.Micropolis_SimMetaSpeed_set
    __swig_getmethods__["SimMetaSpeed"] = _micropolis.Micropolis_SimMetaSpeed_get
    if _newclass:SimMetaSpeed = _swig_property(_micropolis.Micropolis_SimMetaSpeed_get, _micropolis.Micropolis_SimMetaSpeed_set)
    __swig_setmethods__["UserSoundOn"] = _micropolis.Micropolis_UserSoundOn_set
    __swig_getmethods__["UserSoundOn"] = _micropolis.Micropolis_UserSoundOn_get
    if _newclass:UserSoundOn = _swig_property(_micropolis.Micropolis_UserSoundOn_get, _micropolis.Micropolis_UserSoundOn_set)
    __swig_setmethods__["CityName"] = _micropolis.Micropolis_CityName_set
    __swig_getmethods__["CityName"] = _micropolis.Micropolis_CityName_get
    if _newclass:CityName = _swig_property(_micropolis.Micropolis_CityName_get, _micropolis.Micropolis_CityName_set)
    __swig_setmethods__["NoDisasters"] = _micropolis.Micropolis_NoDisasters_set
    __swig_getmethods__["NoDisasters"] = _micropolis.Micropolis_NoDisasters_get
    if _newclass:NoDisasters = _swig_property(_micropolis.Micropolis_NoDisasters_get, _micropolis.Micropolis_NoDisasters_set)
    __swig_setmethods__["MesNum"] = _micropolis.Micropolis_MesNum_set
    __swig_getmethods__["MesNum"] = _micropolis.Micropolis_MesNum_get
    if _newclass:MesNum = _swig_property(_micropolis.Micropolis_MesNum_get, _micropolis.Micropolis_MesNum_set)
    __swig_setmethods__["EvalChanged"] = _micropolis.Micropolis_EvalChanged_set
    __swig_getmethods__["EvalChanged"] = _micropolis.Micropolis_EvalChanged_get
    if _newclass:EvalChanged = _swig_property(_micropolis.Micropolis_EvalChanged_get, _micropolis.Micropolis_EvalChanged_set)
    __swig_setmethods__["flagBlink"] = _micropolis.Micropolis_flagBlink_set
    __swig_getmethods__["flagBlink"] = _micropolis.Micropolis_flagBlink_get
    if _newclass:flagBlink = _swig_property(_micropolis.Micropolis_flagBlink_get, _micropolis.Micropolis_flagBlink_set)
    __swig_setmethods__["callbackHook"] = _micropolis.Micropolis_callbackHook_set
    __swig_getmethods__["callbackHook"] = _micropolis.Micropolis_callbackHook_get
    if _newclass:callbackHook = _swig_property(_micropolis.Micropolis_callbackHook_get, _micropolis.Micropolis_callbackHook_set)
    __swig_setmethods__["callbackData"] = _micropolis.Micropolis_callbackData_set
    __swig_getmethods__["callbackData"] = _micropolis.Micropolis_callbackData_get
    if _newclass:callbackData = _swig_property(_micropolis.Micropolis_callbackData_get, _micropolis.Micropolis_callbackData_set)
    __swig_setmethods__["userData"] = _micropolis.Micropolis_userData_set
    __swig_getmethods__["userData"] = _micropolis.Micropolis_userData_get
    if _newclass:userData = _swig_property(_micropolis.Micropolis_userData_get, _micropolis.Micropolis_userData_set)
    def Spend(*args): return _micropolis.Micropolis_Spend(*args)
    def SetFunds(*args): return _micropolis.Micropolis_SetFunds(*args)
    def TickCount(*args): return _micropolis.Micropolis_TickCount(*args)
    def NewPtr(*args): return _micropolis.Micropolis_NewPtr(*args)
    def FreePtr(*args): return _micropolis.Micropolis_FreePtr(*args)
    def GameStarted(*args): return _micropolis.Micropolis_GameStarted(*args)
    def DoPlayNewCity(*args): return _micropolis.Micropolis_DoPlayNewCity(*args)
    def DoReallyStartGame(*args): return _micropolis.Micropolis_DoReallyStartGame(*args)
    def DoStartLoad(*args): return _micropolis.Micropolis_DoStartLoad(*args)
    def DoStartScenario(*args): return _micropolis.Micropolis_DoStartScenario(*args)
    def DropFireBombs(*args): return _micropolis.Micropolis_DropFireBombs(*args)
    def InitGame(*args): return _micropolis.Micropolis_InitGame(*args)
    def ReallyQuit(*args): return _micropolis.Micropolis_ReallyQuit(*args)
    def Callback(*args): return _micropolis.Micropolis_Callback(*args)
    def DoEarthquake(*args): return _micropolis.Micropolis_DoEarthquake(*args)
    def StopEarthquake(*args): return _micropolis.Micropolis_StopEarthquake(*args)
    def InvalidateEditors(*args): return _micropolis.Micropolis_InvalidateEditors(*args)
    def InvalidateMaps(*args): return _micropolis.Micropolis_InvalidateMaps(*args)
    def ckalloc(*args): return _micropolis.Micropolis_ckalloc(*args)
    def ckfree(*args): return _micropolis.Micropolis_ckfree(*args)
    def Kick(*args): return _micropolis.Micropolis_Kick(*args)
    def ResetLastKeys(*args): return _micropolis.Micropolis_ResetLastKeys(*args)
    def InitializeSound(*args): return _micropolis.Micropolis_InitializeSound(*args)
    def MakeSound(*args): return _micropolis.Micropolis_MakeSound(*args)
    def StartMicropolisTimer(*args): return _micropolis.Micropolis_StartMicropolisTimer(*args)
    def StopMicropolisTimer(*args): return _micropolis.Micropolis_StopMicropolisTimer(*args)
    def getTile(*args): return _micropolis.Micropolis_getTile(*args)
    def getMapBuffer(*args): return _micropolis.Micropolis_getMapBuffer(*args)
    def NewInk(*args): return _micropolis.Micropolis_NewInk(*args)
    def FreeInk(*args): return _micropolis.Micropolis_FreeInk(*args)
    def StartInk(*args): return _micropolis.Micropolis_StartInk(*args)
    def AddInk(*args): return _micropolis.Micropolis_AddInk(*args)
    def EraseOverlay(*args): return _micropolis.Micropolis_EraseOverlay(*args)
    __swig_setmethods__["OverRide"] = _micropolis.Micropolis_OverRide_set
    __swig_getmethods__["OverRide"] = _micropolis.Micropolis_OverRide_get
    if _newclass:OverRide = _swig_property(_micropolis.Micropolis_OverRide_get, _micropolis.Micropolis_OverRide_set)
    __swig_setmethods__["Expensive"] = _micropolis.Micropolis_Expensive_set
    __swig_getmethods__["Expensive"] = _micropolis.Micropolis_Expensive_get
    if _newclass:Expensive = _swig_property(_micropolis.Micropolis_Expensive_get, _micropolis.Micropolis_Expensive_set)
    __swig_setmethods__["Players"] = _micropolis.Micropolis_Players_set
    __swig_getmethods__["Players"] = _micropolis.Micropolis_Players_get
    if _newclass:Players = _swig_property(_micropolis.Micropolis_Players_get, _micropolis.Micropolis_Players_set)
    __swig_setmethods__["Votes"] = _micropolis.Micropolis_Votes_set
    __swig_getmethods__["Votes"] = _micropolis.Micropolis_Votes_get
    if _newclass:Votes = _swig_property(_micropolis.Micropolis_Votes_get, _micropolis.Micropolis_Votes_set)
    __swig_setmethods__["PendingTool"] = _micropolis.Micropolis_PendingTool_set
    __swig_getmethods__["PendingTool"] = _micropolis.Micropolis_PendingTool_get
    if _newclass:PendingTool = _swig_property(_micropolis.Micropolis_PendingTool_get, _micropolis.Micropolis_PendingTool_set)
    __swig_setmethods__["PendingX"] = _micropolis.Micropolis_PendingX_set
    __swig_getmethods__["PendingX"] = _micropolis.Micropolis_PendingX_get
    if _newclass:PendingX = _swig_property(_micropolis.Micropolis_PendingX_get, _micropolis.Micropolis_PendingX_set)
    __swig_setmethods__["PendingY"] = _micropolis.Micropolis_PendingY_set
    __swig_getmethods__["PendingY"] = _micropolis.Micropolis_PendingY_get
    if _newclass:PendingY = _swig_property(_micropolis.Micropolis_PendingY_get, _micropolis.Micropolis_PendingY_set)
    __swig_setmethods__["OldInk"] = _micropolis.Micropolis_OldInk_set
    __swig_getmethods__["OldInk"] = _micropolis.Micropolis_OldInk_get
    if _newclass:OldInk = _swig_property(_micropolis.Micropolis_OldInk_get, _micropolis.Micropolis_OldInk_set)
    __swig_setmethods__["overlay"] = _micropolis.Micropolis_overlay_set
    __swig_getmethods__["overlay"] = _micropolis.Micropolis_overlay_get
    if _newclass:overlay = _swig_property(_micropolis.Micropolis_overlay_get, _micropolis.Micropolis_overlay_set)
    __swig_setmethods__["track_ink"] = _micropolis.Micropolis_track_ink_set
    __swig_getmethods__["track_ink"] = _micropolis.Micropolis_track_ink_get
    if _newclass:track_ink = _swig_property(_micropolis.Micropolis_track_ink_get, _micropolis.Micropolis_track_ink_set)
    __swig_setmethods__["last_x"] = _micropolis.Micropolis_last_x_set
    __swig_getmethods__["last_x"] = _micropolis.Micropolis_last_x_get
    if _newclass:last_x = _swig_property(_micropolis.Micropolis_last_x_get, _micropolis.Micropolis_last_x_set)
    __swig_setmethods__["last_y"] = _micropolis.Micropolis_last_y_set
    __swig_getmethods__["last_y"] = _micropolis.Micropolis_last_y_get
    if _newclass:last_y = _swig_property(_micropolis.Micropolis_last_y_get, _micropolis.Micropolis_last_y_set)
    __swig_setmethods__["tool_x"] = _micropolis.Micropolis_tool_x_set
    __swig_getmethods__["tool_x"] = _micropolis.Micropolis_tool_x_get
    if _newclass:tool_x = _swig_property(_micropolis.Micropolis_tool_x_get, _micropolis.Micropolis_tool_x_set)
    __swig_setmethods__["tool_y"] = _micropolis.Micropolis_tool_y_set
    __swig_getmethods__["tool_y"] = _micropolis.Micropolis_tool_y_get
    if _newclass:tool_y = _swig_property(_micropolis.Micropolis_tool_y_get, _micropolis.Micropolis_tool_y_set)
    __swig_setmethods__["CostOf"] = _micropolis.Micropolis_CostOf_set
    __swig_getmethods__["CostOf"] = _micropolis.Micropolis_CostOf_get
    if _newclass:CostOf = _swig_property(_micropolis.Micropolis_CostOf_get, _micropolis.Micropolis_CostOf_set)
    __swig_setmethods__["toolSize"] = _micropolis.Micropolis_toolSize_set
    __swig_getmethods__["toolSize"] = _micropolis.Micropolis_toolSize_get
    if _newclass:toolSize = _swig_property(_micropolis.Micropolis_toolSize_get, _micropolis.Micropolis_toolSize_set)
    __swig_setmethods__["toolOffset"] = _micropolis.Micropolis_toolOffset_set
    __swig_getmethods__["toolOffset"] = _micropolis.Micropolis_toolOffset_get
    if _newclass:toolOffset = _swig_property(_micropolis.Micropolis_toolOffset_get, _micropolis.Micropolis_toolOffset_set)
    __swig_setmethods__["toolColors"] = _micropolis.Micropolis_toolColors_set
    __swig_getmethods__["toolColors"] = _micropolis.Micropolis_toolColors_get
    if _newclass:toolColors = _swig_property(_micropolis.Micropolis_toolColors_get, _micropolis.Micropolis_toolColors_set)
    def putDownPark(*args): return _micropolis.Micropolis_putDownPark(*args)
    def putDownNetwork(*args): return _micropolis.Micropolis_putDownNetwork(*args)
    def checkBigZone(*args): return _micropolis.Micropolis_checkBigZone(*args)
    def tally(*args): return _micropolis.Micropolis_tally(*args)
    def checkSize(*args): return _micropolis.Micropolis_checkSize(*args)
    def check3x3border(*args): return _micropolis.Micropolis_check3x3border(*args)
    def check3x3(*args): return _micropolis.Micropolis_check3x3(*args)
    def check4x4border(*args): return _micropolis.Micropolis_check4x4border(*args)
    def check4x4(*args): return _micropolis.Micropolis_check4x4(*args)
    def check6x6border(*args): return _micropolis.Micropolis_check6x6border(*args)
    def check6x6(*args): return _micropolis.Micropolis_check6x6(*args)
    def getDensityStr(*args): return _micropolis.Micropolis_getDensityStr(*args)
    def doZoneStatus(*args): return _micropolis.Micropolis_doZoneStatus(*args)
    def DoShowZoneStatus(*args): return _micropolis.Micropolis_DoShowZoneStatus(*args)
    def put3x3Rubble(*args): return _micropolis.Micropolis_put3x3Rubble(*args)
    def put4x4Rubble(*args): return _micropolis.Micropolis_put4x4Rubble(*args)
    def put6x6Rubble(*args): return _micropolis.Micropolis_put6x6Rubble(*args)
    def DidTool(*args): return _micropolis.Micropolis_DidTool(*args)
    def query_tool(*args): return _micropolis.Micropolis_query_tool(*args)
    def bulldozer_tool(*args): return _micropolis.Micropolis_bulldozer_tool(*args)
    def road_tool(*args): return _micropolis.Micropolis_road_tool(*args)
    def rail_tool(*args): return _micropolis.Micropolis_rail_tool(*args)
    def wire_tool(*args): return _micropolis.Micropolis_wire_tool(*args)
    def park_tool(*args): return _micropolis.Micropolis_park_tool(*args)
    def residential_tool(*args): return _micropolis.Micropolis_residential_tool(*args)
    def commercial_tool(*args): return _micropolis.Micropolis_commercial_tool(*args)
    def industrial_tool(*args): return _micropolis.Micropolis_industrial_tool(*args)
    def police_dept_tool(*args): return _micropolis.Micropolis_police_dept_tool(*args)
    def fire_dept_tool(*args): return _micropolis.Micropolis_fire_dept_tool(*args)
    def stadium_tool(*args): return _micropolis.Micropolis_stadium_tool(*args)
    def coal_power_plant_tool(*args): return _micropolis.Micropolis_coal_power_plant_tool(*args)
    def nuclear_power_plant_tool(*args): return _micropolis.Micropolis_nuclear_power_plant_tool(*args)
    def seaport_tool(*args): return _micropolis.Micropolis_seaport_tool(*args)
    def airport_tool(*args): return _micropolis.Micropolis_airport_tool(*args)
    def network_tool(*args): return _micropolis.Micropolis_network_tool(*args)
    def ChalkTool(*args): return _micropolis.Micropolis_ChalkTool(*args)
    def ChalkStart(*args): return _micropolis.Micropolis_ChalkStart(*args)
    def ChalkTo(*args): return _micropolis.Micropolis_ChalkTo(*args)
    def EraserTool(*args): return _micropolis.Micropolis_EraserTool(*args)
    def InkInBox(*args): return _micropolis.Micropolis_InkInBox(*args)
    def EraserStart(*args): return _micropolis.Micropolis_EraserStart(*args)
    def EraserTo(*args): return _micropolis.Micropolis_EraserTo(*args)
    def do_tool(*args): return _micropolis.Micropolis_do_tool(*args)
    def DoTool(*args): return _micropolis.Micropolis_DoTool(*args)
    def ToolDown(*args): return _micropolis.Micropolis_ToolDown(*args)
    def ToolUp(*args): return _micropolis.Micropolis_ToolUp(*args)
    def ToolDrag(*args): return _micropolis.Micropolis_ToolDrag(*args)
    def DoPendTool(*args): return _micropolis.Micropolis_DoPendTool(*args)
    __swig_setmethods__["PosStackN"] = _micropolis.Micropolis_PosStackN_set
    __swig_getmethods__["PosStackN"] = _micropolis.Micropolis_PosStackN_get
    if _newclass:PosStackN = _swig_property(_micropolis.Micropolis_PosStackN_get, _micropolis.Micropolis_PosStackN_set)
    __swig_setmethods__["SMapXStack"] = _micropolis.Micropolis_SMapXStack_set
    __swig_getmethods__["SMapXStack"] = _micropolis.Micropolis_SMapXStack_get
    if _newclass:SMapXStack = _swig_property(_micropolis.Micropolis_SMapXStack_get, _micropolis.Micropolis_SMapXStack_set)
    __swig_setmethods__["SMapYStack"] = _micropolis.Micropolis_SMapYStack_set
    __swig_getmethods__["SMapYStack"] = _micropolis.Micropolis_SMapYStack_get
    if _newclass:SMapYStack = _swig_property(_micropolis.Micropolis_SMapYStack_get, _micropolis.Micropolis_SMapYStack_set)
    __swig_setmethods__["LDir"] = _micropolis.Micropolis_LDir_set
    __swig_getmethods__["LDir"] = _micropolis.Micropolis_LDir_get
    if _newclass:LDir = _swig_property(_micropolis.Micropolis_LDir_get, _micropolis.Micropolis_LDir_set)
    __swig_setmethods__["Zsource"] = _micropolis.Micropolis_Zsource_set
    __swig_getmethods__["Zsource"] = _micropolis.Micropolis_Zsource_get
    if _newclass:Zsource = _swig_property(_micropolis.Micropolis_Zsource_get, _micropolis.Micropolis_Zsource_set)
    __swig_setmethods__["TrafMaxX"] = _micropolis.Micropolis_TrafMaxX_set
    __swig_getmethods__["TrafMaxX"] = _micropolis.Micropolis_TrafMaxX_get
    if _newclass:TrafMaxX = _swig_property(_micropolis.Micropolis_TrafMaxX_get, _micropolis.Micropolis_TrafMaxX_set)
    __swig_setmethods__["TrafMaxY"] = _micropolis.Micropolis_TrafMaxY_set
    __swig_getmethods__["TrafMaxY"] = _micropolis.Micropolis_TrafMaxY_get
    if _newclass:TrafMaxY = _swig_property(_micropolis.Micropolis_TrafMaxY_get, _micropolis.Micropolis_TrafMaxY_set)
    def MakeTraf(*args): return _micropolis.Micropolis_MakeTraf(*args)
    def SetTrafMem(*args): return _micropolis.Micropolis_SetTrafMem(*args)
    def PushPos(*args): return _micropolis.Micropolis_PushPos(*args)
    def PullPos(*args): return _micropolis.Micropolis_PullPos(*args)
    def FindPRoad(*args): return _micropolis.Micropolis_FindPRoad(*args)
    def FindPTele(*args): return _micropolis.Micropolis_FindPTele(*args)
    def TryDrive(*args): return _micropolis.Micropolis_TryDrive(*args)
    def TryGo(*args): return _micropolis.Micropolis_TryGo(*args)
    def GetFromMap(*args): return _micropolis.Micropolis_GetFromMap(*args)
    def DriveDone(*args): return _micropolis.Micropolis_DriveDone(*args)
    def RoadTest(*args): return _micropolis.Micropolis_RoadTest(*args)
    __swig_setmethods__["MustUpdateFunds"] = _micropolis.Micropolis_MustUpdateFunds_set
    __swig_getmethods__["MustUpdateFunds"] = _micropolis.Micropolis_MustUpdateFunds_get
    if _newclass:MustUpdateFunds = _swig_property(_micropolis.Micropolis_MustUpdateFunds_get, _micropolis.Micropolis_MustUpdateFunds_set)
    __swig_setmethods__["MustUpdateOptions"] = _micropolis.Micropolis_MustUpdateOptions_set
    __swig_getmethods__["MustUpdateOptions"] = _micropolis.Micropolis_MustUpdateOptions_get
    if _newclass:MustUpdateOptions = _swig_property(_micropolis.Micropolis_MustUpdateOptions_get, _micropolis.Micropolis_MustUpdateOptions_set)
    __swig_setmethods__["LastCityTime"] = _micropolis.Micropolis_LastCityTime_set
    __swig_getmethods__["LastCityTime"] = _micropolis.Micropolis_LastCityTime_get
    if _newclass:LastCityTime = _swig_property(_micropolis.Micropolis_LastCityTime_get, _micropolis.Micropolis_LastCityTime_set)
    __swig_setmethods__["LastCityYear"] = _micropolis.Micropolis_LastCityYear_set
    __swig_getmethods__["LastCityYear"] = _micropolis.Micropolis_LastCityYear_get
    if _newclass:LastCityYear = _swig_property(_micropolis.Micropolis_LastCityYear_get, _micropolis.Micropolis_LastCityYear_set)
    __swig_setmethods__["LastCityMonth"] = _micropolis.Micropolis_LastCityMonth_set
    __swig_getmethods__["LastCityMonth"] = _micropolis.Micropolis_LastCityMonth_get
    if _newclass:LastCityMonth = _swig_property(_micropolis.Micropolis_LastCityMonth_get, _micropolis.Micropolis_LastCityMonth_set)
    __swig_setmethods__["LastFunds"] = _micropolis.Micropolis_LastFunds_set
    __swig_getmethods__["LastFunds"] = _micropolis.Micropolis_LastFunds_get
    if _newclass:LastFunds = _swig_property(_micropolis.Micropolis_LastFunds_get, _micropolis.Micropolis_LastFunds_set)
    __swig_setmethods__["LastR"] = _micropolis.Micropolis_LastR_set
    __swig_getmethods__["LastR"] = _micropolis.Micropolis_LastR_get
    if _newclass:LastR = _swig_property(_micropolis.Micropolis_LastR_get, _micropolis.Micropolis_LastR_set)
    __swig_setmethods__["LastC"] = _micropolis.Micropolis_LastC_set
    __swig_getmethods__["LastC"] = _micropolis.Micropolis_LastC_get
    if _newclass:LastC = _swig_property(_micropolis.Micropolis_LastC_get, _micropolis.Micropolis_LastC_set)
    __swig_setmethods__["LastI"] = _micropolis.Micropolis_LastI_set
    __swig_getmethods__["LastI"] = _micropolis.Micropolis_LastI_get
    if _newclass:LastI = _swig_property(_micropolis.Micropolis_LastI_get, _micropolis.Micropolis_LastI_set)
    __swig_setmethods__["CityDate"] = _micropolis.Micropolis_CityDate_set
    __swig_getmethods__["CityDate"] = _micropolis.Micropolis_CityDate_get
    if _newclass:CityDate = _swig_property(_micropolis.Micropolis_CityDate_get, _micropolis.Micropolis_CityDate_set)
    __swig_setmethods__["dateStr"] = _micropolis.Micropolis_dateStr_set
    __swig_getmethods__["dateStr"] = _micropolis.Micropolis_dateStr_get
    if _newclass:dateStr = _swig_property(_micropolis.Micropolis_dateStr_get, _micropolis.Micropolis_dateStr_set)
    def DoUpdateHeads(*args): return _micropolis.Micropolis_DoUpdateHeads(*args)
    def UpdateEditors(*args): return _micropolis.Micropolis_UpdateEditors(*args)
    def UpdateMaps(*args): return _micropolis.Micropolis_UpdateMaps(*args)
    def UpdateGraphs(*args): return _micropolis.Micropolis_UpdateGraphs(*args)
    def UpdateEvaluation(*args): return _micropolis.Micropolis_UpdateEvaluation(*args)
    def UpdateHeads(*args): return _micropolis.Micropolis_UpdateHeads(*args)
    def UpdateFunds(*args): return _micropolis.Micropolis_UpdateFunds(*args)
    def ReallyUpdateFunds(*args): return _micropolis.Micropolis_ReallyUpdateFunds(*args)
    def doTimeStuff(*args): return _micropolis.Micropolis_doTimeStuff(*args)
    def updateDate(*args): return _micropolis.Micropolis_updateDate(*args)
    def showValves(*args): return _micropolis.Micropolis_showValves(*args)
    def drawValve(*args): return _micropolis.Micropolis_drawValve(*args)
    def SetDemand(*args): return _micropolis.Micropolis_SetDemand(*args)
    def updateOptions(*args): return _micropolis.Micropolis_updateOptions(*args)
    def UpdateOptionsMenu(*args): return _micropolis.Micropolis_UpdateOptionsMenu(*args)
    def makeDollarDecimalStr(*args): return _micropolis.Micropolis_makeDollarDecimalStr(*args)
    def Pause(*args): return _micropolis.Micropolis_Pause(*args)
    def Resume(*args): return _micropolis.Micropolis_Resume(*args)
    def setSpeed(*args): return _micropolis.Micropolis_setSpeed(*args)
    def setSkips(*args): return _micropolis.Micropolis_setSkips(*args)
    def SetGameLevelFunds(*args): return _micropolis.Micropolis_SetGameLevelFunds(*args)
    def SetGameLevel(*args): return _micropolis.Micropolis_SetGameLevel(*args)
    def UpdateGameLevel(*args): return _micropolis.Micropolis_UpdateGameLevel(*args)
    def setCityName(*args): return _micropolis.Micropolis_setCityName(*args)
    def setAnyCityName(*args): return _micropolis.Micropolis_setAnyCityName(*args)
    def SetYear(*args): return _micropolis.Micropolis_SetYear(*args)
    def CurrentYear(*args): return _micropolis.Micropolis_CurrentYear(*args)
    def DoSetMapState(*args): return _micropolis.Micropolis_DoSetMapState(*args)
    def DoNewGame(*args): return _micropolis.Micropolis_DoNewGame(*args)
    def DoGeneratedCityImage(*args): return _micropolis.Micropolis_DoGeneratedCityImage(*args)
    def DoPopUpMessage(*args): return _micropolis.Micropolis_DoPopUpMessage(*args)
    def DoZone(*args): return _micropolis.Micropolis_DoZone(*args)
    def DoHospChur(*args): return _micropolis.Micropolis_DoHospChur(*args)
    def SetSmoke(*args): return _micropolis.Micropolis_SetSmoke(*args)
    def DoIndustrial(*args): return _micropolis.Micropolis_DoIndustrial(*args)
    def DoCommercial(*args): return _micropolis.Micropolis_DoCommercial(*args)
    def DoResidential(*args): return _micropolis.Micropolis_DoResidential(*args)
    def MakeHosp(*args): return _micropolis.Micropolis_MakeHosp(*args)
    def GetCRVal(*args): return _micropolis.Micropolis_GetCRVal(*args)
    def DoResIn(*args): return _micropolis.Micropolis_DoResIn(*args)
    def DoComIn(*args): return _micropolis.Micropolis_DoComIn(*args)
    def DoIndIn(*args): return _micropolis.Micropolis_DoIndIn(*args)
    def IncROG(*args): return _micropolis.Micropolis_IncROG(*args)
    def DoResOut(*args): return _micropolis.Micropolis_DoResOut(*args)
    def DoComOut(*args): return _micropolis.Micropolis_DoComOut(*args)
    def DoIndOut(*args): return _micropolis.Micropolis_DoIndOut(*args)
    def RZPop(*args): return _micropolis.Micropolis_RZPop(*args)
    def CZPop(*args): return _micropolis.Micropolis_CZPop(*args)
    def IZPop(*args): return _micropolis.Micropolis_IZPop(*args)
    def BuildHouse(*args): return _micropolis.Micropolis_BuildHouse(*args)
    def ResPlop(*args): return _micropolis.Micropolis_ResPlop(*args)
    def ComPlop(*args): return _micropolis.Micropolis_ComPlop(*args)
    def IndPlop(*args): return _micropolis.Micropolis_IndPlop(*args)
    def EvalLot(*args): return _micropolis.Micropolis_EvalLot(*args)
    def ZonePlop(*args): return _micropolis.Micropolis_ZonePlop(*args)
    def EvalRes(*args): return _micropolis.Micropolis_EvalRes(*args)
    def EvalCom(*args): return _micropolis.Micropolis_EvalCom(*args)
    def EvalInd(*args): return _micropolis.Micropolis_EvalInd(*args)
    def DoFreePop(*args): return _micropolis.Micropolis_DoFreePop(*args)
    def SetZPower(*args): return _micropolis.Micropolis_SetZPower(*args)
Micropolis_swigregister = _micropolis.Micropolis_swigregister
Micropolis_swigregister(Micropolis)
cvar = _micropolis.cvar



